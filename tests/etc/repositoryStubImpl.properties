javax.jcr.tck.repository_stub_impl=org.apache.jackrabbit.test.PrihaRepositoryStub
testroot = /testroot
javax.jcr.tck.testroot=/testroot
javax.jcr.tck.nodename1=TestNode
javax.jcr.tck.nodename2=TestNode2
javax.jcr.tck.nodename3=TestNode3
javax.jcr.tck.nodename4=TestNode4
javax.jcr.tck.propertyname1=aaa
javax.jcr.tck.propertyname2=bbb
javax.jcr.tck.propertyname3=ccc
javax.jcr.tck.workspacename=testworkspace
javax.jcr.tck.nodetype=nt:unstructured
javax.jcr.tck.nodetypenochildren=nt:base

javax.jcr.tck.sameNameSibsTrueNodeType=nt:unstructured
javax.jcr.tck.sameNameSibsFalseNodeType=test:sameNameSibsFalseChildNodeDefinition

javax.jcr.tck.SessionTest.testSaveContstraintViolationException.nodetype2=nt:linkedFile
javax.jcr.tck.NodeTest.testSaveContstraintViolationException.nodetype2=nt:linkedFile

javax.jcr.tck.versionableNodeType=nt:unstructured
javax.jcr.tck.propertyValue=Gobble

# A nodetype with mandatory referenceability
javax.jcr.tck.SetPropertyNodeTest.nodetype=priha:referenceable

# A nodetype with a mandatory child node
javax.jcr.tck.NodeTest.testRemoveMandatoryNode.nodetype2=nt:file
# The child of the previous
javax.jcr.tck.NodeTest.testRemoveMandatoryNode.nodetype3=nt:unstructured
# The name of the previous
javax.jcr.tck.NodeTest.testRemoveMandatoryNode.nodename3=jcr:content

# Not allowing same name sibs
javax.jcr.tck.NodeTest.testAddNodeItemExistsException.nodetype=test:sameNameSibsFalseChildNodeDefinition

#javax.jcr.tck.NodeTest.nodetype=priha:referenceable

#
javax.jcr.tck.NodeUUIDTest.nodetype=priha:referenceable
javax.jcr.tck.NodeUUIDTest.propertyname1=ref
javax.jcr.tck.NodeUUIDTest.nodetype2=priha:referenceable

# Configuration settings for the serialization.
# Note that the serialization test tries to use as many features of the repository
# as possible, but fails silently if a feature is not available. You have to
# specify all of the following configuration entries, even if your repository does
# not support the feature that is associated with them.

# Root node for the example tree
javax.jcr.tck.SerializationTest.testroot=/testdata/serialization

# Node type to use for the example tree. Specify a node type that allows complex trees and all property types if possible
javax.jcr.tck.SerializationTest.nodetype=nt:unstructured

# Name of the nodes for source and target tree
javax.jcr.tck.SerializationTest.sourceFolderName=source
javax.jcr.tck.SerializationTest.targetFolderName=target
javax.jcr.tck.SerializationTest.rootNodeName=test

# List the properties whose values may change during serialization/deserialization. For example,
# the UUID of a node is unique in the repository, so it will have to change when you re-import
# a tree at a different location.
javax.jcr.tck.SerializationTest.propertyValueMayChange= jcr:created jcr:uuid jcr:versionHistory jcr:baseVersion jcr:predecessors P_Reference

# List all properties which are skipped during xml import according specification chapter 7.3.3
javax.jcr.tck.SerializationTest.propertySkipped=

# The name of the test node types. For easier diagnostics, the node types have names
# that tell you the kind of information they store
javax.jcr.tck.SerializationTest.nodeTypesTestNode=NodeTypes
javax.jcr.tck.SerializationTest.mixinTypeTestNode=MixinTypes
javax.jcr.tck.SerializationTest.propertyTypesTestNode=PropertyTypes
javax.jcr.tck.SerializationTest.sameNameChildrenTestNode=SameNameChildren
javax.jcr.tck.SerializationTest.multiValuePropertiesTestNode=MultiValueProperties
javax.jcr.tck.SerializationTest.referenceableNodeTestNode=ReferenceableNode
javax.jcr.tck.SerializationTest.orderChildrenTestNode=OrderChildren
javax.jcr.tck.SerializationTest.namespaceTestNode=Namespace

# The name of the test property types.
javax.jcr.tck.SerializationTest.stringTestProperty=P_String
javax.jcr.tck.SerializationTest.binaryTestProperty=P_Binary
javax.jcr.tck.SerializationTest.dateTestProperty=P_Date
javax.jcr.tck.SerializationTest.longTestProperty=P_Long
javax.jcr.tck.SerializationTest.doubleTestProperty=P_Double
javax.jcr.tck.SerializationTest.booleanTestProperty=P_Boolean
javax.jcr.tck.SerializationTest.nameTestProperty=P_Name
javax.jcr.tck.SerializationTest.pathTestProperty=P_Path
javax.jcr.tck.SerializationTest.referenceTestProperty=P_Reference
javax.jcr.tck.SerializationTest.multiValueTestProperty=P_MultiValue

# node type not allowing same name sibs
javax.jcr.tck.SerializationTest.sameNameSibsFalseChildNodeDefinition=test:sameNameSibsFalseChildNodeDefinition

# Test method: testVersioningExceptionSessionFileChild
# specified nodetype must be versionable and allow child nodes of the same type.
javax.jcr.tck.SerializationTest.testVersioningExceptionSessionFileChild.nodetype=test:versionable

# Test method: testVersioningExceptionSessionFileParent
# specified nodetype must be versionable and allow child nodes of the same type.
javax.jcr.tck.SerializationTest.testVersioningExceptionSessionFileParent.nodetype=test:versionable

# Test method: testSessionImportXmlOverwriteException
# requires a node type that does not allow same name siblings
javax.jcr.tck.SerializationTest.testSessionImportXmlOverwriteException.nodetype=nt:folder

# The name of the test node types. For easier diagnostics, the node types have names
# that tell you the kind of information they store
javax.jcr.tck.SerializationTest.nodeTypesTestNode=NodeTypes
javax.jcr.tck.SerializationTest.mixinTypeTestNode=MixinTypes
javax.jcr.tck.SerializationTest.propertyTypesTestNode=PropertyTypes
javax.jcr.tck.SerializationTest.sameNameChildrenTestNode=SameNameChildren
javax.jcr.tck.SerializationTest.multiValuePropertiesTestNode=MultiValueProperties
javax.jcr.tck.SerializationTest.referenceableNodeTestNode=ReferenceableNode
javax.jcr.tck.SerializationTest.orderChildrenTestNode=OrderChildren
javax.jcr.tck.SerializationTest.namespaceTestNode=Namespace

# Test class: ExportSysViewTest
javax.jcr.tck.ExportSysViewTest.testroot=/testdata

# Priha does not support orderable child nodes, so we give just a nodetype
javax.jcr.tck.NodeOrderableChildNodesTest.nodetype2=priha:referenceable

