/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. /Users/jalkanen/Documents/Eclipse/priha/src/generated-sources/org/priha/query/aqt/xpath/XPath.jj */
/*@egen*/options {

	  
          STATIC = false;
	               
	                                                           
	                         
	                         
	
}


    PARSER_BEGIN(XPath)


	package org.priha.query.aqt.xpath;
	
import java.io.*;		
import java.util.Stack;
import java.util.Vector;

public class XPath/*@bgen(jjtree)*/implements XPathTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected JJTXPathState jjtree = new JJTXPathState();

/*@egen*/
      

      boolean m_isMatchPattern = false;
      boolean isStep = false;

		  Stack binaryTokenStack = new Stack();
		  
		  public Node createNode(int id) {
			  return null;
		  }
		  
		  
		  
		  public static void main(String args[])
		     throws Exception
		  {
         int numberArgsLeft = args.length;
         int argsStart = 0;
         boolean isMatchParser = false;
         if(numberArgsLeft > 0)
         {
           if(args[argsStart].equals("-match"))
           {
             isMatchParser = true;
             System.out.println("Match Pattern Parser");
             argsStart++;
             numberArgsLeft--;
           }
         }
		     if(numberArgsLeft > 0)
		    {
			try
			{
        final boolean dumpTree = true;
        if(args[0].endsWith(".xquery"))
        {
          System.out.println("Running test for: "+args[0]);
          File file = new File(args[0]);
          FileInputStream fis = new FileInputStream(file);
          XPath parser = new XPath(fis);
          SimpleNode tree = parser.XPath2();
          if(dumpTree)
            tree.dump("|") ;
        }
        else
        {
				for(int i = argsStart; i < args.length; i++)
				{
					System.out.println();
					System.out.println("Test["+i+"]: "+args[i]);
					XPath parser = new XPath(new java.io.StringBufferInputStream(args[i]));
          SimpleNode tree;
          if(isMatchParser)
          {
					tree = parser.XPath2();
          }
          else
          {
					tree = parser.XPath2();
          }
					((SimpleNode)tree.jjtGetChild(0)).dump("|") ;
				}
				System.out.println("Success!!!!");
        }
			}
			catch(ParseException pe)
			{
				System.err.println(pe.getMessage());
			}
			return;
		   }
		    java.io.DataInputStream dinput = new java.io.DataInputStream(System.in);
		    while(true)
		    {
			  try
			  {
			      System.err.println("Type Expression: ");
			      String input =  dinput.readLine(); 
			      if(null == input || input.trim().length() == 0)
			        break;  
			      XPath parser = new XPath(new java.io.StringBufferInputStream(input));
          SimpleNode tree;
          if(isMatchParser)
          {
					tree = parser.XPath2();
          }
          else
          {
					tree = parser.XPath2();
          }
			      ((SimpleNode)tree.jjtGetChild(0)).dump("|") ;
			  }
			  catch(ParseException pe)
			  {
			  	System.err.println(pe.getMessage());
			  }
			  catch(Exception e)
			  {
			  	System.err.println(e.getMessage());
			  }
		    }		    
		  }
		}

    PARSER_END(XPath)

	

TOKEN_MGR_DECLS : {
  private Stack stateStack = new Stack();
  // private Vector persistentLexStates  = new Vector();
  static final int PARENMARKER = 2000;
  
  /**
   * Push the current state onto the state stack.
   */
  private void pushState()
  {
    // System.err.println("pushing: "+curLexState); printLinePos();
    stateStack.addElement(new Integer(curLexState));
  }
  
  /**
   * Push the given state onto the state stack.
   * @param state Must be a valid state.
   */
  private void pushState(int state)
  {
    stateStack.push(new Integer(state));
  }
  
  /**
   * Pop the state on the state stack, and switch to that state.
   */
  private void popState()
  {
    if (stateStack.size() == 0)
    {
      printLinePos();
    }

    int nextState = ((Integer) stateStack.pop()).intValue();
    // System.err.println("pop "+nextState); printLinePos();
    if(nextState == PARENMARKER)
      printLinePos();
    SwitchTo(nextState);
  }
  
  /**
   * Push the given state onto the state stack.
   * @param state Must be a valid state.
   */
  private boolean isState(int state)
  {
	for (int i = 0; i < stateStack.size(); i++) {
        if(((Integer) stateStack.elementAt(i)).intValue() == state)
        {
        	return true;
        }
	}
	return false;
  }

  /**
   * Push a parenthesis state.  This pushes, in addition to the 
   * lexical state value, a special marker that lets 
   * resetParenStateOrSwitch(int state)
   * know if it should pop and switch.  Used for the comma operator.
   */
  private void pushParenState(int commaState, int rparState)
  {
    stateStack.push(new Integer(rparState));
    stateStack.push(new Integer(commaState));
    stateStack.push(new Integer(PARENMARKER));
    SwitchTo(commaState);
  }


  /**
   * Print the current line position.
   */
  public void printLinePos()
  {
    System.err.println("Line: " + input_stream.getEndLine());
  }
}


		SimpleNode XPath2() :
		{/*@bgen(jjtree) XPath2 */
  SimpleNode jjtn000 = new SimpleNode(this, JJTXPATH2);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
		{/*@bgen(jjtree) XPath2 */
                  try {
/*@egen*/
		  QueryList()<EOF>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/
		  { return jjtn000 ; }/*@bgen(jjtree)*/
                  } catch (Throwable jjte000) {
                    if (jjtc000) {
                      jjtree.clearNodeScope(jjtn000);
                      jjtc000 = false;
                    } else {
                      jjtree.popNode();
                    }
                    if (jjte000 instanceof RuntimeException) {
                      throw (RuntimeException)jjte000;
                    }
                    if (jjte000 instanceof ParseException) {
                      throw (ParseException)jjte000;
                    }
                    throw (Error)jjte000;
                  } finally {
                    if (jjtc000) {
                      jjtree.closeNodeScope(jjtn000, true);
                    }
                  }
/*@egen*/
		}
      
<DEFAULT>
TOKEN :
{
 < IntegerLiteral : <Digits> > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DecimalLiteral : (("." <Digits>) | (<Digits> "." (["0" - "9"])*)) > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DoubleLiteral : (("." <Digits>) | (<Digits> ("." (["0" - "9"])*)?)) ["e", "E"] (["+", "-"])? <Digits> > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < StringLiteral : (("\"" ((("\"" "\"") | ~
							["\""]
						))* "\"") | ("'" ((("'" "'") | ~
							["'"]
						))* "'")) > : OPERATOR
}

<KINDTESTFORPI>
TOKEN :
{
 < StringLiteralForKindTest : (("\"" ((("\"" "\"") | ~
							["\""]
						))* "\"") | ("'" ((("'" "'") | ~
							["'"]
						))* "'")) > : KINDTESTFORPI
}

<DEFAULT>
TOKEN :
{
 < XQueryVersion : "xquery" (<skip_>)* "version" > : XQUERYVERSION
}

<XQUERYVERSION>
TOKEN :
{
 < StringLiteralForVersion : (("\"" ((("\"" "\"") | ~
							["\""]
						))* "\"") | ("'" ((("'" "'") | ~
							["'"]
						))* "'")) > : XQUERYVERSION
}

<XQUERYVERSION>
TOKEN :
{
 < XQueryEncoding : "encoding" > : XQUERYVERSION
}

<DEFAULT>
TOKEN :
{
 < AtStringLiteral : "at" (<skip_>)* <URLLiteral> > : DEFAULT
}

<NAMESPACEDECL>
TOKEN :
{
 < URLLiteral : (("\"" ((("\"" "\"") | ~
							["\""]
						))* "\"") | ("'" ((("'" "'") | ~
							["'"]
						))* "'")) > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < ModuleNamespace : "module" (<skip_>)* "namespace" > : NAMESPACEDECL
}
<DEFAULT, OPERATOR, KINDTEST, NAMESPACEDECL, XMLSPACE_DECL, SINGLETYPE, ITEMTYPE, NAMESPACEKEYWORD, VARNAME, OCCURRENCEINDICATOR, CLOSEKINDTEST, XQUERYVERSION>
SKIP:
{
  < <skip_>>
}

TOKEN :
{
  < #skip_ : (((<WhitespaceChar>)+ )) >
}


<OCCURRENCEINDICATOR>
SKIP :
{
 < NotOccurrenceIndicator : ~
			["*", "?", "+"]
		 > { input_stream.backup(1); } : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < ProcessingInstructionStart : "<?" > { pushState(OPERATOR); } : PROCESSING_INSTRUCTION
}

<ELEMENT_CONTENT>
TOKEN :
{
 < ProcessingInstructionStartForElementContent : "<?" > { pushState(); } : PROCESSING_INSTRUCTION
}

<PROCESSING_INSTRUCTION>
TOKEN :
{
 < ProcessingInstructionEnd : "?>" > { popState(); }
}

<DEFAULT>
TOKEN :
{
 < AxisChild : "child" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisDescendant : "descendant" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisParent : "parent" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisAttribute : "attribute" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisSelf : "self" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisDescendantOrSelf : "descendant-or-self" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisAncestor : "ancestor" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisFollowingSibling : "following-sibling" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisPrecedingSibling : "preceding-sibling" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisFollowing : "following" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisPreceding : "preceding" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AxisAncestorOrSelf : "ancestor-or-self" (<skip_>)* "::" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < DefineFunction : "declare" (<skip_>)+ "function" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < DeclareOrdering : "declare" (<skip_>)+ "ordering" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Ordered : "ordered" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Unordered : "unordered" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < DeclareDefaultOrderingEmpty : "declare" (<skip_>)+ "default" (<skip_>)+ "order" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DeclareInheritNamespaces : "declare" (<skip_>)+ "inherit-namespaces" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Yes : "yes" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < No : "no" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < External : "external" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Or : "or" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < And : "and" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Div : "div" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Idiv : "idiv" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Mod : "mod" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Multiply : "*" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < In : "in" > : DEFAULT
}

<PROCESSING_INSTRUCTION>
TOKEN :
{
 < PITarget : <NCName> > : PROCESSING_INSTRUCTION
}

TOKEN :
{
 < #Prefix : <NCName> >
}

TOKEN :
{
 < #LocalPart : <NCName> >
}

<DEFAULT>
TOKEN :
{
 < VariableIndicator : "$" > : VARNAME
}

<VARNAME>
TOKEN :
{
 < VarName : <QName> > : OPERATOR
}

TOKEN :
{
 < #ValidationMode : ("lax" | "strict") >
}

<OPERATOR>
TOKEN :
{
 < SchemaModeForDeclareConstruction : ("preserve" | "strip") > : DEFAULT
}

<CLOSEKINDTEST>
TOKEN :
{
 < Nillable : "?" > : CLOSEKINDTEST
}

<DEFAULT>
TOKEN :
{
 < DeclareConstruction : "declare" (<skip_>)+ "construction" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Satisfies : "satisfies" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Return : "return" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Then : "then" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Else : "else" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Default : "default" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DeclareXMLSpace : "declare" (<skip_>)+ "xmlspace" > : XMLSPACE_DECL
}

<DEFAULT>
TOKEN :
{
 < DeclareBaseURI : "declare" (<skip_>)+ "base-uri" > : NAMESPACEDECL
}

<XMLSPACE_DECL>
TOKEN :
{
 < XMLSpacePreserve : "preserve" > : DEFAULT
}

<XMLSPACE_DECL>
TOKEN :
{
 < XMLSpaceStrip : "strip" > : DEFAULT
}

<NAMESPACEKEYWORD>
TOKEN :
{
 < Namespace : "namespace" > : NAMESPACEDECL
}

<DEFAULT>
TOKEN :
{
 < DeclareNamespace : "declare" (<skip_>)+ "namespace" > : NAMESPACEDECL
}

<OPERATOR>
TOKEN :
{
 < To : "to" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Where : "where" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Collation : "collation" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Intersect : "intersect" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Union : "union" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Except : "except" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < As : "as" > : ITEMTYPE
}

<OPERATOR>
TOKEN :
{
 < AtWord : "at" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Case : "case" > : ITEMTYPE
}

<OPERATOR>
TOKEN :
{
 < Instanceof : "instance" (<skip_>)+ "of" > : ITEMTYPE
}

<OPERATOR>
TOKEN :
{
 < Castable : "castable" (<skip_>)+ "as" > : SINGLETYPE
}

<DEFAULT>
TOKEN :
{
 < RparAs : ")" (<skip_>)* "as" > : ITEMTYPE
}

<ITEMTYPE>
TOKEN :
{
 < Item : "item" (<skip_>)* "(" (<skip_>)* ")" > : OCCURRENCEINDICATOR
}

<DEFAULT>
TOKEN :
{
 < ElementType : "element" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < AttributeType : "attribute" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < SchemaElementType : "schema-element" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < SchemaAttributeType : "schema-attribute" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < OrderedOpen : "ordered" (<skip_>)* "{" > { pushState(OPERATOR); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < UnorderedOpen : "unordered" (<skip_>)* "{" > { pushState(OPERATOR); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < ElementQNameLbrace : "element" (<skip_>)+ <QName> (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < AttributeQNameLbrace : "attribute" (<skip_>)+ <QName> (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < PINCNameLbrace : "processing-instruction" (<skip_>)+ <NCName> (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < PILbrace : "processing-instruction" (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < CommentLbrace : "comment" (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < ElementLbrace : "element" (<skip_>)* "{" > { pushState(OPERATOR); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < AttributeLbrace : "attribute" (<skip_>)* "{" > { pushState(OPERATOR); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < TextLbrace : "text" (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < DeclareCollation : "declare" (<skip_>)+ "default" (<skip_>)+ "collation" > : NAMESPACEDECL
}

<NAMESPACEKEYWORD>
TOKEN :
{
 < DefaultElement : "default" (<skip_>)+ "element" > : NAMESPACEKEYWORD
}

<DEFAULT>
TOKEN :
{
 < DeclareDefaultElement : "declare" (<skip_>)+ "default" (<skip_>)+ "element" > : NAMESPACEKEYWORD
}

<DEFAULT>
TOKEN :
{
 < DeclareDefaultFunction : "declare" (<skip_>)+ "default" (<skip_>)+ "function" > : NAMESPACEKEYWORD
}

<ITEMTYPE>
TOKEN :
{
 < EmptyTok : "empty" (<skip_>)* "(" (<skip_>)* ")" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < ImportSchemaToken : "import" (<skip_>)+ "schema" > : NAMESPACEKEYWORD
}

<DEFAULT>
TOKEN :
{
 < ImportModuleToken : "import" (<skip_>)+ "module" > : NAMESPACEKEYWORD
}

TOKEN :
{
 < #Nmstart : (<Letter> | "_") >
}

TOKEN :
{
 < #Nmchar : (<Letter> | <CombiningChar> | <Extender> | <Digit> | "." | "-" | "_") >
}

<DEFAULT>
TOKEN :
{
 < Star : "*" > : OPERATOR
}

<KINDTEST>
TOKEN :
{
 < AnyName : "*" > : CLOSEKINDTEST
}

<DEFAULT>
TOKEN :
{
 < NCNameColonStar : <NCName> ":" "*" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < StarColonNCName : "*" ":" <NCName> > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < Root : "/" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < RootDescendants : "//" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Slash : "/" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < SlashSlash : "//" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Equals : "=" > : DEFAULT
}

<NAMESPACEDECL>
TOKEN :
{
 < AssignEquals : "=" > : NAMESPACEDECL
}

<OPERATOR>
TOKEN :
{
 < Is : "is" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < NotEquals : "!=" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < LtEquals : "<=" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < LtLt : "<<" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < GtEquals : ">=" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < GtGt : ">>" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranEq : "eq" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranNe : "ne" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranGt : "gt" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranGe : "ge" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranLt : "lt" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < FortranLe : "le" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < ColonEquals : ":=" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Lt : "<" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Gt : ">" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Minus : "-" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Plus : "+" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < UnaryMinus : "-" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < UnaryPlus : "+" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < OccurrenceZeroOrOne : "?" > : OPERATOR
}

<OCCURRENCEINDICATOR>
TOKEN :
{
 < OccurrenceZeroOrMore : "*" > : OPERATOR
}

<OCCURRENCEINDICATOR>
TOKEN :
{
 < OccurrenceOneOrMore : "+" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Vbar : "|" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < Lpar : "(" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < At : "@" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Lbrack : "[" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Rbrack : "]" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < Rpar : ")" > : OPERATOR
}

<KINDTEST>
TOKEN :
{
 < RparForKindTest : ")" > { popState(); }
}

<DEFAULT>
TOKEN :
{
 < Some : "some" (<skip_>)* <VariableIndicator> > : VARNAME
}

<DEFAULT>
TOKEN :
{
 < Every : "every" (<skip_>)* <VariableIndicator> > : VARNAME
}

<DEFAULT>
TOKEN :
{
 < ForVariable : "for" (<skip_>)* <VariableIndicator> > : VARNAME
}

<DEFAULT>
TOKEN :
{
 < LetVariable : "let" (<skip_>)* <VariableIndicator> > : VARNAME
}

<OPERATOR>
TOKEN :
{
 < CastAs : "cast" (<skip_>)+ "as" > : SINGLETYPE
}

<OPERATOR>
TOKEN :
{
 < TreatAs : "treat" (<skip_>)+ "as" > : ITEMTYPE
}

<DEFAULT>
TOKEN :
{
 < ValidateLbrace : "validate" (<skip_>)* "{" > { pushState(OPERATOR); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < ValidateSchemaMode : "validate" (<skip_>)+ <ValidationMode> > { pushState(OPERATOR); } : DEFAULT
}

TOKEN :
{
 < #Digits : (["0" - "9"])+  >
}

<DEFAULT>
TOKEN :
{
 < DocumentLpar : "document-node" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < DocumentLparForKindTest : "document-node" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < DocumentLbrace : "document" (<skip_>)* "{" > { pushState(OPERATOR); }
}

<DEFAULT>
TOKEN :
{
 < NodeLpar : "node" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < CommentLpar : "comment" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < TextLpar : "text" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < ProcessingInstructionLpar : "processing-instruction" (<skip_>)* "(" > { pushState(OPERATOR); } : KINDTESTFORPI
}

<ITEMTYPE>
TOKEN :
{
 < ElementTypeForKindTest : "element" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<KINDTEST>
TOKEN :
{
 < ElementTypeForDocumentTest : "element" (<skip_>)* "(" > { pushState(KINDTEST); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < AttributeTypeForKindTest : "attribute" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < SchemaElementTypeForKindTest : "schema-element" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<KINDTEST>
TOKEN :
{
 < SchemaElementTypeForDocumentTest : "schema-element" (<skip_>)* "(" > { pushState(KINDTEST); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < SchemaAttributeTypeForKindTest : "schema-attribute" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < ProcessingInstructionLparForKindTest : "processing-instruction" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTESTFORPI
}

<ITEMTYPE>
TOKEN :
{
 < TextLparForKindTest : "text" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < CommentLparForKindTest : "comment" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<ITEMTYPE>
TOKEN :
{
 < NodeLparForKindTest : "node" (<skip_>)* "(" > { pushState(OCCURRENCEINDICATOR); } : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < IfLpar : "if" (<skip_>)* "(" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < TypeswitchLpar : "typeswitch" (<skip_>)* "(" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < Comma : "," > : DEFAULT
}

<CLOSEKINDTEST>
TOKEN :
{
 < CommaForKindTest : "," > : KINDTEST
}

<DEFAULT>
TOKEN :
{
 < SemiColon : ";" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < QuerySeparator : "%%%" > : DEFAULT
}

<START_TAG>
TOKEN :
{
 < OpenQuot : "\"" > : QUOT_ATTRIBUTE_CONTENT
}

<QUOT_ATTRIBUTE_CONTENT>
TOKEN :
{
 < CloseQuot : "\"" > : START_TAG
}

<DEFAULT>
TOKEN :
{
 < Dot : "." > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DotDot : ".." > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < OrderBy : "order" (<skip_>)+ "by" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < OrderByStable : "stable" (<skip_>)+ "order" (<skip_>)+ "by" > : DEFAULT
}

<OPERATOR>
TOKEN :
{
 < Ascending : "ascending" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < Descending : "descending" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < EmptyGreatest : "empty" (<skip_>)+ "greatest" > : OPERATOR
}

<OPERATOR>
TOKEN :
{
 < EmptyLeast : "empty" (<skip_>)+ "least" > : OPERATOR
}

<DEFAULT>
TOKEN :
{
 < DefineVariable : "declare" (<skip_>)+ "variable" (<skip_>)* <VariableIndicator> > : VARNAME
}

<ITEMTYPE>
TOKEN :
{
 < QNameForSequenceType : (<Prefix> ":")? <LocalPart> > : OCCURRENCEINDICATOR
}

<SINGLETYPE>
TOKEN :
{
 < QNameForAtomicType : (<Prefix> ":")? <LocalPart> > : OPERATOR
}

<KINDTEST>
TOKEN :
{
 < QNameForItemType : (<Prefix> ":")? <LocalPart> > : CLOSEKINDTEST
}

<EXT_NAME>
SPECIAL_TOKEN :
{
 < ExtensionQName : (<Prefix> ":")? <LocalPart> > : EXT_CONTENT
}

<DEFAULT>
TOKEN :
{
 < QNameLpar : <QName> (<skip_>)* "(" > : DEFAULT
}

<NAMESPACEDECL>
TOKEN :
{
 < NCNameForPrefix : <Nmstart> (<Nmchar>)* > : NAMESPACEDECL
}

<KINDTESTFORPI>
TOKEN :
{
 < NCNameForPI : <Nmstart> (<Nmchar>)* > : KINDTESTFORPI
}

<DEFAULT>
TOKEN :
{
 < CdataSectionStart : "<![CDATA[" > { pushState(OPERATOR); } : CDATA_SECTION
}

<ELEMENT_CONTENT>
TOKEN :
{
 < CdataSectionStartForElementContent : "<![CDATA[" > { pushState(); } : CDATA_SECTION
}

<CDATA_SECTION>
TOKEN :
{
 < CdataSectionEnd : ("]" "]" ">") > { popState(); }
}

<ELEMENT_CONTENT>
TOKEN :
{
 < PredefinedEntityRef : "&" ("lt" | "gt" | "amp" | "quot" | "apos") ";" >
}

<ELEMENT_CONTENT>
TOKEN :
{
 < CharRef : "&#" (<Digits> | ("x" <HexDigits>)) ";" >
}

TOKEN :
{
 < #HexDigits : (["0" - "9", "a" - "f", "A" - "F"])+  >
}

<ELEMENT_CONTENT>
TOKEN :
{
 < StartTagOpen : "<" > { pushState(); } : START_TAG
}

<DEFAULT>
TOKEN :
{
 < StartTagOpenRoot : "<" > { pushState(OPERATOR); } : START_TAG
}

<START_TAG>
TOKEN :
{
 < StartTagClose : ">" > : ELEMENT_CONTENT
}

<START_TAG>
TOKEN :
{
 < EmptyTagClose : "/>" > { popState(); }
}

<ELEMENT_CONTENT>
TOKEN :
{
 < EndTagOpen : "</" > : END_TAG
}

<END_TAG>
TOKEN :
{
 < EndTagClose : ">" > { popState(); }
}

<START_TAG>
TOKEN :
{
 < ValueIndicator : "=" > : START_TAG
}

<START_TAG>
TOKEN :
{
 < TagQName : <QName> >
}

<ELEMENT_CONTENT>
TOKEN :
{
 < Lbrace : "{" > { pushState(); } : DEFAULT
}

<DEFAULT>
TOKEN :
{
 < LbraceExprEnclosure : "{" > { pushState(OPERATOR); } : DEFAULT
}

<ELEMENT_CONTENT>
TOKEN :
{
 < LCurlyBraceEscape : "{{" >
}

<ELEMENT_CONTENT>
TOKEN :
{
 < RCurlyBraceEscape : "}}" >
}

<QUOT_ATTRIBUTE_CONTENT>
TOKEN :
{
 < EscapeQuot : "\"\"" > : QUOT_ATTRIBUTE_CONTENT
}

<APOS_ATTRIBUTE_CONTENT>
TOKEN :
{
 < EscapeApos : "''" > : APOS_ATTRIBUTE_CONTENT
}

<ELEMENT_CONTENT>
TOKEN :
{
 < ElementContentChar : <Char> > : ELEMENT_CONTENT
}

<QUOT_ATTRIBUTE_CONTENT>
TOKEN :
{
 < QuotAttrContentChar : <Char> > : QUOT_ATTRIBUTE_CONTENT
}

<APOS_ATTRIBUTE_CONTENT>
TOKEN :
{
 < AposAttrContentChar : <Char> > : APOS_ATTRIBUTE_CONTENT
}

<XML_COMMENT>
TOKEN :
{
 < CommentContentChar : <Char> > : XML_COMMENT
}

<XML_COMMENT>
TOKEN :
{
 < CommentContentCharDash : "-" <Char> > : XML_COMMENT
}

<PROCESSING_INSTRUCTION_CONTENT>
TOKEN :
{
 < PIContentChar : ["\t", "\r", "\n", " " - "\ufffd"] > : PROCESSING_INSTRUCTION_CONTENT
}

<CDATA_SECTION>
TOKEN :
{
 < CDataSectionChar : ["\t", "\r", "\n", " " - "\ufffd"] > : CDATA_SECTION
}

<START_TAG>
TOKEN :
{
 < OpenApos : "'" > : APOS_ATTRIBUTE_CONTENT
}

<APOS_ATTRIBUTE_CONTENT>
TOKEN :
{
 < CloseApos : "'" > : START_TAG
}

SPECIAL_TOKEN :
{
 < #Pragma : <ExtensionStart> (<SForExt>)? <PragmaKeyword> <SForExt> <ExtensionQName> (<SForExt> <ExtensionContents>)? <ExtensionEnd> >
}

SPECIAL_TOKEN :
{
 < #MUExtension : <ExtensionStart> (<SForExt>)? <Extension> <SForExt> <ExtensionQName> (<SForExt> <ExtensionContents>)? <ExtensionEnd> >
}

SPECIAL_TOKEN :
{
 < #ExtensionContents : (<ExtensionContentChar>)* >
}

<DEFAULT>
SPECIAL_TOKEN :
{
 < ExtensionStart : "(::" > { pushState(); } : EXT_KEY
}

<EXT_CONTENT>
SPECIAL_TOKEN :
{
 < ExtensionContentChar : <Char> >
}

<EXT_CONTENT>
SPECIAL_TOKEN :
{
 < ExtensionEnd : "::)" > { popState(); }
}

SKIP :
{
 < #Comment : <CommentStart> ((<CommentContents>))* <CommentEnd> >
}

SPECIAL_TOKEN :
{
 < #CommentContents : (<CommentContent>)+  >
}

<DEFAULT>
SPECIAL_TOKEN :
{
 < CommentStart : "(:" > { pushState(); } : EXPR_COMMENT
}

<EXPR_COMMENT>
SPECIAL_TOKEN :
{
 < CommentContent : <Char> >
}

<EXPR_COMMENT>
SPECIAL_TOKEN :
{
 < CommentEnd : ":)" > { popState(); }
}

<EXT_KEY>
SPECIAL_TOKEN :
{
 < PragmaKeyword : "pragma" > : EXT_NAME
}

<EXT_KEY>
SPECIAL_TOKEN :
{
 < Extension : "extension" > : EXT_NAME
}

<DEFAULT>
TOKEN :
{
 < XmlCommentStart : "<!--" > { pushState(OPERATOR); } : XML_COMMENT
}

<ELEMENT_CONTENT>
TOKEN :
{
 < XmlCommentStartForElementContent : "<!--" > { pushState(); } : XML_COMMENT
}

<XML_COMMENT>
TOKEN :
{
 < XmlCommentEnd : "-->" > { popState(); }
}

<DEFAULT>
TOKEN :
{
 < QName : (<Prefix> ":")? <LocalPart> > : OPERATOR
}

TOKEN :
{
 < #NCName : <Nmstart> (<Nmchar>)* >
}

<START_TAG>
TOKEN :
{
 < S : (<WhitespaceChar>)+  >
}

<PROCESSING_INSTRUCTION>
TOKEN :
{
 < SForPI : (<WhitespaceChar>)+  > : PROCESSING_INSTRUCTION_CONTENT
}

<EXT_CONTENT>
SPECIAL_TOKEN :
{
 < SForExt : (<WhitespaceChar>)+  >
}

TOKEN :
{
 < #Char : ["\t", "\r", "\n", " " - "\ufffd"] >
}

<DEFAULT>
TOKEN :
{
 < Rbrace : "}" > { popState(); }
}

TOKEN :
{
 < #WhitespaceChar : ["\t", "\r", "\n", " "] >
}

TOKEN :
{
 < #Letter : (<BaseChar> | <Ideographic>) >
}

TOKEN :
{
 < #BaseChar : ["A" - "Z", "a" - "z", "\u00c0" - "\u00d6", "\u00d8" - "\u00f6", "\u00f8" - "\u00ff", "\u0100" - "\u0131", "\u0134" - "\u013e", "\u0141" - "\u0148", "\u014a" - "\u017e", "\u0180" - "\u01c3", "\u01cd" - "\u01f0", "\u01f4" - "\u01f5", "\u01fa" - "\u0217", "\u0250" - "\u02a8", "\u02bb" - "\u02c1", "\u0386", "\u0388" - "\u038a", "\u038c", "\u038e" - "\u03a1", "\u03a3" - "\u03ce", "\u03d0" - "\u03d6", "\u03da", "\u03dc", "\u03de", "\u03e0", "\u03e2" - "\u03f3", "\u0401" - "\u040c", "\u040e" - "\u044f", "\u0451" - "\u045c", "\u045e" - "\u0481", "\u0490" - "\u04c4", "\u04c7" - "\u04c8", "\u04cb" - "\u04cc", "\u04d0" - "\u04eb", "\u04ee" - "\u04f5", "\u04f8" - "\u04f9", "\u0531" - "\u0556", "\u0559", "\u0561" - "\u0586", "\u05d0" - "\u05ea", "\u05f0" - "\u05f2", "\u0621" - "\u063a", "\u0641" - "\u064a", "\u0671" - "\u06b7", "\u06ba" - "\u06be", "\u06c0" - "\u06ce", "\u06d0" - "\u06d3", "\u06d5", "\u06e5" - "\u06e6", "\u0905" - "\u0939", "\u093d", "\u0958" - "\u0961", "\u0985" - "\u098c", "\u098f" - "\u0990", "\u0993" - "\u09a8", "\u09aa" - "\u09b0", "\u09b2", "\u09b6" - "\u09b9", "\u09dc" - "\u09dd", "\u09df" - "\u09e1", "\u09f0" - "\u09f1", "\u0a05" - "\u0a0a", "\u0a0f" - "\u0a10", "\u0a13" - "\u0a28", "\u0a2a" - "\u0a30", "\u0a32" - "\u0a33", "\u0a35" - "\u0a36", "\u0a38" - "\u0a39", "\u0a59" - "\u0a5c", "\u0a5e", "\u0a72" - "\u0a74", "\u0a85" - "\u0a8b", "\u0a8d", "\u0a8f" - "\u0a91", "\u0a93" - "\u0aa8", "\u0aaa" - "\u0ab0", "\u0ab2" - "\u0ab3", "\u0ab5" - "\u0ab9", "\u0abd", "\u0ae0", "\u0b05" - "\u0b0c", "\u0b0f" - "\u0b10", "\u0b13" - "\u0b28", "\u0b2a" - "\u0b30", "\u0b32" - "\u0b33", "\u0b36" - "\u0b39", "\u0b3d", "\u0b5c" - "\u0b5d", "\u0b5f" - "\u0b61", "\u0b85" - "\u0b8a", "\u0b8e" - "\u0b90", "\u0b92" - "\u0b95", "\u0b99" - "\u0b9a", "\u0b9c", "\u0b9e" - "\u0b9f", "\u0ba3" - "\u0ba4", "\u0ba8" - "\u0baa", "\u0bae" - "\u0bb5", "\u0bb7" - "\u0bb9", "\u0c05" - "\u0c0c", "\u0c0e" - "\u0c10", "\u0c12" - "\u0c28", "\u0c2a" - "\u0c33", "\u0c35" - "\u0c39", "\u0c60" - "\u0c61", "\u0c85" - "\u0c8c", "\u0c8e" - "\u0c90", "\u0c92" - "\u0ca8", "\u0caa" - "\u0cb3", "\u0cb5" - "\u0cb9", "\u0cde", "\u0ce0" - "\u0ce1", "\u0d05" - "\u0d0c", "\u0d0e" - "\u0d10", "\u0d12" - "\u0d28", "\u0d2a" - "\u0d39", "\u0d60" - "\u0d61", "\u0e01" - "\u0e2e", "\u0e30", "\u0e32" - "\u0e33", "\u0e40" - "\u0e45", "\u0e81" - "\u0e82", "\u0e84", "\u0e87" - "\u0e88", "\u0e8a", "\u0e8d", "\u0e94" - "\u0e97", "\u0e99" - "\u0e9f", "\u0ea1" - "\u0ea3", "\u0ea5", "\u0ea7", "\u0eaa" - "\u0eab", "\u0ead" - "\u0eae", "\u0eb0", "\u0eb2" - "\u0eb3", "\u0ebd", "\u0ec0" - "\u0ec4", "\u0f40" - "\u0f47", "\u0f49" - "\u0f69", "\u10a0" - "\u10c5", "\u10d0" - "\u10f6", "\u1100", "\u1102" - "\u1103", "\u1105" - "\u1107", "\u1109", "\u110b" - "\u110c", "\u110e" - "\u1112", "\u113c", "\u113e", "\u1140", "\u114c", "\u114e", "\u1150", "\u1154" - "\u1155", "\u1159", "\u115f" - "\u1161", "\u1163", "\u1165", "\u1167", "\u1169", "\u116d" - "\u116e", "\u1172" - "\u1173", "\u1175", "\u119e", "\u11a8", "\u11ab", "\u11ae" - "\u11af", "\u11b7" - "\u11b8", "\u11ba", "\u11bc" - "\u11c2", "\u11eb", "\u11f0", "\u11f9", "\u1e00" - "\u1e9b", "\u1ea0" - "\u1ef9", "\u1f00" - "\u1f15", "\u1f18" - "\u1f1d", "\u1f20" - "\u1f45", "\u1f48" - "\u1f4d", "\u1f50" - "\u1f57", "\u1f59", "\u1f5b", "\u1f5d", "\u1f5f" - "\u1f7d", "\u1f80" - "\u1fb4", "\u1fb6" - "\u1fbc", "\u1fbe", "\u1fc2" - "\u1fc4", "\u1fc6" - "\u1fcc", "\u1fd0" - "\u1fd3", "\u1fd6" - "\u1fdb", "\u1fe0" - "\u1fec", "\u1ff2" - "\u1ff4", "\u1ff6" - "\u1ffc", "\u2126", "\u212a" - "\u212b", "\u212e", "\u2180" - "\u2182", "\u3041" - "\u3094", "\u30a1" - "\u30fa", "\u3105" - "\u312c", "\uac00" - "\ud7a3"] >
}

TOKEN :
{
 < #Ideographic : ["\u4e00" - "\u9fa5", "\u3007", "\u3021" - "\u3029"] >
}

TOKEN :
{
 < #CombiningChar : ["\u0300" - "\u0345", "\u0360" - "\u0361", "\u0483" - "\u0486", "\u0591" - "\u05a1", "\u05a3" - "\u05b9", "\u05bb" - "\u05bd", "\u05bf", "\u05c1" - "\u05c2", "\u05c4", "\u064b" - "\u0652", "\u0670", "\u06d6" - "\u06dc", "\u06dd" - "\u06df", "\u06e0" - "\u06e4", "\u06e7" - "\u06e8", "\u06ea" - "\u06ed", "\u0901" - "\u0903", "\u093c", "\u093e" - "\u094c", "\u094d", "\u0951" - "\u0954", "\u0962" - "\u0963", "\u0981" - "\u0983", "\u09bc", "\u09be", "\u09bf", "\u09c0" - "\u09c4", "\u09c7" - "\u09c8", "\u09cb" - "\u09cd", "\u09d7", "\u09e2" - "\u09e3", "\u0a02", "\u0a3c", "\u0a3e", "\u0a3f", "\u0a40" - "\u0a42", "\u0a47" - "\u0a48", "\u0a4b" - "\u0a4d", "\u0a70" - "\u0a71", "\u0a81" - "\u0a83", "\u0abc", "\u0abe" - "\u0ac5", "\u0ac7" - "\u0ac9", "\u0acb" - "\u0acd", "\u0b01" - "\u0b03", "\u0b3c", "\u0b3e" - "\u0b43", "\u0b47" - "\u0b48", "\u0b4b" - "\u0b4d", "\u0b56" - "\u0b57", "\u0b82" - "\u0b83", "\u0bbe" - "\u0bc2", "\u0bc6" - "\u0bc8", "\u0bca" - "\u0bcd", "\u0bd7", "\u0c01" - "\u0c03", "\u0c3e" - "\u0c44", "\u0c46" - "\u0c48", "\u0c4a" - "\u0c4d", "\u0c55" - "\u0c56", "\u0c82" - "\u0c83", "\u0cbe" - "\u0cc4", "\u0cc6" - "\u0cc8", "\u0cca" - "\u0ccd", "\u0cd5" - "\u0cd6", "\u0d02" - "\u0d03", "\u0d3e" - "\u0d43", "\u0d46" - "\u0d48", "\u0d4a" - "\u0d4d", "\u0d57", "\u0e31", "\u0e34" - "\u0e3a", "\u0e47" - "\u0e4e", "\u0eb1", "\u0eb4" - "\u0eb9", "\u0ebb" - "\u0ebc", "\u0ec8" - "\u0ecd", "\u0f18" - "\u0f19", "\u0f35", "\u0f37", "\u0f39", "\u0f3e", "\u0f3f", "\u0f71" - "\u0f84", "\u0f86" - "\u0f8b", "\u0f90" - "\u0f95", "\u0f97", "\u0f99" - "\u0fad", "\u0fb1" - "\u0fb7", "\u0fb9", "\u20d0" - "\u20dc", "\u20e1", "\u302a" - "\u302f", "\u3099", "\u309a"] >
}

TOKEN :
{
 < #Digit : ["0" - "9", "\u0660" - "\u0669", "\u06f0" - "\u06f9", "\u0966" - "\u096f", "\u09e6" - "\u09ef", "\u0a66" - "\u0a6f", "\u0ae6" - "\u0aef", "\u0b66" - "\u0b6f", "\u0be7" - "\u0bef", "\u0c66" - "\u0c6f", "\u0ce6" - "\u0cef", "\u0d66" - "\u0d6f", "\u0e50" - "\u0e59", "\u0ed0" - "\u0ed9", "\u0f20" - "\u0f29"] >
}

TOKEN :
{
 < #Extender : ["\u00b7", "\u02d0", "\u02d1", "\u0387", "\u0640", "\u0e46", "\u0ec6", "\u3005", "\u3031" - "\u3035", "\u309d" - "\u309e", "\u30fc" - "\u30fe"] >
}

<OPERATOR>
SKIP :
{
 < NotOperatorKeyword : (["0" - "9", "a" - "z", "A" - "Z"])+  >
}

<DEFAULT>
SKIP :
{
 < NotNumber : (("." <Digits>) | (<Digits> ("." (["0" - "9"])*)?)) (["e", "E"] (["+", "-"])? <Digits>)? ["a" - "z", "A" - "Z"] (["0" - "9", "a" - "z", "A" - "Z"])* > : OPERATOR
}
void QueryList()  :
{/*@bgen(jjtree) QueryList */
  SimpleNode jjtn000 = new SimpleNode(this, JJTQUERYLIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) QueryList */
  try {
/*@egen*/
  Module() (<QuerySeparator> [Module()])*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Module()  :
{/*@bgen(jjtree) Module */
  SimpleNode jjtn000 = new SimpleNode(this, JJTMODULE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Module */
  try {
/*@egen*/
  [VersionDecl()] (MainModule() | LibraryModule())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void VersionDecl()  :
{/*@bgen(jjtree) VersionDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTVERSIONDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VersionDecl */
  try {
/*@egen*/
  <XQueryVersion>/*@bgen(jjtree) #XQueryVersion( true) */
                 {
                   SimpleNode jjtn001 = new SimpleNode(this, JJTXQUERYVERSION);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                 }
                 try {
/*@egen*//*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn001,  true);
                   jjtc001 = false;
                 }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001,  true);
                   }
                 }
/*@egen*/                      <StringLiteralForVersion>/*@bgen(jjtree) #StringLiteralForVersion( true) */
                                                                                              {
                                                                                                SimpleNode jjtn002 = new SimpleNode(this, JJTSTRINGLITERALFORVERSION);
                                                                                                boolean jjtc002 = true;
                                                                                                jjtree.openNodeScope(jjtn002);
                                                                                              }
                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                              {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                                jjtc002 = false;
                                                                                              }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                              } finally {
                                                                                                if (jjtc002) {
                                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                                }
                                                                                              }
/*@egen*/                                [<XQueryEncoding>/*@bgen(jjtree) #XQueryEncoding( true) */
                                                                                                                                                                             {
                                                                                                                                                                               SimpleNode jjtn003 = new SimpleNode(this, JJTXQUERYENCODING);
                                                                                                                                                                               boolean jjtc003 = true;
                                                                                                                                                                               jjtree.openNodeScope(jjtn003);
                                                                                                                                                                             }
                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                             {
                                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               jjtc003 = false;
                                                                                                                                                                             }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                             } finally {
                                                                                                                                                                               if (jjtc003) {
                                                                                                                                                                                 jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               }
                                                                                                                                                                             }
/*@egen*/                       <StringLiteralForVersion>/*@bgen(jjtree) #StringLiteralForVersion( true) */
                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                             SimpleNode jjtn004 = new SimpleNode(this, JJTSTRINGLITERALFORVERSION);
                                                                                                                                                                                                                                                             boolean jjtc004 = true;
                                                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                           }
                                                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                             jjtc004 = false;
                                                                                                                                                                                                                                                           }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                                                             if (jjtc004) {
                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                           }
/*@egen*/                               ] Separator()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void MainModule()  :
{/*@bgen(jjtree) MainModule */
  SimpleNode jjtn000 = new SimpleNode(this, JJTMAINMODULE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) MainModule */
  try {
/*@egen*/
  Prolog() QueryBody()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void LibraryModule()  :
{/*@bgen(jjtree) LibraryModule */
  SimpleNode jjtn000 = new SimpleNode(this, JJTLIBRARYMODULE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) LibraryModule */
  try {
/*@egen*/
  ModuleDecl() Prolog()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ModuleDecl()  :
{/*@bgen(jjtree) ModuleDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTMODULEDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ModuleDecl */
  try {
/*@egen*/
  <ModuleNamespace>/*@bgen(jjtree) #ModuleNamespace( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTMODULENAMESPACE);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                        <NCNameForPrefix>/*@bgen(jjtree) #NCNameForPrefix( true) */
                                                                                          {
                                                                                            SimpleNode jjtn002 = new SimpleNode(this, JJTNCNAMEFORPREFIX);
                                                                                            boolean jjtc002 = true;
                                                                                            jjtree.openNodeScope(jjtn002);
                                                                                          }
                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                          {
                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                            jjtc002 = false;
                                                                                          }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                          } finally {
                                                                                            if (jjtc002) {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                            }
                                                                                          }
/*@egen*/                        <AssignEquals>/*@bgen(jjtree) #AssignEquals( true) */
                                                                                                                                                              {
                                                                                                                                                                SimpleNode jjtn003 = new SimpleNode(this, JJTASSIGNEQUALS);
                                                                                                                                                                boolean jjtc003 = true;
                                                                                                                                                                jjtree.openNodeScope(jjtn003);
                                                                                                                                                              }
                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                              {
                                                                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                jjtc003 = false;
                                                                                                                                                              }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                              } finally {
                                                                                                                                                                if (jjtc003) {
                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                }
                                                                                                                                                              }
/*@egen*/                     <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                                                                                                                                                             {
                                                                                                                                                                                                                               SimpleNode jjtn004 = new SimpleNode(this, JJTURLLITERAL);
                                                                                                                                                                                                                               boolean jjtc004 = true;
                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                             }
                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                             {
                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                               jjtc004 = false;
                                                                                                                                                                                                                             }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                               if (jjtc004) {
                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                               }
                                                                                                                                                                                                                             }
/*@egen*/                   Separator()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Prolog()  :
{/*@bgen(jjtree) Prolog */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPROLOG);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Prolog */
  try {
/*@egen*/
  (Setter() Separator())* ((Import() | NamespaceDecl() | DefaultNamespaceDecl()) Separator())* ((VarDecl() | FunctionDecl()) Separator())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Setter()  :
{/*@bgen(jjtree) Setter */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSETTER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Setter */
  try {
/*@egen*/
  (XMLSpaceDecl() | DefaultCollationDecl() | BaseURIDecl() | ConstructionDecl() | OrderingModeDecl() | EmptyOrderingDecl() | InheritNamespacesDecl())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Import()  :
{/*@bgen(jjtree) Import */
  SimpleNode jjtn000 = new SimpleNode(this, JJTIMPORT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Import */
  try {
/*@egen*/
  (SchemaImport() | ModuleImport())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Separator()  :
{/*@bgen(jjtree) Separator */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSEPARATOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Separator */
  try {
/*@egen*/
  <SemiColon>/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void NamespaceDecl()  :
{/*@bgen(jjtree) NamespaceDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTNAMESPACEDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) NamespaceDecl */
  try {
/*@egen*/
  <DeclareNamespace>/*@bgen(jjtree) #DeclareNamespace( true) */
                    {
                      SimpleNode jjtn001 = new SimpleNode(this, JJTDECLARENAMESPACE);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                    }
                    try {
/*@egen*//*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn001,  true);
                      jjtc001 = false;
                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001,  true);
                      }
                    }
/*@egen*/                         <NCNameForPrefix>/*@bgen(jjtree) #NCNameForPrefix( true) */
                                                                                            {
                                                                                              SimpleNode jjtn002 = new SimpleNode(this, JJTNCNAMEFORPREFIX);
                                                                                              boolean jjtc002 = true;
                                                                                              jjtree.openNodeScope(jjtn002);
                                                                                            }
                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                            {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                              jjtc002 = false;
                                                                                            }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                            } finally {
                                                                                              if (jjtc002) {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                              }
                                                                                            }
/*@egen*/                        <AssignEquals>/*@bgen(jjtree) #AssignEquals( true) */
                                                                                                                                                                {
                                                                                                                                                                  SimpleNode jjtn003 = new SimpleNode(this, JJTASSIGNEQUALS);
                                                                                                                                                                  boolean jjtc003 = true;
                                                                                                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                                                                                                }
                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                {
                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  jjtc003 = false;
                                                                                                                                                                }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                } finally {
                                                                                                                                                                  if (jjtc003) {
                                                                                                                                                                    jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  }
                                                                                                                                                                }
/*@egen*/                     <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                 SimpleNode jjtn004 = new SimpleNode(this, JJTURLLITERAL);
                                                                                                                                                                                                                                 boolean jjtc004 = true;
                                                                                                                                                                                                                                 jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                               }
                                                                                                                                                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                 jjtc004 = false;
                                                                                                                                                                                                                               }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                               } finally {
                                                                                                                                                                                                                                 if (jjtc004) {
                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                               }
/*@egen*/                  /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void XMLSpaceDecl()  :
{/*@bgen(jjtree) XMLSpaceDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTXMLSPACEDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) XMLSpaceDecl */
  try {
/*@egen*/
  <DeclareXMLSpace>/*@bgen(jjtree) #DeclareXMLSpace( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREXMLSPACE);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                        (<XMLSpacePreserve>/*@bgen(jjtree) #XMLSpacePreserve( true) */
                                                                                            {
                                                                                              SimpleNode jjtn002 = new SimpleNode(this, JJTXMLSPACEPRESERVE);
                                                                                              boolean jjtc002 = true;
                                                                                              jjtree.openNodeScope(jjtn002);
                                                                                            }
                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                            {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                              jjtc002 = false;
                                                                                            }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                            } finally {
                                                                                              if (jjtc002) {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                              }
                                                                                            }
/*@egen*/                         | <XMLSpaceStrip>/*@bgen(jjtree) #XMLSpaceStrip( true) */
                                                                                                                                                                    {
                                                                                                                                                                      SimpleNode jjtn003 = new SimpleNode(this, JJTXMLSPACESTRIP);
                                                                                                                                                                      boolean jjtc003 = true;
                                                                                                                                                                      jjtree.openNodeScope(jjtn003);
                                                                                                                                                                    }
                                                                                                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                    {
                                                                                                                                                                      jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                      jjtc003 = false;
                                                                                                                                                                    }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                    } finally {
                                                                                                                                                                      if (jjtc003) {
                                                                                                                                                                        jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                      }
                                                                                                                                                                    }
/*@egen*/                     )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DefaultNamespaceDecl()  :
{/*@bgen(jjtree) DefaultNamespaceDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDEFAULTNAMESPACEDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DefaultNamespaceDecl */
  try {
/*@egen*/
  (<DeclareDefaultElement>/*@bgen(jjtree) #DeclareDefaultElement( true) */
                          {
                            SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREDEFAULTELEMENT);
                            boolean jjtc001 = true;
                            jjtree.openNodeScope(jjtn001);
                          }
                          try {
/*@egen*//*@bgen(jjtree)*/
                          {
                            jjtree.closeNodeScope(jjtn001,  true);
                            jjtc001 = false;
                          }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                          } finally {
                            if (jjtc001) {
                              jjtree.closeNodeScope(jjtn001,  true);
                            }
                          }
/*@egen*/                              | <DeclareDefaultFunction>/*@bgen(jjtree) #DeclareDefaultFunction( true) */
                                                                                                                {
                                                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTDECLAREDEFAULTFUNCTION);
                                                                                                                  boolean jjtc002 = true;
                                                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                                                }
                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                {
                                                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                  jjtc002 = false;
                                                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                } finally {
                                                                                                                  if (jjtc002) {
                                                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                  }
                                                                                                                }
/*@egen*/                              ) <Namespace>/*@bgen(jjtree) #Namespace( true) */
                                                                                                                                                                                         {
                                                                                                                                                                                           SimpleNode jjtn003 = new SimpleNode(this, JJTNAMESPACE);
                                                                                                                                                                                           boolean jjtc003 = true;
                                                                                                                                                                                           jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                         }
                                                                                                                                                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                         {
                                                                                                                                                                                           jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                           jjtc003 = false;
                                                                                                                                                                                         }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                         } finally {
                                                                                                                                                                                           if (jjtc003) {
                                                                                                                                                                                             jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                           }
                                                                                                                                                                                         }
/*@egen*/                  <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                       SimpleNode jjtn004 = new SimpleNode(this, JJTURLLITERAL);
                                                                                                                                                                                                                                                       boolean jjtc004 = true;
                                                                                                                                                                                                                                                       jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                     }
                                                                                                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                       jjtc004 = false;
                                                                                                                                                                                                                                                     }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                     } finally {
                                                                                                                                                                                                                                                       if (jjtc004) {
                                                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                       }
                                                                                                                                                                                                                                                     }
/*@egen*/                  /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OrderingModeDecl()  :
{/*@bgen(jjtree) OrderingModeDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTORDERINGMODEDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) OrderingModeDecl */
  try {
/*@egen*/
  <DeclareOrdering>/*@bgen(jjtree) #DeclareOrdering( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREORDERING);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                        (<Ordered>/*@bgen(jjtree) #Ordered( true) */
                                                                                   {
                                                                                     SimpleNode jjtn002 = new SimpleNode(this, JJTORDERED);
                                                                                     boolean jjtc002 = true;
                                                                                     jjtree.openNodeScope(jjtn002);
                                                                                   }
                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                   {
                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                     jjtc002 = false;
                                                                                   }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                   } finally {
                                                                                     if (jjtc002) {
                                                                                       jjtree.closeNodeScope(jjtn002,  true);
                                                                                     }
                                                                                   }
/*@egen*/                | <Unordered>/*@bgen(jjtree) #Unordered( true) */
                                                                                                                                              {
                                                                                                                                                SimpleNode jjtn003 = new SimpleNode(this, JJTUNORDERED);
                                                                                                                                                boolean jjtc003 = true;
                                                                                                                                                jjtree.openNodeScope(jjtn003);
                                                                                                                                              }
                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                              {
                                                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                jjtc003 = false;
                                                                                                                                              }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                              } finally {
                                                                                                                                                if (jjtc003) {
                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                }
                                                                                                                                              }
/*@egen*/                 )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void EmptyOrderingDecl()  :
{/*@bgen(jjtree) EmptyOrderingDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTEMPTYORDERINGDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) EmptyOrderingDecl */
  try {
/*@egen*/
  <DeclareDefaultOrderingEmpty>/*@bgen(jjtree) #DeclareDefaultOrderingEmpty( true) */
                               {
                                 SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREDEFAULTORDERINGEMPTY);
                                 boolean jjtc001 = true;
                                 jjtree.openNodeScope(jjtn001);
                               }
                               try {
/*@egen*//*@bgen(jjtree)*/
                               {
                                 jjtree.closeNodeScope(jjtn001,  true);
                                 jjtc001 = false;
                               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                               } finally {
                                 if (jjtc001) {
                                   jjtree.closeNodeScope(jjtn001,  true);
                                 }
                               }
/*@egen*/                                    (<EmptyGreatest>/*@bgen(jjtree) #EmptyGreatest( true) */
                                                                                                                 {
                                                                                                                   SimpleNode jjtn002 = new SimpleNode(this, JJTEMPTYGREATEST);
                                                                                                                   boolean jjtc002 = true;
                                                                                                                   jjtree.openNodeScope(jjtn002);
                                                                                                                 }
                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                 {
                                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                   jjtc002 = false;
                                                                                                                 }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                 } finally {
                                                                                                                   if (jjtc002) {
                                                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                   }
                                                                                                                 }
/*@egen*/                      | <EmptyLeast>/*@bgen(jjtree) #EmptyLeast( true) */
                                                                                                                                                                                   {
                                                                                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTEMPTYLEAST);
                                                                                                                                                                                     boolean jjtc003 = true;
                                                                                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                   }
                                                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                   {
                                                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                     jjtc003 = false;
                                                                                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                   } finally {
                                                                                                                                                                                     if (jjtc003) {
                                                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                     }
                                                                                                                                                                                   }
/*@egen*/                  )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void InheritNamespacesDecl()  :
{/*@bgen(jjtree) InheritNamespacesDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTINHERITNAMESPACESDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) InheritNamespacesDecl */
  try {
/*@egen*/
  <DeclareInheritNamespaces>/*@bgen(jjtree) #DeclareInheritNamespaces( true) */
                            {
                              SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREINHERITNAMESPACES);
                              boolean jjtc001 = true;
                              jjtree.openNodeScope(jjtn001);
                            }
                            try {
/*@egen*//*@bgen(jjtree)*/
                            {
                              jjtree.closeNodeScope(jjtn001,  true);
                              jjtc001 = false;
                            }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                            } finally {
                              if (jjtc001) {
                                jjtree.closeNodeScope(jjtn001,  true);
                              }
                            }
/*@egen*/                                 (<Yes>/*@bgen(jjtree) #Yes( true) */
                                                                                                 {
                                                                                                   SimpleNode jjtn002 = new SimpleNode(this, JJTYES);
                                                                                                   boolean jjtc002 = true;
                                                                                                   jjtree.openNodeScope(jjtn002);
                                                                                                 }
                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                 {
                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                   jjtc002 = false;
                                                                                                 }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                 } finally {
                                                                                                   if (jjtc002) {
                                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                                   }
                                                                                                 }
/*@egen*/            | <No>/*@bgen(jjtree) #No( true) */
                                                                                                                                                 {
                                                                                                                                                   SimpleNode jjtn003 = new SimpleNode(this, JJTNO);
                                                                                                                                                   boolean jjtc003 = true;
                                                                                                                                                   jjtree.openNodeScope(jjtn003);
                                                                                                                                                 }
                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                 {
                                                                                                                                                   jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                   jjtc003 = false;
                                                                                                                                                 }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                 } finally {
                                                                                                                                                   if (jjtc003) {
                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                   }
                                                                                                                                                 }
/*@egen*/          )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DefaultCollationDecl()  :
{/*@bgen(jjtree) DefaultCollationDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDEFAULTCOLLATIONDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DefaultCollationDecl */
  try {
/*@egen*/
  <DeclareCollation>/*@bgen(jjtree) #DeclareCollation( true) */
                    {
                      SimpleNode jjtn001 = new SimpleNode(this, JJTDECLARECOLLATION);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                    }
                    try {
/*@egen*//*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn001,  true);
                      jjtc001 = false;
                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001,  true);
                      }
                    }
/*@egen*/                         <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                       {
                                                                                         SimpleNode jjtn002 = new SimpleNode(this, JJTURLLITERAL);
                                                                                         boolean jjtc002 = true;
                                                                                         jjtree.openNodeScope(jjtn002);
                                                                                       }
                                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                                       {
                                                                                         jjtree.closeNodeScope(jjtn002,  true);
                                                                                         jjtc002 = false;
                                                                                       }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                       } finally {
                                                                                         if (jjtc002) {
                                                                                           jjtree.closeNodeScope(jjtn002,  true);
                                                                                         }
                                                                                       }
/*@egen*/                  /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void BaseURIDecl()  :
{/*@bgen(jjtree) BaseURIDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTBASEURIDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) BaseURIDecl */
  try {
/*@egen*/
  <DeclareBaseURI>/*@bgen(jjtree) #DeclareBaseURI( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTDECLAREBASEURI);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                       <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                   {
                                                                                     SimpleNode jjtn002 = new SimpleNode(this, JJTURLLITERAL);
                                                                                     boolean jjtc002 = true;
                                                                                     jjtree.openNodeScope(jjtn002);
                                                                                   }
                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                   {
                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                     jjtc002 = false;
                                                                                   }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                   } finally {
                                                                                     if (jjtc002) {
                                                                                       jjtree.closeNodeScope(jjtn002,  true);
                                                                                     }
                                                                                   }
/*@egen*/                  /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SchemaImport()  :
{/*@bgen(jjtree) SchemaImport */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSCHEMAIMPORT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SchemaImport */
  try {
/*@egen*/
  <ImportSchemaToken>/*@bgen(jjtree) #ImportSchemaToken( true) */
                     {
                       SimpleNode jjtn001 = new SimpleNode(this, JJTIMPORTSCHEMATOKEN);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                     }
                     try {
/*@egen*//*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn001,  true);
                       jjtc001 = false;
                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001,  true);
                       }
                     }
/*@egen*/                          [SchemaPrefix()] <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                                          {
                                                                                                            SimpleNode jjtn002 = new SimpleNode(this, JJTURLLITERAL);
                                                                                                            boolean jjtc002 = true;
                                                                                                            jjtree.openNodeScope(jjtn002);
                                                                                                          }
                                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                          {
                                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                                            jjtc002 = false;
                                                                                                          }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                          } finally {
                                                                                                            if (jjtc002) {
                                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                                            }
                                                                                                          }
/*@egen*/                   [<AtStringLiteral>/*@bgen(jjtree) #AtStringLiteral( true) */
                                                                                                                                                                             {
                                                                                                                                                                               SimpleNode jjtn003 = new SimpleNode(this, JJTATSTRINGLITERAL);
                                                                                                                                                                               boolean jjtc003 = true;
                                                                                                                                                                               jjtree.openNodeScope(jjtn003);
                                                                                                                                                                             }
                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                             {
                                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               jjtc003 = false;
                                                                                                                                                                             }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                             } finally {
                                                                                                                                                                               if (jjtc003) {
                                                                                                                                                                                 jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               }
                                                                                                                                                                             }
/*@egen*/                        (<Comma> <StringLiteral>/*@bgen(jjtree) #StringLiteral( true) */
                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                             SimpleNode jjtn004 = new SimpleNode(this, JJTSTRINGLITERAL);
                                                                                                                                                                                                                                                             boolean jjtc004 = true;
                                                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                           }
                                                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                             jjtc004 = false;
                                                                                                                                                                                                                                                           }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                                                             if (jjtc004) {
                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                           }
/*@egen*/                     )*]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SchemaPrefix()  :
{/*@bgen(jjtree) SchemaPrefix */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSCHEMAPREFIX);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SchemaPrefix */
  try {
/*@egen*/
  ((<Namespace>/*@bgen(jjtree) #Namespace( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTNAMESPACE);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                  <NCNameForPrefix>/*@bgen(jjtree) #NCNameForPrefix( true) */
                                                                                {
                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTNCNAMEFORPREFIX);
                                                                                  boolean jjtc002 = true;
                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                }
                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                  jjtc002 = false;
                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                } finally {
                                                                                  if (jjtc002) {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                  }
                                                                                }
/*@egen*/                        <AssignEquals>/*@bgen(jjtree) #AssignEquals( true) */
                                                                                                                                                    {
                                                                                                                                                      SimpleNode jjtn003 = new SimpleNode(this, JJTASSIGNEQUALS);
                                                                                                                                                      boolean jjtc003 = true;
                                                                                                                                                      jjtree.openNodeScope(jjtn003);
                                                                                                                                                    }
                                                                                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                    {
                                                                                                                                                      jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                      jjtc003 = false;
                                                                                                                                                    }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                    } finally {
                                                                                                                                                      if (jjtc003) {
                                                                                                                                                        jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                      }
                                                                                                                                                    }
/*@egen*/                    ) | (<DefaultElement>/*@bgen(jjtree) #DefaultElement( true) */
                                                                                                                                                                                                                           {
                                                                                                                                                                                                                             SimpleNode jjtn004 = new SimpleNode(this, JJTDEFAULTELEMENT);
                                                                                                                                                                                                                             boolean jjtc004 = true;
                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                           }
                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                           {
                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                             jjtc004 = false;
                                                                                                                                                                                                                           }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                             if (jjtc004) {
                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                             }
                                                                                                                                                                                                                           }
/*@egen*/                       <Namespace>/*@bgen(jjtree) #Namespace( true) */
                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                             SimpleNode jjtn005 = new SimpleNode(this, JJTNAMESPACE);
                                                                                                                                                                                                                                                                                             boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                           }
                                                                                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                             jjtc005 = false;
                                                                                                                                                                                                                                                                                           }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                                                                                             if (jjtc005) {
                                                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                                                           }
/*@egen*/                 ))/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ModuleImport()  :
{/*@bgen(jjtree) ModuleImport */
  SimpleNode jjtn000 = new SimpleNode(this, JJTMODULEIMPORT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ModuleImport */
  try {
/*@egen*/
  <ImportModuleToken>/*@bgen(jjtree) #ImportModuleToken( true) */
                     {
                       SimpleNode jjtn001 = new SimpleNode(this, JJTIMPORTMODULETOKEN);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                     }
                     try {
/*@egen*//*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn001,  true);
                       jjtc001 = false;
                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001,  true);
                       }
                     }
/*@egen*/                          [<Namespace>/*@bgen(jjtree) #Namespace( true) */
                                                                                         {
                                                                                           SimpleNode jjtn002 = new SimpleNode(this, JJTNAMESPACE);
                                                                                           boolean jjtc002 = true;
                                                                                           jjtree.openNodeScope(jjtn002);
                                                                                         }
                                                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                                                         {
                                                                                           jjtree.closeNodeScope(jjtn002,  true);
                                                                                           jjtc002 = false;
                                                                                         }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                         } finally {
                                                                                           if (jjtc002) {
                                                                                             jjtree.closeNodeScope(jjtn002,  true);
                                                                                           }
                                                                                         }
/*@egen*/                  <NCNameForPrefix>/*@bgen(jjtree) #NCNameForPrefix( true) */
                                                                                                                                                          {
                                                                                                                                                            SimpleNode jjtn003 = new SimpleNode(this, JJTNCNAMEFORPREFIX);
                                                                                                                                                            boolean jjtc003 = true;
                                                                                                                                                            jjtree.openNodeScope(jjtn003);
                                                                                                                                                          }
                                                                                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                          {
                                                                                                                                                            jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                            jjtc003 = false;
                                                                                                                                                          }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                          } finally {
                                                                                                                                                            if (jjtc003) {
                                                                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                            }
                                                                                                                                                          }
/*@egen*/                        <AssignEquals>/*@bgen(jjtree) #AssignEquals( true) */
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                SimpleNode jjtn004 = new SimpleNode(this, JJTASSIGNEQUALS);
                                                                                                                                                                                                                                boolean jjtc004 = true;
                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                jjtc004 = false;
                                                                                                                                                                                                                              }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                if (jjtc004) {
                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
/*@egen*/                    ] <URLLiteral>/*@bgen(jjtree) #URLLiteral( true) */
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                SimpleNode jjtn005 = new SimpleNode(this, JJTURLLITERAL);
                                                                                                                                                                                                                                                                                                boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                jjtc005 = false;
                                                                                                                                                                                                                                                                                              }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                                                                                if (jjtc005) {
                                                                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
/*@egen*/                   [<AtStringLiteral>/*@bgen(jjtree) #AtStringLiteral( true) */
                                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                                   SimpleNode jjtn006 = new SimpleNode(this, JJTATSTRINGLITERAL);
                                                                                                                                                                                                                                                                                                                                                                   boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                                   jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                   jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                 } finally {
                                                                                                                                                                                                                                                                                                                                                                   if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/                        (<Comma> <StringLiteral>/*@bgen(jjtree) #StringLiteral( true) */
                                                                                                                                                                                                                                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                                                                                                                                                                                                                                 SimpleNode jjtn007 = new SimpleNode(this, JJTSTRINGLITERAL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                 boolean jjtc007 = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                 jjtree.openNodeScope(jjtn007);
                                                                                                                                                                                                                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                                                                                                                                                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                 jjtc007 = false;
                                                                                                                                                                                                                                                                                                                                                                                                                                               }
/*@egen*/{jjtn007.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                               } finally {
                                                                                                                                                                                                                                                                                                                                                                                                                                                 if (jjtc007) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                                                                                                                                                                                                                               }
/*@egen*/                     )*]/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void VarDecl()  :
{/*@bgen(jjtree) VarDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTVARDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VarDecl */
  try {
/*@egen*/
  <DefineVariable>/*@bgen(jjtree) #DefineVariable( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTDEFINEVARIABLE);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                       <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                {
                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTVARNAME);
                                                                                  boolean jjtc002 = true;
                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                }
                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                  jjtc002 = false;
                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                } finally {
                                                                                  if (jjtc002) {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                  }
                                                                                }
/*@egen*/                [TypeDeclaration()] ((<ColonEquals>/*@bgen(jjtree) #ColonEquals( true) */
                                                                                                                                                                 {
                                                                                                                                                                   SimpleNode jjtn003 = new SimpleNode(this, JJTCOLONEQUALS);
                                                                                                                                                                   boolean jjtc003 = true;
                                                                                                                                                                   jjtree.openNodeScope(jjtn003);
                                                                                                                                                                 }
                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                 {
                                                                                                                                                                   jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                   jjtc003 = false;
                                                                                                                                                                 }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                 } finally {
                                                                                                                                                                   if (jjtc003) {
                                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                   }
                                                                                                                                                                 }
/*@egen*/                    ExprSingle()) | <External>/*@bgen(jjtree) #External( true) */
                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                               SimpleNode jjtn004 = new SimpleNode(this, JJTEXTERNAL);
                                                                                                                                                                                                                                               boolean jjtc004 = true;
                                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                               jjtc004 = false;
                                                                                                                                                                                                                                             }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                                               if (jjtc004) {
                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                             }
/*@egen*/                )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ConstructionDecl()  :
{/*@bgen(jjtree) ConstructionDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCONSTRUCTIONDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ConstructionDecl */
  try {
/*@egen*/
  <DeclareConstruction>/*@bgen(jjtree) #DeclareConstruction( true) */
                       {
                         SimpleNode jjtn001 = new SimpleNode(this, JJTDECLARECONSTRUCTION);
                         boolean jjtc001 = true;
                         jjtree.openNodeScope(jjtn001);
                       }
                       try {
/*@egen*//*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn001,  true);
                         jjtc001 = false;
                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc001) {
                           jjtree.closeNodeScope(jjtn001,  true);
                         }
                       }
/*@egen*/                            <SchemaModeForDeclareConstruction>/*@bgen(jjtree) #SchemaModeForDeclareConstruction( true) */
                                                                                                                   {
                                                                                                                     SimpleNode jjtn002 = new SimpleNode(this, JJTSCHEMAMODEFORDECLARECONSTRUCTION);
                                                                                                                     boolean jjtc002 = true;
                                                                                                                     jjtree.openNodeScope(jjtn002);
                                                                                                                   }
                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                   {
                                                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                     jjtc002 = false;
                                                                                                                   }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                   } finally {
                                                                                                                     if (jjtc002) {
                                                                                                                       jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                     }
                                                                                                                   }
/*@egen*/                                        /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void FunctionDecl()  :
{/*@bgen(jjtree) FunctionDecl */
  SimpleNode jjtn000 = new SimpleNode(this, JJTFUNCTIONDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FunctionDecl */
  try {
/*@egen*/
  <DefineFunction>/*@bgen(jjtree) #DefineFunction( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTDEFINEFUNCTION);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                       <QNameLpar>/*@bgen(jjtree) #QNameLpar( true) */
                                                                                  {
                                                                                    SimpleNode jjtn002 = new SimpleNode(this, JJTQNAMELPAR);
                                                                                    boolean jjtc002 = true;
                                                                                    jjtree.openNodeScope(jjtn002);
                                                                                  }
                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                  {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                    jjtc002 = false;
                                                                                  }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                  } finally {
                                                                                    if (jjtc002) {
                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                    }
                                                                                  }
/*@egen*/                  [ParamList()] (<Rpar> | (<RparAs>/*@bgen(jjtree) #RparAs( true) */
                                                                                                                                                                   {
                                                                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTRPARAS);
                                                                                                                                                                     boolean jjtc003 = true;
                                                                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                                                                   }
                                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                   {
                                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                     jjtc003 = false;
                                                                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                   } finally {
                                                                                                                                                                     if (jjtc003) {
                                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                     }
                                                                                                                                                                   }
/*@egen*/               SequenceType())) (EnclosedExpr() | <External>/*@bgen(jjtree) #External( true) */
                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                               SimpleNode jjtn004 = new SimpleNode(this, JJTEXTERNAL);
                                                                                                                                                                                                                                                               boolean jjtc004 = true;
                                                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                               jjtc004 = false;
                                                                                                                                                                                                                                                             }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                                                               if (jjtc004) {
                                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                                             }
/*@egen*/                )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ParamList()  :
{/*@bgen(jjtree) ParamList */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPARAMLIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ParamList */
  try {
/*@egen*/
  Param() (<Comma> Param())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Param()  :
{/*@bgen(jjtree) Param */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPARAM);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Param */
  try {
/*@egen*/
  <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                               {
                                 SimpleNode jjtn001 = new SimpleNode(this, JJTVARNAME);
                                 boolean jjtc001 = true;
                                 jjtree.openNodeScope(jjtn001);
                               }
                               try {
/*@egen*//*@bgen(jjtree)*/
                               {
                                 jjtree.closeNodeScope(jjtn001,  true);
                                 jjtc001 = false;
                               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                               } finally {
                                 if (jjtc001) {
                                   jjtree.closeNodeScope(jjtn001,  true);
                                 }
                               }
/*@egen*/                [TypeDeclaration()]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void EnclosedExpr()  :
{/*@bgen(jjtree) EnclosedExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTENCLOSEDEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) EnclosedExpr */
  try {
/*@egen*/
  (<Lbrace>/*@bgen(jjtree) #Lbrace( true) */
           {
             SimpleNode jjtn001 = new SimpleNode(this, JJTLBRACE);
             boolean jjtc001 = true;
             jjtree.openNodeScope(jjtn001);
           }
           try {
/*@egen*//*@bgen(jjtree)*/
           {
             jjtree.closeNodeScope(jjtn001,  true);
             jjtc001 = false;
           }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
           } finally {
             if (jjtc001) {
               jjtree.closeNodeScope(jjtn001,  true);
             }
           }
/*@egen*/               | <LbraceExprEnclosure>/*@bgen(jjtree) #LbraceExprEnclosure( true) */
                                                                               {
                                                                                 SimpleNode jjtn002 = new SimpleNode(this, JJTLBRACEEXPRENCLOSURE);
                                                                                 boolean jjtc002 = true;
                                                                                 jjtree.openNodeScope(jjtn002);
                                                                               }
                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                               {
                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                 jjtc002 = false;
                                                                               }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                               } finally {
                                                                                 if (jjtc002) {
                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                 }
                                                                               }
/*@egen*/                           ) Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                         {
                                                                                                                                                           SimpleNode jjtn003 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                           boolean jjtc003 = true;
                                                                                                                                                           jjtree.openNodeScope(jjtn003);
                                                                                                                                                         }
                                                                                                                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                         {
                                                                                                                                                           jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                           jjtc003 = false;
                                                                                                                                                         }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                         } finally {
                                                                                                                                                           if (jjtc003) {
                                                                                                                                                             jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                           }
                                                                                                                                                         }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void QueryBody()  :
{/*@bgen(jjtree) QueryBody */
  SimpleNode jjtn000 = new SimpleNode(this, JJTQUERYBODY);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) QueryBody */
  try {
/*@egen*/
  (Expr())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Expr()  :
{/*@bgen(jjtree) Expr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Expr */
  try {
/*@egen*/
  ExprSingle() (<Comma> ExprSingle())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ExprSingle()        :
{}
{
  (FLWORExpr() | QuantifiedExpr() | TypeswitchExpr() | IfExpr() | OrExpr())
}

void FLWORExpr()  :
{/*@bgen(jjtree) FLWORExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTFLWOREXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FLWORExpr */
  try {
/*@egen*/
  ((ForClause() | LetClause()))+  [WhereClause()] [OrderByClause()] <Return> ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ForClause()        :
{}
{
  <ForVariable> <VarName>/*@bgen(jjtree) #VarName( true) */
                         {
                           SimpleNode jjtn001 = new SimpleNode(this, JJTVARNAME);
                           boolean jjtc001 = true;
                           jjtree.openNodeScope(jjtn001);
                         }
                         try {
/*@egen*//*@bgen(jjtree)*/
                         {
                           jjtree.closeNodeScope(jjtn001,  true);
                           jjtc001 = false;
                         }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                         } finally {
                           if (jjtc001) {
                             jjtree.closeNodeScope(jjtn001,  true);
                           }
                         }
/*@egen*/                [TypeDeclaration()] [PositionalVar()] <In>/*@bgen(jjtree) #In( true) */
                                                                                                                 {
                                                                                                                   SimpleNode jjtn002 = new SimpleNode(this, JJTIN);
                                                                                                                   boolean jjtc002 = true;
                                                                                                                   jjtree.openNodeScope(jjtn002);
                                                                                                                 }
                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                 {
                                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                   jjtc002 = false;
                                                                                                                 }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                 } finally {
                                                                                                                   if (jjtc002) {
                                                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                   }
                                                                                                                 }
/*@egen*/           ExprSingle() (<Comma> <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                                                                                                                                             {
                                                                                                                                                                                                               SimpleNode jjtn003 = new SimpleNode(this, JJTVARNAME);
                                                                                                                                                                                                               boolean jjtc003 = true;
                                                                                                                                                                                                               jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                             }
                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                             {
                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                               jjtc003 = false;
                                                                                                                                                                                                             }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                               if (jjtc003) {
                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                               }
                                                                                                                                                                                                             }
/*@egen*/                [TypeDeclaration()] [PositionalVar()] <In>/*@bgen(jjtree) #In( true) */
                                                                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                                                                       SimpleNode jjtn004 = new SimpleNode(this, JJTIN);
                                                                                                                                                                                                                                                                                                       boolean jjtc004 = true;
                                                                                                                                                                                                                                                                                                       jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                                                                     }
                                                                                                                                                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                       jjtc004 = false;
                                                                                                                                                                                                                                                                                                     }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                     } finally {
                                                                                                                                                                                                                                                                                                       if (jjtc004) {
                                                                                                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                       }
                                                                                                                                                                                                                                                                                                     }
/*@egen*/           ExprSingle())*
}

void PositionalVar()  :
{/*@bgen(jjtree) PositionalVar */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPOSITIONALVAR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PositionalVar */
  try {
/*@egen*/
  <AtWord>/*@bgen(jjtree) #AtWord( true) */
          {
            SimpleNode jjtn001 = new SimpleNode(this, JJTATWORD);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
          }
          try {
/*@egen*//*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn001,  true);
            jjtc001 = false;
          }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001,  true);
            }
          }
/*@egen*/               <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                    {
                                                                                      SimpleNode jjtn002 = new SimpleNode(this, JJTVARNAME);
                                                                                      boolean jjtc002 = true;
                                                                                      jjtree.openNodeScope(jjtn002);
                                                                                    }
                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                    {
                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                      jjtc002 = false;
                                                                                    }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                    } finally {
                                                                                      if (jjtc002) {
                                                                                        jjtree.closeNodeScope(jjtn002,  true);
                                                                                      }
                                                                                    }
/*@egen*/               /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void LetClause()  :
{/*@bgen(jjtree) LetClause */
  SimpleNode jjtn000 = new SimpleNode(this, JJTLETCLAUSE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) LetClause */
  try {
/*@egen*/
  <LetVariable>/*@bgen(jjtree) #LetVariable( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTLETVARIABLE);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                    <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                          {
                                                                            SimpleNode jjtn002 = new SimpleNode(this, JJTVARNAME);
                                                                            boolean jjtc002 = true;
                                                                            jjtree.openNodeScope(jjtn002);
                                                                          }
                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                          {
                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                            jjtc002 = false;
                                                                          }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                          } finally {
                                                                            if (jjtc002) {
                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                            }
                                                                          }
/*@egen*/                [TypeDeclaration()] <ColonEquals>/*@bgen(jjtree) #ColonEquals( true) */
                                                                                                                                                         {
                                                                                                                                                           SimpleNode jjtn003 = new SimpleNode(this, JJTCOLONEQUALS);
                                                                                                                                                           boolean jjtc003 = true;
                                                                                                                                                           jjtree.openNodeScope(jjtn003);
                                                                                                                                                         }
                                                                                                                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                         {
                                                                                                                                                           jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                           jjtc003 = false;
                                                                                                                                                         }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                         } finally {
                                                                                                                                                           if (jjtc003) {
                                                                                                                                                             jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                           }
                                                                                                                                                         }
/*@egen*/                    ExprSingle() (<Comma> <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                SimpleNode jjtn004 = new SimpleNode(this, JJTVARNAME);
                                                                                                                                                                                                                                                                boolean jjtc004 = true;
                                                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                jjtc004 = false;
                                                                                                                                                                                                                                                              }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                                                if (jjtc004) {
                                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
/*@egen*/                [TypeDeclaration()] <ColonEquals>/*@bgen(jjtree) #ColonEquals( true) */
                                                                                                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                                                                                                               SimpleNode jjtn005 = new SimpleNode(this, JJTCOLONEQUALS);
                                                                                                                                                                                                                                                                                                                                               boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                               jjtc005 = false;
                                                                                                                                                                                                                                                                                                                                             }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                                                                                                                                               if (jjtc005) {
                                                                                                                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                                                                                                                             }
/*@egen*/                    ExprSingle())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void WhereClause()  :
{/*@bgen(jjtree) WhereClause */
  SimpleNode jjtn000 = new SimpleNode(this, JJTWHERECLAUSE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) WhereClause */
  try {
/*@egen*/
  <Where>/*@bgen(jjtree) #Where( true) */
         {
           SimpleNode jjtn001 = new SimpleNode(this, JJTWHERE);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
         }
         try {
/*@egen*//*@bgen(jjtree)*/
         {
           jjtree.closeNodeScope(jjtn001,  true);
           jjtc001 = false;
         }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001,  true);
           }
         }
/*@egen*/              ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OrderByClause()  :
{/*@bgen(jjtree) OrderByClause */
  SimpleNode jjtn000 = new SimpleNode(this, JJTORDERBYCLAUSE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) OrderByClause */
  try {
/*@egen*/
  (<OrderBy>/*@bgen(jjtree) #OrderBy( true) */
            {
              SimpleNode jjtn001 = new SimpleNode(this, JJTORDERBY);
              boolean jjtc001 = true;
              jjtree.openNodeScope(jjtn001);
            }
            try {
/*@egen*//*@bgen(jjtree)*/
            {
              jjtree.closeNodeScope(jjtn001,  true);
              jjtc001 = false;
            }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
            } finally {
              if (jjtc001) {
                jjtree.closeNodeScope(jjtn001,  true);
              }
            }
/*@egen*/                | <OrderByStable>/*@bgen(jjtree) #OrderByStable( true) */
                                                                           {
                                                                             SimpleNode jjtn002 = new SimpleNode(this, JJTORDERBYSTABLE);
                                                                             boolean jjtc002 = true;
                                                                             jjtree.openNodeScope(jjtn002);
                                                                           }
                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                           {
                                                                             jjtree.closeNodeScope(jjtn002,  true);
                                                                             jjtc002 = false;
                                                                           }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                           } finally {
                                                                             if (jjtc002) {
                                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                                             }
                                                                           }
/*@egen*/                     ) OrderSpecList()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OrderSpecList()  :
{/*@bgen(jjtree) OrderSpecList */
  SimpleNode jjtn000 = new SimpleNode(this, JJTORDERSPECLIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) OrderSpecList */
  try {
/*@egen*/
  OrderSpec() (<Comma> OrderSpec())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OrderSpec()  :
{/*@bgen(jjtree) OrderSpec */
  SimpleNode jjtn000 = new SimpleNode(this, JJTORDERSPEC);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) OrderSpec */
  try {
/*@egen*/
  ExprSingle() OrderModifier()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OrderModifier()  :
{/*@bgen(jjtree) OrderModifier */
  SimpleNode jjtn000 = new SimpleNode(this, JJTORDERMODIFIER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) OrderModifier */
  try {
/*@egen*/
  [(<Ascending>/*@bgen(jjtree) #Ascending( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTASCENDING);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                  | <Descending>/*@bgen(jjtree) #Descending( true) */
                                                                             {
                                                                               SimpleNode jjtn002 = new SimpleNode(this, JJTDESCENDING);
                                                                               boolean jjtc002 = true;
                                                                               jjtree.openNodeScope(jjtn002);
                                                                             }
                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                             {
                                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                                               jjtc002 = false;
                                                                             }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                             } finally {
                                                                               if (jjtc002) {
                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                               }
                                                                             }
/*@egen*/                  )] [(<EmptyGreatest>/*@bgen(jjtree) #EmptyGreatest( true) */
                                                                                                                                                 {
                                                                                                                                                   SimpleNode jjtn003 = new SimpleNode(this, JJTEMPTYGREATEST);
                                                                                                                                                   boolean jjtc003 = true;
                                                                                                                                                   jjtree.openNodeScope(jjtn003);
                                                                                                                                                 }
                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                 {
                                                                                                                                                   jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                   jjtc003 = false;
                                                                                                                                                 }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                 } finally {
                                                                                                                                                   if (jjtc003) {
                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                   }
                                                                                                                                                 }
/*@egen*/                      | <EmptyLeast>/*@bgen(jjtree) #EmptyLeast( true) */
                                                                                                                                                                                                                   {
                                                                                                                                                                                                                     SimpleNode jjtn004 = new SimpleNode(this, JJTEMPTYLEAST);
                                                                                                                                                                                                                     boolean jjtc004 = true;
                                                                                                                                                                                                                     jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                   }
                                                                                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                   {
                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                     jjtc004 = false;
                                                                                                                                                                                                                   }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                   } finally {
                                                                                                                                                                                                                     if (jjtc004) {
                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                     }
                                                                                                                                                                                                                   }
/*@egen*/                  )] [<Collation>/*@bgen(jjtree) #Collation( true) */
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    SimpleNode jjtn005 = new SimpleNode(this, JJTCOLLATION);
                                                                                                                                                                                                                                                                                    boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                    jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                    jjtc005 = false;
                                                                                                                                                                                                                                                                                  }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                  } finally {
                                                                                                                                                                                                                                                                                    if (jjtc005) {
                                                                                                                                                                                                                                                                                      jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                  }
/*@egen*/                  <StringLiteral>/*@bgen(jjtree) #StringLiteral( true) */
                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                   SimpleNode jjtn006 = new SimpleNode(this, JJTSTRINGLITERAL);
                                                                                                                                                                                                                                                                                                                                                   boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                   jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                   jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                 } finally {
                                                                                                                                                                                                                                                                                                                                                   if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/                     ]/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void QuantifiedExpr()  :
{/*@bgen(jjtree) QuantifiedExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTQUANTIFIEDEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) QuantifiedExpr */
  try {
/*@egen*/
  (<Some>/*@bgen(jjtree) #Some( true) */
         {
           SimpleNode jjtn001 = new SimpleNode(this, JJTSOME);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
         }
         try {
/*@egen*//*@bgen(jjtree)*/
         {
           jjtree.closeNodeScope(jjtn001,  true);
           jjtc001 = false;
         }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001,  true);
           }
         }
/*@egen*/             | <Every>/*@bgen(jjtree) #Every( true) */
                                                             {
                                                               SimpleNode jjtn002 = new SimpleNode(this, JJTEVERY);
                                                               boolean jjtc002 = true;
                                                               jjtree.openNodeScope(jjtn002);
                                                             }
                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                             {
                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                               jjtc002 = false;
                                                             }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                             } finally {
                                                               if (jjtc002) {
                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                               }
                                                             }
/*@egen*/             ) <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                                                   {
                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTVARNAME);
                                                                                                                     boolean jjtc003 = true;
                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                   }
                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                   {
                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                     jjtc003 = false;
                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                   } finally {
                                                                                                                     if (jjtc003) {
                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                     }
                                                                                                                   }
/*@egen*/                [TypeDeclaration()] <In>/*@bgen(jjtree) #In( true) */
                                                                                                                                                                                         {
                                                                                                                                                                                           SimpleNode jjtn004 = new SimpleNode(this, JJTIN);
                                                                                                                                                                                           boolean jjtc004 = true;
                                                                                                                                                                                           jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                         }
                                                                                                                                                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                         {
                                                                                                                                                                                           jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                           jjtc004 = false;
                                                                                                                                                                                         }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                         } finally {
                                                                                                                                                                                           if (jjtc004) {
                                                                                                                                                                                             jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                           }
                                                                                                                                                                                         }
/*@egen*/           ExprSingle() (<Comma> <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                                                       SimpleNode jjtn005 = new SimpleNode(this, JJTVARNAME);
                                                                                                                                                                                                                                                                                       boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                       jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                     }
                                                                                                                                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                     {
                                                                                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                       jjtc005 = false;
                                                                                                                                                                                                                                                                                     }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                     } finally {
                                                                                                                                                                                                                                                                                       if (jjtc005) {
                                                                                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                       }
                                                                                                                                                                                                                                                                                     }
/*@egen*/                [TypeDeclaration()] <In>/*@bgen(jjtree) #In( true) */
                                                                                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                                                                                             SimpleNode jjtn006 = new SimpleNode(this, JJTIN);
                                                                                                                                                                                                                                                                                                                                                             boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                           }
                                                                                                                                                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                             jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                           }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                                                                                                                                                             if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                                                                                                                           }
/*@egen*/           ExprSingle())* <Satisfies>/*@bgen(jjtree) #Satisfies( true) */
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                SimpleNode jjtn007 = new SimpleNode(this, JJTSATISFIES);
                                                                                                                                                                                                                                                                                                                                                                                                                                boolean jjtc007 = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn007);
                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                jjtc007 = false;
                                                                                                                                                                                                                                                                                                                                                                                                                              }
/*@egen*/{jjtn007.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                                                                                                                                                                                                                if (jjtc007) {
                                                                                                                                                                                                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                              }
/*@egen*/                  ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void TypeswitchExpr()  :
{/*@bgen(jjtree) TypeswitchExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTTYPESWITCHEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeswitchExpr */
  try {
/*@egen*/
  <TypeswitchLpar> Expr() <Rpar> (CaseClause())+  <Default>/*@bgen(jjtree) #Default( true) */
                                                           {
                                                             SimpleNode jjtn001 = new SimpleNode(this, JJTDEFAULT);
                                                             boolean jjtc001 = true;
                                                             jjtree.openNodeScope(jjtn001);
                                                           }
                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                           {
                                                             jjtree.closeNodeScope(jjtn001,  true);
                                                             jjtc001 = false;
                                                           }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                                           } finally {
                                                             if (jjtc001) {
                                                               jjtree.closeNodeScope(jjtn001,  true);
                                                             }
                                                           }
/*@egen*/                [<VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                                                                       {
                                                                                                                                         SimpleNode jjtn002 = new SimpleNode(this, JJTVARNAME);
                                                                                                                                         boolean jjtc002 = true;
                                                                                                                                         jjtree.openNodeScope(jjtn002);
                                                                                                                                       }
                                                                                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                       {
                                                                                                                                         jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                         jjtc002 = false;
                                                                                                                                       }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                       } finally {
                                                                                                                                         if (jjtc002) {
                                                                                                                                           jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                         }
                                                                                                                                       }
/*@egen*/               ] <Return> ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CaseClause()  :
{/*@bgen(jjtree) CaseClause */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCASECLAUSE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CaseClause */
  try {
/*@egen*/
  <Case>/*@bgen(jjtree) #Case( true) */
        {
          SimpleNode jjtn001 = new SimpleNode(this, JJTCASE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
        }
        try {
/*@egen*//*@bgen(jjtree)*/
        {
          jjtree.closeNodeScope(jjtn001,  true);
          jjtc001 = false;
        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  true);
          }
        }
/*@egen*/             [<VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                                                                                 {
                                                                                   SimpleNode jjtn002 = new SimpleNode(this, JJTVARNAME);
                                                                                   boolean jjtc002 = true;
                                                                                   jjtree.openNodeScope(jjtn002);
                                                                                 }
                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                 {
                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                   jjtc002 = false;
                                                                                 }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                 } finally {
                                                                                   if (jjtc002) {
                                                                                     jjtree.closeNodeScope(jjtn002,  true);
                                                                                   }
                                                                                 }
/*@egen*/                <As>/*@bgen(jjtree) #As( true) */
                                                                                                                                   {
                                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTAS);
                                                                                                                                     boolean jjtc003 = true;
                                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                                   }
                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                   {
                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                     jjtc003 = false;
                                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                   } finally {
                                                                                                                                     if (jjtc003) {
                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                     }
                                                                                                                                   }
/*@egen*/          ] SequenceType() <Return> ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void IfExpr()  :
{/*@bgen(jjtree) IfExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTIFEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) IfExpr */
  try {
/*@egen*/
  <IfLpar> Expr() <Rpar> <Then> ExprSingle() <Else> ExprSingle()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OperatorExpr()         :
{}
{
	OrExpr()
}

void OrExpr()              :
{/*@bgen(jjtree) #OrExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTOREXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #OrExpr(> 1) */
  try {
/*@egen*/
  AndExpr() (<Or>
        
         {binaryTokenStack.push(token);}
			 AndExpr()/*@bgen(jjtree) #OrExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTOREXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		           )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void AndExpr()               :
{/*@bgen(jjtree) #AndExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTANDEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #AndExpr(> 1) */
  try {
/*@egen*/
  ComparisonExpr() (<And>
        
         {binaryTokenStack.push(token);}
			 ComparisonExpr()/*@bgen(jjtree) #AndExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTANDEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		            )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void ComparisonExpr()                      :
{/*@bgen(jjtree) #ComparisonExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPARISONEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #ComparisonExpr(> 1) */
  try {
/*@egen*/
  RangeExpr() ((ValueComp() | GeneralComp() | NodeComp()) RangeExpr()/*@bgen(jjtree) #ComparisonExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTCOMPARISONEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		                   )?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void RangeExpr()                 :
{/*@bgen(jjtree) #RangeExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTRANGEEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #RangeExpr(> 1) */
  try {
/*@egen*/
  AdditiveExpr() (<To>
        
         {binaryTokenStack.push(token);}
			 AdditiveExpr()/*@bgen(jjtree) #RangeExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTRANGEEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		              )?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void AdditiveExpr()                    :
{/*@bgen(jjtree) #AdditiveExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTADDITIVEEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #AdditiveExpr(> 1) */
  try {
/*@egen*/
  MultiplicativeExpr() ((<Plus>
        
         {binaryTokenStack.push(token);}
			 | <Minus>
        
         {binaryTokenStack.push(token);}
			) MultiplicativeExpr()/*@bgen(jjtree) #AdditiveExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTADDITIVEEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		                 )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void MultiplicativeExpr()                          :
{/*@bgen(jjtree) #MultiplicativeExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTMULTIPLICATIVEEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #MultiplicativeExpr(> 1) */
  try {
/*@egen*/
  UnionExpr() ((<Multiply>
        
         {binaryTokenStack.push(token);}
			 | <Div>
        
         {binaryTokenStack.push(token);}
			 | <Idiv>
        
         {binaryTokenStack.push(token);}
			 | <Mod>
        
         {binaryTokenStack.push(token);}
			) UnionExpr()/*@bgen(jjtree) #MultiplicativeExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTMULTIPLICATIVEEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		                       )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void UnionExpr()                 :
{/*@bgen(jjtree) #UnionExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTUNIONEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #UnionExpr(> 1) */
  try {
/*@egen*/
  IntersectExceptExpr() ((<Union>
        
         {binaryTokenStack.push(token);}
			 | <Vbar>
        
         {binaryTokenStack.push(token);}
			) IntersectExceptExpr()/*@bgen(jjtree) #UnionExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTUNIONEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		              )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void IntersectExceptExpr()                           :
{/*@bgen(jjtree) #IntersectExceptExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTINTERSECTEXCEPTEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #IntersectExceptExpr(> 1) */
  try {
/*@egen*/
  InstanceofExpr() ((<Intersect>
        
         {binaryTokenStack.push(token);}
			 | <Except>
        
         {binaryTokenStack.push(token);}
			) InstanceofExpr()/*@bgen(jjtree) #IntersectExceptExpr( 2) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTINTERSECTEXCEPTEXPR);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  2);
                  jjtc001 = false;
                }
/*@egen*/
		{
         try
         {
		       jjtn001.processToken((Token)binaryTokenStack.pop());
         }
         catch(java.util.EmptyStackException e)
         {
           token_source.printLinePos();
           e.printStackTrace();
           throw e;
         }
		}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  2);
                  }
                }
/*@egen*/
		                        )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void InstanceofExpr()                      :
{/*@bgen(jjtree) #InstanceofExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTINSTANCEOFEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #InstanceofExpr(> 1) */
  try {
/*@egen*/
  TreatExpr() (<Instanceof> SequenceType())?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void TreatExpr()                 :
{/*@bgen(jjtree) #TreatExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTTREATEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #TreatExpr(> 1) */
  try {
/*@egen*/
  CastableExpr() (<TreatAs> SequenceType())?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void CastableExpr()                    :
{/*@bgen(jjtree) #CastableExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCASTABLEEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #CastableExpr(> 1) */
  try {
/*@egen*/
  CastExpr() (<Castable> SingleType())?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void CastExpr()                :
{/*@bgen(jjtree) #CastExpr(> 1) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCASTEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #CastExpr(> 1) */
  try {
/*@egen*/
  UnaryExpr() (<CastAs>/*@bgen(jjtree) #CastAs( true) */
                       {
                         SimpleNode jjtn001 = new SimpleNode(this, JJTCASTAS);
                         boolean jjtc001 = true;
                         jjtree.openNodeScope(jjtn001);
                       }
                       try {
/*@egen*//*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn001,  true);
                         jjtc001 = false;
                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc001) {
                           jjtree.closeNodeScope(jjtn001,  true);
                         }
                       }
/*@egen*/               SingleType())?/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1);
    }
  }
/*@egen*/
}

void UnaryExpr()                       :
{/*@bgen(jjtree) #UnaryExpr( keepUnary) */
 SimpleNode jjtn000 = new SimpleNode(this, JJTUNARYEXPR);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/boolean keepUnary=false;}
{/*@bgen(jjtree) #UnaryExpr( keepUnary) */
  try {
/*@egen*/
  (<UnaryMinus>/*@bgen(jjtree) #UnaryMinus( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTUNARYMINUS);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{keepUnary=true;jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                   | <UnaryPlus>/*@bgen(jjtree) #UnaryPlus( true) */
                                                                                            {
                                                                                              SimpleNode jjtn002 = new SimpleNode(this, JJTUNARYPLUS);
                                                                                              boolean jjtc002 = true;
                                                                                              jjtree.openNodeScope(jjtn002);
                                                                                            }
                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                            {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                              jjtc002 = false;
                                                                                            }
/*@egen*/{keepUnary=true;jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                            } finally {
                                                                                              if (jjtc002) {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                              }
                                                                                            }
/*@egen*/                 )* ValueExpr()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  keepUnary);
    }
  }
/*@egen*/
}

void ValueExpr()       :
{}
{
  (ValidateExpr() | PathExpr())
}

void GeneralComp()        :
{}
{
  (<Equals>
        
         {binaryTokenStack.push(token);}
			 | <NotEquals>
        
         {binaryTokenStack.push(token);}
			 | <Lt>
        
         {binaryTokenStack.push(token);}
			 | <LtEquals>
        
         {binaryTokenStack.push(token);}
			 | <Gt>
        
         {binaryTokenStack.push(token);}
			 | <GtEquals>
        
         {binaryTokenStack.push(token);}
			)
}

void ValueComp()        :
{}
{
  (<FortranEq>
        
         {binaryTokenStack.push(token);}
			 | <FortranNe>
        
         {binaryTokenStack.push(token);}
			 | <FortranLt>
        
         {binaryTokenStack.push(token);}
			 | <FortranLe>
        
         {binaryTokenStack.push(token);}
			 | <FortranGt>
        
         {binaryTokenStack.push(token);}
			 | <FortranGe>
        
         {binaryTokenStack.push(token);}
			)
}

void NodeComp()        :
{}
{
  (<Is>
        
         {binaryTokenStack.push(token);}
			 | <LtLt>
        
         {binaryTokenStack.push(token);}
			 | <GtGt>
        
         {binaryTokenStack.push(token);}
			)
}

void ValidateExpr()  :
{/*@bgen(jjtree) ValidateExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTVALIDATEEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ValidateExpr */
  try {
/*@egen*/
  (<ValidateLbrace>/*@bgen(jjtree) #ValidateLbrace( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTVALIDATELBRACE);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                       | (<ValidateSchemaMode>/*@bgen(jjtree) #ValidateSchemaMode( true) */
                                                                                               {
                                                                                                 SimpleNode jjtn002 = new SimpleNode(this, JJTVALIDATESCHEMAMODE);
                                                                                                 boolean jjtc002 = true;
                                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                               }
                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                               {
                                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 jjtc002 = false;
                                                                                               }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                               } finally {
                                                                                                 if (jjtc002) {
                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 }
                                                                                               }
/*@egen*/                           <LbraceExprEnclosure>/*@bgen(jjtree) #LbraceExprEnclosure( true) */
                                                                                                                                                                             {
                                                                                                                                                                               SimpleNode jjtn003 = new SimpleNode(this, JJTLBRACEEXPRENCLOSURE);
                                                                                                                                                                               boolean jjtc003 = true;
                                                                                                                                                                               jjtree.openNodeScope(jjtn003);
                                                                                                                                                                             }
                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                             {
                                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               jjtc003 = false;
                                                                                                                                                                             }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                             } finally {
                                                                                                                                                                               if (jjtc003) {
                                                                                                                                                                                 jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               }
                                                                                                                                                                             }
/*@egen*/                           )) Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          SimpleNode jjtn004 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                                                                                                          boolean jjtc004 = true;
                                                                                                                                                                                                                                                          jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                          jjtc004 = false;
                                                                                                                                                                                                                                                        }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                        } finally {
                                                                                                                                                                                                                                                          if (jjtc004) {
                                                                                                                                                                                                                                                            jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void PathExpr()                :
{/*@bgen(jjtree) #PathExpr(> 0) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPATHEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #PathExpr(> 0) */
  try {
/*@egen*/
  ((<Root>/*@bgen(jjtree) #Root( true) */
          {
            SimpleNode jjtn001 = new SimpleNode(this, JJTROOT);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
          }
          try {
/*@egen*//*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn001,  true);
            jjtc001 = false;
          }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001,  true);
            }
          }
/*@egen*/             [RelativePathExpr()]) | (<RootDescendants>/*@bgen(jjtree) #RootDescendants( true) */
                                                                                               {
                                                                                                 SimpleNode jjtn002 = new SimpleNode(this, JJTROOTDESCENDANTS);
                                                                                                 boolean jjtc002 = true;
                                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                               }
                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                               {
                                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 jjtc002 = false;
                                                                                               }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                               } finally {
                                                                                                 if (jjtc002) {
                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 }
                                                                                               }
/*@egen*/                        RelativePathExpr()) | RelativePathExpr())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 0);
    }
  }
/*@egen*/
}

void RelativePathExpr()        :
{}
{
  StepExpr() ((<Slash> | <SlashSlash>/*@bgen(jjtree) #SlashSlash( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTSLASHSLASH);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                  ) StepExpr())*
}

void StepExpr()                          :
{/*@bgen(jjtree) #StepExpr(> 1 || isStep) */
 SimpleNode jjtn000 = new SimpleNode(this, JJTSTEPEXPR);
 boolean jjtc000 = true;
 jjtree.openNodeScope(jjtn000);
/*@egen*/boolean savedIsStep = isStep; isStep=false;}
{/*@bgen(jjtree) #StepExpr(> 1 || isStep) */
  try {
/*@egen*/
  ({isStep=true;}AxisStep()/*@bgen(jjtree)*/
                           {
                             jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1 || isStep);
                             jjtc000 = false;
                           }
/*@egen*/{isStep = savedIsStep;} | FilterExpr()/*@bgen(jjtree)*/
                                                                 {
                                                                   jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1 || isStep);
                                                                   jjtc000 = false;
                                                                 }
/*@egen*/{isStep = savedIsStep;})/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 1 || isStep);
    }
  }
/*@egen*/
}

void AxisStep()        :
{}
{
  (ForwardStep() | ReverseStep()) PredicateList()
}

void ForwardStep()        :
{}
{
  ((ForwardAxis() NodeTest()) | AbbrevForwardStep())
}

void ForwardAxis()        :
{}
{
  (<AxisChild>/*@bgen(jjtree) #AxisChild( true) */
              {
                SimpleNode jjtn001 = new SimpleNode(this, JJTAXISCHILD);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
              }
              try {
/*@egen*//*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn001,  true);
                jjtc001 = false;
              }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001,  true);
                }
              }
/*@egen*/                  | <AxisDescendant>/*@bgen(jjtree) #AxisDescendant( true) */
                                                                                {
                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTAXISDESCENDANT);
                                                                                  boolean jjtc002 = true;
                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                }
                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                  jjtc002 = false;
                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                } finally {
                                                                                  if (jjtc002) {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                  }
                                                                                }
/*@egen*/                       | <AxisAttribute>/*@bgen(jjtree) #AxisAttribute( true) */
                                                                                                                                                      {
                                                                                                                                                        SimpleNode jjtn003 = new SimpleNode(this, JJTAXISATTRIBUTE);
                                                                                                                                                        boolean jjtc003 = true;
                                                                                                                                                        jjtree.openNodeScope(jjtn003);
                                                                                                                                                      }
                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                      {
                                                                                                                                                        jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                        jjtc003 = false;
                                                                                                                                                      }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                      } finally {
                                                                                                                                                        if (jjtc003) {
                                                                                                                                                          jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                        }
                                                                                                                                                      }
/*@egen*/                      | <AxisSelf>/*@bgen(jjtree) #AxisSelf( true) */
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        SimpleNode jjtn004 = new SimpleNode(this, JJTAXISSELF);
                                                                                                                                                                                                                        boolean jjtc004 = true;
                                                                                                                                                                                                                        jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                        jjtc004 = false;
                                                                                                                                                                                                                      }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                      } finally {
                                                                                                                                                                                                                        if (jjtc004) {
                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
/*@egen*/                 | <AxisDescendantOrSelf>/*@bgen(jjtree) #AxisDescendantOrSelf( true) */
                                                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                                                               SimpleNode jjtn005 = new SimpleNode(this, JJTAXISDESCENDANTORSELF);
                                                                                                                                                                                                                                                                                               boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                               jjtc005 = false;
                                                                                                                                                                                                                                                                                             }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                                                                                               if (jjtc005) {
                                                                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                                                                             }
/*@egen*/                             | <AxisFollowingSibling>/*@bgen(jjtree) #AxisFollowingSibling( true) */
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  SimpleNode jjtn006 = new SimpleNode(this, JJTAXISFOLLOWINGSIBLING);
                                                                                                                                                                                                                                                                                                                                                                                  boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                                                  jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                  jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                                                }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                } finally {
                                                                                                                                                                                                                                                                                                                                                                                  if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                                                    jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                }
/*@egen*/                             | <AxisFollowing>/*@bgen(jjtree) #AxisFollowing( true) */
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              SimpleNode jjtn007 = new SimpleNode(this, JJTAXISFOLLOWING);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              boolean jjtc007 = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              jjtree.openNodeScope(jjtn007);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              jjtc007 = false;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
/*@egen*/{jjtn007.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                                            } finally {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (jjtc007) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
/*@egen*/                     )
}

void AbbrevForwardStep()        :
{}
{
  [<At>/*@bgen(jjtree) #At( true) */
       {
         SimpleNode jjtn001 = new SimpleNode(this, JJTAT);
         boolean jjtc001 = true;
         jjtree.openNodeScope(jjtn001);
       }
       try {
/*@egen*//*@bgen(jjtree)*/
       {
         jjtree.closeNodeScope(jjtn001,  true);
         jjtc001 = false;
       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
       } finally {
         if (jjtc001) {
           jjtree.closeNodeScope(jjtn001,  true);
         }
       }
/*@egen*/          ] NodeTest()
}

void ReverseStep()        :
{}
{
  ((ReverseAxis() NodeTest()) | AbbrevReverseStep())
}

void ReverseAxis()        :
{}
{
  (<AxisParent>/*@bgen(jjtree) #AxisParent( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTAXISPARENT);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                   | <AxisAncestor>/*@bgen(jjtree) #AxisAncestor( true) */
                                                                                {
                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTAXISANCESTOR);
                                                                                  boolean jjtc002 = true;
                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                }
                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                  jjtc002 = false;
                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                } finally {
                                                                                  if (jjtc002) {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                  }
                                                                                }
/*@egen*/                     | <AxisPrecedingSibling>/*@bgen(jjtree) #AxisPrecedingSibling( true) */
                                                                                                                                                           {
                                                                                                                                                             SimpleNode jjtn003 = new SimpleNode(this, JJTAXISPRECEDINGSIBLING);
                                                                                                                                                             boolean jjtc003 = true;
                                                                                                                                                             jjtree.openNodeScope(jjtn003);
                                                                                                                                                           }
                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                           {
                                                                                                                                                             jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                             jjtc003 = false;
                                                                                                                                                           }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                           } finally {
                                                                                                                                                             if (jjtc003) {
                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                             }
                                                                                                                                                           }
/*@egen*/                             | <AxisPreceding>/*@bgen(jjtree) #AxisPreceding( true) */
                                                                                                                                                                                                                                       {
                                                                                                                                                                                                                                         SimpleNode jjtn004 = new SimpleNode(this, JJTAXISPRECEDING);
                                                                                                                                                                                                                                         boolean jjtc004 = true;
                                                                                                                                                                                                                                         jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                       }
                                                                                                                                                                                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                       {
                                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                         jjtc004 = false;
                                                                                                                                                                                                                                       }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                       } finally {
                                                                                                                                                                                                                                         if (jjtc004) {
                                                                                                                                                                                                                                           jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                         }
                                                                                                                                                                                                                                       }
/*@egen*/                      | <AxisAncestorOrSelf>/*@bgen(jjtree) #AxisAncestorOrSelf( true) */
                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                   SimpleNode jjtn005 = new SimpleNode(this, JJTAXISANCESTORORSELF);
                                                                                                                                                                                                                                                                                                                   boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                   jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                   jjtc005 = false;
                                                                                                                                                                                                                                                                                                                 }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                 } finally {
                                                                                                                                                                                                                                                                                                                   if (jjtc005) {
                                                                                                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                                                                                                 }
/*@egen*/                          )
}

void AbbrevReverseStep()        :
{}
{
  <DotDot>/*@bgen(jjtree) #DotDot( true) */
          {
            SimpleNode jjtn001 = new SimpleNode(this, JJTDOTDOT);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
          }
          try {
/*@egen*//*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn001,  true);
            jjtc001 = false;
          }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001,  true);
            }
          }
/*@egen*/              
}

void NodeTest()  :
{/*@bgen(jjtree) NodeTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTNODETEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) NodeTest */
  try {
/*@egen*/
  (KindTest() | NameTest())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void NameTest()  :
{/*@bgen(jjtree) NameTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTNAMETEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) NameTest */
  try {
/*@egen*/
  (<QName>/*@bgen(jjtree) #QName( true) */
          {
            SimpleNode jjtn001 = new SimpleNode(this, JJTQNAME);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
          }
          try {
/*@egen*//*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn001,  true);
            jjtc001 = false;
          }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001,  true);
            }
          }
/*@egen*/              | Wildcard())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Wildcard()        :
{}
{
  (<Star>/*@bgen(jjtree) #Star( true) */
         {
           SimpleNode jjtn001 = new SimpleNode(this, JJTSTAR);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
         }
         try {
/*@egen*//*@bgen(jjtree)*/
         {
           jjtree.closeNodeScope(jjtn001,  true);
           jjtc001 = false;
         }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001,  true);
           }
         }
/*@egen*/             | <NCNameColonStar>/*@bgen(jjtree) #NCNameColonStar( true) */
                                                                       {
                                                                         SimpleNode jjtn002 = new SimpleNode(this, JJTNCNAMECOLONSTAR);
                                                                         boolean jjtc002 = true;
                                                                         jjtree.openNodeScope(jjtn002);
                                                                       }
                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                       {
                                                                         jjtree.closeNodeScope(jjtn002,  true);
                                                                         jjtc002 = false;
                                                                       }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                       } finally {
                                                                         if (jjtc002) {
                                                                           jjtree.closeNodeScope(jjtn002,  true);
                                                                         }
                                                                       }
/*@egen*/                        | <StarColonNCName>/*@bgen(jjtree) #StarColonNCName( true) */
                                                                                                                                                {
                                                                                                                                                  SimpleNode jjtn003 = new SimpleNode(this, JJTSTARCOLONNCNAME);
                                                                                                                                                  boolean jjtc003 = true;
                                                                                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                                                                                }
                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                {
                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                  jjtc003 = false;
                                                                                                                                                }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                } finally {
                                                                                                                                                  if (jjtc003) {
                                                                                                                                                    jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                  }
                                                                                                                                                }
/*@egen*/                       )
}

void FilterExpr()        :
{}
{
  PrimaryExpr() PredicateList()
}

void PredicateList()                      :
{/*@bgen(jjtree) #PredicateList(> 0) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPREDICATELIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #PredicateList(> 0) */
  try {
/*@egen*/
  (Predicate())*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 0);
    }
  }
/*@egen*/
}

void Predicate()                  :
{/*@bgen(jjtree) #Predicate(> 0) */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPREDICATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) #Predicate(> 0) */
  try {
/*@egen*/
  <Lbrack> Expr() <Rbrack>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, jjtree.nodeArity() > 0);
    }
  }
/*@egen*/
}

void PrimaryExpr()        :
{}
{
  (Literal() | VarRef() | ParenthesizedExpr() | {isStep=true;}ContextItemExpr() | FunctionCall() | Constructor() | OrderedExpr() | UnorderedExpr())
}

void Literal()        :
{}
{
  (NumericLiteral() | <StringLiteral>/*@bgen(jjtree) #StringLiteral( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTSTRINGLITERAL);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                     )
}

void NumericLiteral()        :
{}
{
  (<IntegerLiteral>/*@bgen(jjtree) #IntegerLiteral( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTINTEGERLITERAL);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                       | <DecimalLiteral>/*@bgen(jjtree) #DecimalLiteral( true) */
                                                                                          {
                                                                                            SimpleNode jjtn002 = new SimpleNode(this, JJTDECIMALLITERAL);
                                                                                            boolean jjtc002 = true;
                                                                                            jjtree.openNodeScope(jjtn002);
                                                                                          }
                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                          {
                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                            jjtc002 = false;
                                                                                          }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                          } finally {
                                                                                            if (jjtc002) {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                            }
                                                                                          }
/*@egen*/                       | <DoubleLiteral>/*@bgen(jjtree) #DoubleLiteral( true) */
                                                                                                                                                                {
                                                                                                                                                                  SimpleNode jjtn003 = new SimpleNode(this, JJTDOUBLELITERAL);
                                                                                                                                                                  boolean jjtc003 = true;
                                                                                                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                                                                                                }
                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                {
                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  jjtc003 = false;
                                                                                                                                                                }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                } finally {
                                                                                                                                                                  if (jjtc003) {
                                                                                                                                                                    jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  }
                                                                                                                                                                }
/*@egen*/                     )
}

void VarRef()        :
{}
{
  <VariableIndicator> <VarName>/*@bgen(jjtree) #VarName( true) */
                               {
                                 SimpleNode jjtn001 = new SimpleNode(this, JJTVARNAME);
                                 boolean jjtc001 = true;
                                 jjtree.openNodeScope(jjtn001);
                               }
                               try {
/*@egen*//*@bgen(jjtree)*/
                               {
                                 jjtree.closeNodeScope(jjtn001,  true);
                                 jjtc001 = false;
                               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                               } finally {
                                 if (jjtc001) {
                                   jjtree.closeNodeScope(jjtn001,  true);
                                 }
                               }
/*@egen*/               
}

void ParenthesizedExpr()        :
{}
{
  <Lpar> [Expr()] <Rpar>
}

void ContextItemExpr()        :
{}
{
  <Dot>/*@bgen(jjtree) #Dot( true) */
       {
         SimpleNode jjtn001 = new SimpleNode(this, JJTDOT);
         boolean jjtc001 = true;
         jjtree.openNodeScope(jjtn001);
       }
       try {
/*@egen*//*@bgen(jjtree)*/
       {
         jjtree.closeNodeScope(jjtn001,  true);
         jjtc001 = false;
       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
       } finally {
         if (jjtc001) {
           jjtree.closeNodeScope(jjtn001,  true);
         }
       }
/*@egen*/           
}

void OrderedExpr()        :
{}
{
  <OrderedOpen>/*@bgen(jjtree) #OrderedOpen( true) */
               {
                 SimpleNode jjtn001 = new SimpleNode(this, JJTORDEREDOPEN);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
               }
               try {
/*@egen*//*@bgen(jjtree)*/
               {
                 jjtree.closeNodeScope(jjtn001,  true);
                 jjtc001 = false;
               }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001,  true);
                 }
               }
/*@egen*/                    Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                {
                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTRBRACE);
                                                                                  boolean jjtc002 = true;
                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                }
                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                  jjtc002 = false;
                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                } finally {
                                                                                  if (jjtc002) {
                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                  }
                                                                                }
/*@egen*/              
}

void UnorderedExpr()        :
{}
{
  <UnorderedOpen>/*@bgen(jjtree) #UnorderedOpen( true) */
                 {
                   SimpleNode jjtn001 = new SimpleNode(this, JJTUNORDEREDOPEN);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                 }
                 try {
/*@egen*//*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn001,  true);
                   jjtc001 = false;
                 }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001,  true);
                   }
                 }
/*@egen*/                      Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                    {
                                                                                      SimpleNode jjtn002 = new SimpleNode(this, JJTRBRACE);
                                                                                      boolean jjtc002 = true;
                                                                                      jjtree.openNodeScope(jjtn002);
                                                                                    }
                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                    {
                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                      jjtc002 = false;
                                                                                    }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                    } finally {
                                                                                      if (jjtc002) {
                                                                                        jjtree.closeNodeScope(jjtn002,  true);
                                                                                      }
                                                                                    }
/*@egen*/              
}

void FunctionCall()  :
{/*@bgen(jjtree) FunctionCall */
  SimpleNode jjtn000 = new SimpleNode(this, JJTFUNCTIONCALL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FunctionCall */
  try {
/*@egen*/
  (<QNameLpar>/*@bgen(jjtree) #QNameLpar( true) */
              {
                SimpleNode jjtn001 = new SimpleNode(this, JJTQNAMELPAR);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
              }
              try {
/*@egen*//*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn001,  true);
                jjtc001 = false;
              }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001,  true);
                }
              }
/*@egen*/                 ) [ExprSingle() (<Comma> ExprSingle())*] <Rpar>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void Constructor()  :
{/*@bgen(jjtree) Constructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Constructor */
  try {
/*@egen*/
  (DirectConstructor() | ComputedConstructor())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirectConstructor()  :
{/*@bgen(jjtree) DirectConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRECTCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirectConstructor */
  try {
/*@egen*/
  (DirElemConstructor() | DirCommentConstructor() | DirPIConstructor())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirElemConstructor()  :
{/*@bgen(jjtree) DirElemConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRELEMCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirElemConstructor */
  try {
/*@egen*/
  (<StartTagOpenRoot>/*@bgen(jjtree) #StartTagOpenRoot( true) */
                     {
                       SimpleNode jjtn001 = new SimpleNode(this, JJTSTARTTAGOPENROOT);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                     }
                     try {
/*@egen*//*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn001,  true);
                       jjtc001 = false;
                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001,  true);
                       }
                     }
/*@egen*/                         | <StartTagOpen>/*@bgen(jjtree) #StartTagOpen( true) */
                                                                                            {
                                                                                              SimpleNode jjtn002 = new SimpleNode(this, JJTSTARTTAGOPEN);
                                                                                              boolean jjtc002 = true;
                                                                                              jjtree.openNodeScope(jjtn002);
                                                                                            }
                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                            {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                              jjtc002 = false;
                                                                                            }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                            } finally {
                                                                                              if (jjtc002) {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                              }
                                                                                            }
/*@egen*/                    ) <TagQName>/*@bgen(jjtree) #TagQName( true) */
                                                                                                                                                          {
                                                                                                                                                            SimpleNode jjtn003 = new SimpleNode(this, JJTTAGQNAME);
                                                                                                                                                            boolean jjtc003 = true;
                                                                                                                                                            jjtree.openNodeScope(jjtn003);
                                                                                                                                                          }
                                                                                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                          {
                                                                                                                                                            jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                            jjtc003 = false;
                                                                                                                                                          }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                          } finally {
                                                                                                                                                            if (jjtc003) {
                                                                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                            }
                                                                                                                                                          }
/*@egen*/                 DirAttributeList() (<EmptyTagClose>/*@bgen(jjtree) #EmptyTagClose( true) */
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              SimpleNode jjtn004 = new SimpleNode(this, JJTEMPTYTAGCLOSE);
                                                                                                                                                                                                                                              boolean jjtc004 = true;
                                                                                                                                                                                                                                              jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                              jjtc004 = false;
                                                                                                                                                                                                                                            }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                            } finally {
                                                                                                                                                                                                                                              if (jjtc004) {
                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
/*@egen*/                      | (<StartTagClose>/*@bgen(jjtree) #StartTagClose( true) */
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    SimpleNode jjtn005 = new SimpleNode(this, JJTSTARTTAGCLOSE);
                                                                                                                                                                                                                                                                                                                    boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                    jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                    jjtc005 = false;
                                                                                                                                                                                                                                                                                                                  }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                  } finally {
                                                                                                                                                                                                                                                                                                                    if (jjtc005) {
                                                                                                                                                                                                                                                                                                                      jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                  }
/*@egen*/                      (DirElemContent())* <EndTagOpen>/*@bgen(jjtree) #EndTagOpen( true) */
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        SimpleNode jjtn006 = new SimpleNode(this, JJTENDTAGOPEN);
                                                                                                                                                                                                                                                                                                                                                                                                        boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                                                                        jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                                        jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                                                                      }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                      } finally {
                                                                                                                                                                                                                                                                                                                                                                                                        if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                      }
/*@egen*/                   <TagQName>/*@bgen(jjtree) #TagQName( true) */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   SimpleNode jjtn007 = new SimpleNode(this, JJTTAGQNAME);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   boolean jjtc007 = true;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   jjtree.openNodeScope(jjtn007);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   jjtc007 = false;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/{jjtn007.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 } finally {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   if (jjtc007) {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn007,  true);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                 }
/*@egen*/                 [<S>/*@bgen(jjtree) #S( true) */
{
impleNode jjtn008 = new SimpleNode(this, JJTS);
boolean jjtc008 = true;
jjtree.openNodeScope(jjtn008);
}
try {
/*@egen*//*@bgen(jjtree)*/
{
jjtree.closeNodeScope(jjtn008,  true);
jjtc008 = false;
}
/*@egen*/{jjtn008.processToken(token);}/*@bgen(jjtree)*/
} finally {
if (jjtc008) {
jjtree.closeNodeScope(jjtn008,  true);
}
}
/*@egen*/         ] <EndTagClose>/*@bgen(jjtree) #EndTagClose( true) */
{
impleNode jjtn009 = new SimpleNode(this, JJTENDTAGCLOSE);
boolean jjtc009 = true;
jjtree.openNodeScope(jjtn009);
}
try {
/*@egen*//*@bgen(jjtree)*/
{
jjtree.closeNodeScope(jjtn009,  true);
jjtc009 = false;
}
/*@egen*/{jjtn009.processToken(token);}/*@bgen(jjtree)*/
} finally {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (jjtc009) {
jjtree.closeNodeScope(jjtn009,  true);
}
}
/*@egen*/                   ))/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirAttributeList()  :
{/*@bgen(jjtree) DirAttributeList */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRATTRIBUTELIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirAttributeList */
  try {
/*@egen*/
  (<S>/*@bgen(jjtree) #S( true) */
      {
        SimpleNode jjtn001 = new SimpleNode(this, JJTS);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*//*@bgen(jjtree)*/
      {
        jjtree.closeNodeScope(jjtn001,  true);
        jjtc001 = false;
      }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  true);
        }
      }
/*@egen*/          [<TagQName>/*@bgen(jjtree) #TagQName( true) */
                                                         {
                                                           SimpleNode jjtn002 = new SimpleNode(this, JJTTAGQNAME);
                                                           boolean jjtc002 = true;
                                                           jjtree.openNodeScope(jjtn002);
                                                         }
                                                         try {
/*@egen*//*@bgen(jjtree)*/
                                                         {
                                                           jjtree.closeNodeScope(jjtn002,  true);
                                                           jjtc002 = false;
                                                         }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                         } finally {
                                                           if (jjtc002) {
                                                             jjtree.closeNodeScope(jjtn002,  true);
                                                           }
                                                         }
/*@egen*/                 [<S>/*@bgen(jjtree) #S( true) */
                                                                                                            {
                                                                                                              SimpleNode jjtn003 = new SimpleNode(this, JJTS);
                                                                                                              boolean jjtc003 = true;
                                                                                                              jjtree.openNodeScope(jjtn003);
                                                                                                            }
                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                            {
                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                              jjtc003 = false;
                                                                                                            }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                            } finally {
                                                                                                              if (jjtc003) {
                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                              }
                                                                                                            }
/*@egen*/         ] <ValueIndicator>/*@bgen(jjtree) #ValueIndicator( true) */
                                                                                                                                                                     {
                                                                                                                                                                       SimpleNode jjtn004 = new SimpleNode(this, JJTVALUEINDICATOR);
                                                                                                                                                                       boolean jjtc004 = true;
                                                                                                                                                                       jjtree.openNodeScope(jjtn004);
                                                                                                                                                                     }
                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                     {
                                                                                                                                                                       jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                       jjtc004 = false;
                                                                                                                                                                     }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                     } finally {
                                                                                                                                                                       if (jjtc004) {
                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                       }
                                                                                                                                                                     }
/*@egen*/                       [<S>/*@bgen(jjtree) #S( true) */
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                SimpleNode jjtn005 = new SimpleNode(this, JJTS);
                                                                                                                                                                                                                                boolean jjtc005 = true;
                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                jjtc005 = false;
                                                                                                                                                                                                                              }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                if (jjtc005) {
                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
/*@egen*/         ] DirAttributeValue()])*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirAttributeValue()  :
{/*@bgen(jjtree) DirAttributeValue */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRATTRIBUTEVALUE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirAttributeValue */
  try {
/*@egen*/
  ((<OpenQuot>/*@bgen(jjtree) #OpenQuot( true) */
              {
                SimpleNode jjtn001 = new SimpleNode(this, JJTOPENQUOT);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
              }
              try {
/*@egen*//*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn001,  true);
                jjtc001 = false;
              }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001,  true);
                }
              }
/*@egen*/                 ((<EscapeQuot>/*@bgen(jjtree) #EscapeQuot( true) */
                                                                           {
                                                                             SimpleNode jjtn002 = new SimpleNode(this, JJTESCAPEQUOT);
                                                                             boolean jjtc002 = true;
                                                                             jjtree.openNodeScope(jjtn002);
                                                                           }
                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                           {
                                                                             jjtree.closeNodeScope(jjtn002,  true);
                                                                             jjtc002 = false;
                                                                           }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                           } finally {
                                                                             if (jjtc002) {
                                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                                             }
                                                                           }
/*@egen*/                   | QuotAttrValueContent()))* <CloseQuot>/*@bgen(jjtree) #CloseQuot( true) */
                                                                                                                                                                   {
                                                                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTCLOSEQUOT);
                                                                                                                                                                     boolean jjtc003 = true;
                                                                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                                                                   }
                                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                   {
                                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                     jjtc003 = false;
                                                                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                   } finally {
                                                                                                                                                                     if (jjtc003) {
                                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                     }
                                                                                                                                                                   }
/*@egen*/                 ) | (<OpenApos>/*@bgen(jjtree) #OpenApos( true) */
                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                   SimpleNode jjtn004 = new SimpleNode(this, JJTOPENAPOS);
                                                                                                                                                                                                                                   boolean jjtc004 = true;
                                                                                                                                                                                                                                   jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                 try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                 {
                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                   jjtc004 = false;
                                                                                                                                                                                                                                 }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                 } finally {
                                                                                                                                                                                                                                   if (jjtc004) {
                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                 }
/*@egen*/                 ((<EscapeApos>/*@bgen(jjtree) #EscapeApos( true) */
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                SimpleNode jjtn005 = new SimpleNode(this, JJTESCAPEAPOS);
                                                                                                                                                                                                                                                                                                boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                jjtc005 = false;
                                                                                                                                                                                                                                                                                              }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                                                                                                if (jjtc005) {
                                                                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
/*@egen*/                   | AposAttrValueContent()))* <CloseApos>/*@bgen(jjtree) #CloseApos( true) */
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        SimpleNode jjtn006 = new SimpleNode(this, JJTCLOSEAPOS);
                                                                                                                                                                                                                                                                                                                                                                                        boolean jjtc006 = true;
                                                                                                                                                                                                                                                                                                                                                                                        jjtree.openNodeScope(jjtn006);
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                        jjtc006 = false;
                                                                                                                                                                                                                                                                                                                                                                                      }
/*@egen*/{jjtn006.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                      } finally {
                                                                                                                                                                                                                                                                                                                                                                                        if (jjtc006) {
                                                                                                                                                                                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn006,  true);
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                      }
/*@egen*/                 ))/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void QuotAttrValueContent()  :
{/*@bgen(jjtree) QuotAttrValueContent */
  SimpleNode jjtn000 = new SimpleNode(this, JJTQUOTATTRVALUECONTENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) QuotAttrValueContent */
  try {
/*@egen*/
  (<QuotAttrContentChar>/*@bgen(jjtree) #QuotAttrContentChar( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTQUOTATTRCONTENTCHAR);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                            | CommonContent())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void AposAttrValueContent()  :
{/*@bgen(jjtree) AposAttrValueContent */
  SimpleNode jjtn000 = new SimpleNode(this, JJTAPOSATTRVALUECONTENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AposAttrValueContent */
  try {
/*@egen*/
  (<AposAttrContentChar>/*@bgen(jjtree) #AposAttrContentChar( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTAPOSATTRCONTENTCHAR);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                            | CommonContent())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirElemContent()  :
{/*@bgen(jjtree) DirElemContent */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRELEMCONTENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirElemContent */
  try {
/*@egen*/
  (DirectConstructor() | <ElementContentChar>/*@bgen(jjtree) #ElementContentChar( true) */
                                             {
                                               SimpleNode jjtn001 = new SimpleNode(this, JJTELEMENTCONTENTCHAR);
                                               boolean jjtc001 = true;
                                               jjtree.openNodeScope(jjtn001);
                                             }
                                             try {
/*@egen*//*@bgen(jjtree)*/
                                             {
                                               jjtree.closeNodeScope(jjtn001,  true);
                                               jjtc001 = false;
                                             }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                             } finally {
                                               if (jjtc001) {
                                                 jjtree.closeNodeScope(jjtn001,  true);
                                               }
                                             }
/*@egen*/                           | CDataSection() | CommonContent())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CommonContent()  :
{/*@bgen(jjtree) CommonContent */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMMONCONTENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CommonContent */
  try {
/*@egen*/
  (<PredefinedEntityRef>/*@bgen(jjtree) #PredefinedEntityRef( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTPREDEFINEDENTITYREF);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                            | <CharRef>/*@bgen(jjtree) #CharRef( true) */
                                                                                             {
                                                                                               SimpleNode jjtn002 = new SimpleNode(this, JJTCHARREF);
                                                                                               boolean jjtc002 = true;
                                                                                               jjtree.openNodeScope(jjtn002);
                                                                                             }
                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                             {
                                                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                                                               jjtc002 = false;
                                                                                             }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                             } finally {
                                                                                               if (jjtc002) {
                                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                               }
                                                                                             }
/*@egen*/                | <LCurlyBraceEscape>/*@bgen(jjtree) #LCurlyBraceEscape( true) */
                                                                                                                                                                {
                                                                                                                                                                  SimpleNode jjtn003 = new SimpleNode(this, JJTLCURLYBRACEESCAPE);
                                                                                                                                                                  boolean jjtc003 = true;
                                                                                                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                                                                                                }
                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                {
                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  jjtc003 = false;
                                                                                                                                                                }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                } finally {
                                                                                                                                                                  if (jjtc003) {
                                                                                                                                                                    jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                  }
                                                                                                                                                                }
/*@egen*/                          | <RCurlyBraceEscape>/*@bgen(jjtree) #RCurlyBraceEscape( true) */
                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                               SimpleNode jjtn004 = new SimpleNode(this, JJTRCURLYBRACEESCAPE);
                                                                                                                                                                                                                                               boolean jjtc004 = true;
                                                                                                                                                                                                                                               jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                             {
                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                               jjtc004 = false;
                                                                                                                                                                                                                                             }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                             } finally {
                                                                                                                                                                                                                                               if (jjtc004) {
                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                             }
/*@egen*/                          | EnclosedExpr())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirCommentConstructor()  :
{/*@bgen(jjtree) DirCommentConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRCOMMENTCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirCommentConstructor */
  try {
/*@egen*/
  (<XmlCommentStartForElementContent>/*@bgen(jjtree) #XmlCommentStartForElementContent( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTXMLCOMMENTSTARTFORELEMENTCONTENT);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                                         | <XmlCommentStart>/*@bgen(jjtree) #XmlCommentStart( true) */
                                                                                                                               {
                                                                                                                                 SimpleNode jjtn002 = new SimpleNode(this, JJTXMLCOMMENTSTART);
                                                                                                                                 boolean jjtc002 = true;
                                                                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                                                               }
                                                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                               {
                                                                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                 jjtc002 = false;
                                                                                                                               }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                               } finally {
                                                                                                                                 if (jjtc002) {
                                                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                 }
                                                                                                                               }
/*@egen*/                       ) DirCommentContents() <XmlCommentEnd>/*@bgen(jjtree) #XmlCommentEnd( true) */
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            SimpleNode jjtn003 = new SimpleNode(this, JJTXMLCOMMENTEND);
                                                                                                                                                                                                                            boolean jjtc003 = true;
                                                                                                                                                                                                                            jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                            jjtc003 = false;
                                                                                                                                                                                                                          }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                          } finally {
                                                                                                                                                                                                                            if (jjtc003) {
                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
/*@egen*/                     /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirCommentContents()  :
{/*@bgen(jjtree) DirCommentContents */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRCOMMENTCONTENTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirCommentContents */
  try {
/*@egen*/
  ((<CommentContentChar>/*@bgen(jjtree) #CommentContentChar( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTCOMMENTCONTENTCHAR);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                           | <CommentContentCharDash>/*@bgen(jjtree) #CommentContentCharDash( true) */
                                                                                                           {
                                                                                                             SimpleNode jjtn002 = new SimpleNode(this, JJTCOMMENTCONTENTCHARDASH);
                                                                                                             boolean jjtc002 = true;
                                                                                                             jjtree.openNodeScope(jjtn002);
                                                                                                           }
                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                           {
                                                                                                             jjtree.closeNodeScope(jjtn002,  true);
                                                                                                             jjtc002 = false;
                                                                                                           }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                           } finally {
                                                                                                             if (jjtc002) {
                                                                                                               jjtree.closeNodeScope(jjtn002,  true);
                                                                                                             }
                                                                                                           }
/*@egen*/                              ))*/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirPIConstructor()  :
{/*@bgen(jjtree) DirPIConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRPICONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirPIConstructor */
  try {
/*@egen*/
  (<ProcessingInstructionStartForElementContent>/*@bgen(jjtree) #ProcessingInstructionStartForElementContent( true) */
                                                {
                                                  SimpleNode jjtn001 = new SimpleNode(this, JJTPROCESSINGINSTRUCTIONSTARTFORELEMENTCONTENT);
                                                  boolean jjtc001 = true;
                                                  jjtree.openNodeScope(jjtn001);
                                                }
                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                {
                                                  jjtree.closeNodeScope(jjtn001,  true);
                                                  jjtc001 = false;
                                                }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                                } finally {
                                                  if (jjtc001) {
                                                    jjtree.closeNodeScope(jjtn001,  true);
                                                  }
                                                }
/*@egen*/                                                    | <ProcessingInstructionStart>/*@bgen(jjtree) #ProcessingInstructionStart( true) */
                                                                                                                                                                {
                                                                                                                                                                  SimpleNode jjtn002 = new SimpleNode(this, JJTPROCESSINGINSTRUCTIONSTART);
                                                                                                                                                                  boolean jjtc002 = true;
                                                                                                                                                                  jjtree.openNodeScope(jjtn002);
                                                                                                                                                                }
                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                {
                                                                                                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                                                  jjtc002 = false;
                                                                                                                                                                }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                } finally {
                                                                                                                                                                  if (jjtc002) {
                                                                                                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                                                  }
                                                                                                                                                                }
/*@egen*/                                  ) <PITarget>/*@bgen(jjtree) #PITarget( true) */
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              SimpleNode jjtn003 = new SimpleNode(this, JJTPITARGET);
                                                                                                                                                                                                                                              boolean jjtc003 = true;
                                                                                                                                                                                                                                              jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                              jjtc003 = false;
                                                                                                                                                                                                                                            }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                            } finally {
                                                                                                                                                                                                                                              if (jjtc003) {
                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
/*@egen*/                 [<SForPI>/*@bgen(jjtree) #SForPI( true) */
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      SimpleNode jjtn004 = new SimpleNode(this, JJTSFORPI);
                                                                                                                                                                                                                                                                                                      boolean jjtc004 = true;
                                                                                                                                                                                                                                                                                                      jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                      jjtc004 = false;
                                                                                                                                                                                                                                                                                                    }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                    } finally {
                                                                                                                                                                                                                                                                                                      if (jjtc004) {
                                                                                                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                    }
/*@egen*/               DirPIContents()] <ProcessingInstructionEnd>/*@bgen(jjtree) #ProcessingInstructionEnd( true) */
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              SimpleNode jjtn005 = new SimpleNode(this, JJTPROCESSINGINSTRUCTIONEND);
                                                                                                                                                                                                                                                                                                                                                                                              boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                                                                                              jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                                                                              jjtc005 = false;
                                                                                                                                                                                                                                                                                                                                                                                            }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                            } finally {
                                                                                                                                                                                                                                                                                                                                                                                              if (jjtc005) {
                                                                                                                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                            }
/*@egen*/                                /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DirPIContents()  :
{/*@bgen(jjtree) DirPIContents */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDIRPICONTENTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DirPIContents */
  try {
/*@egen*/
  (<PIContentChar>/*@bgen(jjtree) #PIContentChar( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTPICONTENTCHAR);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                     )*/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CDataSection()  :
{/*@bgen(jjtree) CDataSection */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCDATASECTION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CDataSection */
  try {
/*@egen*/
  (<CdataSectionStartForElementContent>/*@bgen(jjtree) #CdataSectionStartForElementContent( true) */
                                       {
                                         SimpleNode jjtn001 = new SimpleNode(this, JJTCDATASECTIONSTARTFORELEMENTCONTENT);
                                         boolean jjtc001 = true;
                                         jjtree.openNodeScope(jjtn001);
                                       }
                                       try {
/*@egen*//*@bgen(jjtree)*/
                                       {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                         jjtc001 = false;
                                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                       } finally {
                                         if (jjtc001) {
                                           jjtree.closeNodeScope(jjtn001,  true);
                                         }
                                       }
/*@egen*/                                           | <CdataSectionStart>/*@bgen(jjtree) #CdataSectionStart( true) */
                                                                                                                                     {
                                                                                                                                       SimpleNode jjtn002 = new SimpleNode(this, JJTCDATASECTIONSTART);
                                                                                                                                       boolean jjtc002 = true;
                                                                                                                                       jjtree.openNodeScope(jjtn002);
                                                                                                                                     }
                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                     {
                                                                                                                                       jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                       jjtc002 = false;
                                                                                                                                     }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                     } finally {
                                                                                                                                       if (jjtc002) {
                                                                                                                                         jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                       }
                                                                                                                                     }
/*@egen*/                         ) CDataSectionContents() <CdataSectionEnd>/*@bgen(jjtree) #CdataSectionEnd( true) */
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        SimpleNode jjtn003 = new SimpleNode(this, JJTCDATASECTIONEND);
                                                                                                                                                                                                                                        boolean jjtc003 = true;
                                                                                                                                                                                                                                        jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                        jjtc003 = false;
                                                                                                                                                                                                                                      }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                      } finally {
                                                                                                                                                                                                                                        if (jjtc003) {
                                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
/*@egen*/                       /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CDataSectionContents()  :
{/*@bgen(jjtree) CDataSectionContents */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCDATASECTIONCONTENTS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CDataSectionContents */
  try {
/*@egen*/
  (<CDataSectionChar>/*@bgen(jjtree) #CDataSectionChar( true) */
                     {
                       SimpleNode jjtn001 = new SimpleNode(this, JJTCDATASECTIONCHAR);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                     }
                     try {
/*@egen*//*@bgen(jjtree)*/
                     {
                       jjtree.closeNodeScope(jjtn001,  true);
                       jjtc001 = false;
                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001,  true);
                       }
                     }
/*@egen*/                        )*/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ComputedConstructor()  :
{/*@bgen(jjtree) ComputedConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPUTEDCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ComputedConstructor */
  try {
/*@egen*/
  (CompDocConstructor() | CompElemConstructor() | CompAttrConstructor() | CompTextConstructor() | CompCommentConstructor() | CompPIConstructor())/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompDocConstructor()  :
{/*@bgen(jjtree) CompDocConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPDOCCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompDocConstructor */
  try {
/*@egen*/
  <DocumentLbrace>/*@bgen(jjtree) #DocumentLbrace( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTDOCUMENTLBRACE);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                       Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                      {
                                                                                        SimpleNode jjtn002 = new SimpleNode(this, JJTRBRACE);
                                                                                        boolean jjtc002 = true;
                                                                                        jjtree.openNodeScope(jjtn002);
                                                                                      }
                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                      {
                                                                                        jjtree.closeNodeScope(jjtn002,  true);
                                                                                        jjtc002 = false;
                                                                                      }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                      } finally {
                                                                                        if (jjtc002) {
                                                                                          jjtree.closeNodeScope(jjtn002,  true);
                                                                                        }
                                                                                      }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompElemConstructor()  :
{/*@bgen(jjtree) CompElemConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPELEMCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompElemConstructor */
  try {
/*@egen*/
  (<ElementQNameLbrace>/*@bgen(jjtree) #ElementQNameLbrace( true) */
                       {
                         SimpleNode jjtn001 = new SimpleNode(this, JJTELEMENTQNAMELBRACE);
                         boolean jjtc001 = true;
                         jjtree.openNodeScope(jjtn001);
                       }
                       try {
/*@egen*//*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn001,  true);
                         jjtc001 = false;
                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc001) {
                           jjtree.closeNodeScope(jjtn001,  true);
                         }
                       }
/*@egen*/                           | (<ElementLbrace>/*@bgen(jjtree) #ElementLbrace( true) */
                                                                                                  {
                                                                                                    SimpleNode jjtn002 = new SimpleNode(this, JJTELEMENTLBRACE);
                                                                                                    boolean jjtc002 = true;
                                                                                                    jjtree.openNodeScope(jjtn002);
                                                                                                  }
                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                  {
                                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                                    jjtc002 = false;
                                                                                                  }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                  } finally {
                                                                                                    if (jjtc002) {
                                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                                    }
                                                                                                  }
/*@egen*/                      Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                     {
                                                                                                                                                                       SimpleNode jjtn003 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                       boolean jjtc003 = true;
                                                                                                                                                                       jjtree.openNodeScope(jjtn003);
                                                                                                                                                                     }
                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                     {
                                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                       jjtc003 = false;
                                                                                                                                                                     }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                     } finally {
                                                                                                                                                                       if (jjtc003) {
                                                                                                                                                                         jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                       }
                                                                                                                                                                     }
/*@egen*/               <LbraceExprEnclosure>/*@bgen(jjtree) #LbraceExprEnclosure( true) */
                                                                                                                                                                                                                                       {
                                                                                                                                                                                                                                         SimpleNode jjtn004 = new SimpleNode(this, JJTLBRACEEXPRENCLOSURE);
                                                                                                                                                                                                                                         boolean jjtc004 = true;
                                                                                                                                                                                                                                         jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                       }
                                                                                                                                                                                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                       {
                                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                         jjtc004 = false;
                                                                                                                                                                                                                                       }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                       } finally {
                                                                                                                                                                                                                                         if (jjtc004) {
                                                                                                                                                                                                                                           jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                         }
                                                                                                                                                                                                                                       }
/*@egen*/                           )) [ContentExpr()] <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                                                             SimpleNode jjtn005 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                                                                                                                                                                             boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                             jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                           }
                                                                                                                                                                                                                                                                                                                           try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                           {
                                                                                                                                                                                                                                                                                                                             jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                             jjtc005 = false;
                                                                                                                                                                                                                                                                                                                           }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                           } finally {
                                                                                                                                                                                                                                                                                                                             if (jjtc005) {
                                                                                                                                                                                                                                                                                                                               jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                             }
                                                                                                                                                                                                                                                                                                                           }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ContentExpr()  :
{/*@bgen(jjtree) ContentExpr */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCONTENTEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ContentExpr */
  try {
/*@egen*/
  Expr()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompAttrConstructor()  :
{/*@bgen(jjtree) CompAttrConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPATTRCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompAttrConstructor */
  try {
/*@egen*/
  (<AttributeQNameLbrace>/*@bgen(jjtree) #AttributeQNameLbrace( true) */
                         {
                           SimpleNode jjtn001 = new SimpleNode(this, JJTATTRIBUTEQNAMELBRACE);
                           boolean jjtc001 = true;
                           jjtree.openNodeScope(jjtn001);
                         }
                         try {
/*@egen*//*@bgen(jjtree)*/
                         {
                           jjtree.closeNodeScope(jjtn001,  true);
                           jjtc001 = false;
                         }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                         } finally {
                           if (jjtc001) {
                             jjtree.closeNodeScope(jjtn001,  true);
                           }
                         }
/*@egen*/                             | (<AttributeLbrace>/*@bgen(jjtree) #AttributeLbrace( true) */
                                                                                                        {
                                                                                                          SimpleNode jjtn002 = new SimpleNode(this, JJTATTRIBUTELBRACE);
                                                                                                          boolean jjtc002 = true;
                                                                                                          jjtree.openNodeScope(jjtn002);
                                                                                                        }
                                                                                                        try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                        {
                                                                                                          jjtree.closeNodeScope(jjtn002,  true);
                                                                                                          jjtc002 = false;
                                                                                                        }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                        } finally {
                                                                                                          if (jjtc002) {
                                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                                          }
                                                                                                        }
/*@egen*/                        Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                             {
                                                                                                                                                                               SimpleNode jjtn003 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                               boolean jjtc003 = true;
                                                                                                                                                                               jjtree.openNodeScope(jjtn003);
                                                                                                                                                                             }
                                                                                                                                                                             try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                             {
                                                                                                                                                                               jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               jjtc003 = false;
                                                                                                                                                                             }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                             } finally {
                                                                                                                                                                               if (jjtc003) {
                                                                                                                                                                                 jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                               }
                                                                                                                                                                             }
/*@egen*/               <LbraceExprEnclosure>/*@bgen(jjtree) #LbraceExprEnclosure( true) */
                                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                                 SimpleNode jjtn004 = new SimpleNode(this, JJTLBRACEEXPRENCLOSURE);
                                                                                                                                                                                                                                                 boolean jjtc004 = true;
                                                                                                                                                                                                                                                 jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                               }
                                                                                                                                                                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                               {
                                                                                                                                                                                                                                                 jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                 jjtc004 = false;
                                                                                                                                                                                                                                               }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                               } finally {
                                                                                                                                                                                                                                                 if (jjtc004) {
                                                                                                                                                                                                                                                   jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                 }
                                                                                                                                                                                                                                               }
/*@egen*/                           )) [Expr()] <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              SimpleNode jjtn005 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                                                                                                                                                                              boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                              jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                              jjtc005 = false;
                                                                                                                                                                                                                                                                                                                            }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                            } finally {
                                                                                                                                                                                                                                                                                                                              if (jjtc005) {
                                                                                                                                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                            }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompTextConstructor()  :
{/*@bgen(jjtree) CompTextConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPTEXTCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompTextConstructor */
  try {
/*@egen*/
  <TextLbrace>/*@bgen(jjtree) #TextLbrace( true) */
              {
                SimpleNode jjtn001 = new SimpleNode(this, JJTTEXTLBRACE);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
              }
              try {
/*@egen*//*@bgen(jjtree)*/
              {
                jjtree.closeNodeScope(jjtn001,  true);
                jjtc001 = false;
              }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001,  true);
                }
              }
/*@egen*/                   Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                              {
                                                                                SimpleNode jjtn002 = new SimpleNode(this, JJTRBRACE);
                                                                                boolean jjtc002 = true;
                                                                                jjtree.openNodeScope(jjtn002);
                                                                              }
                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                              {
                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                jjtc002 = false;
                                                                              }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                              } finally {
                                                                                if (jjtc002) {
                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                }
                                                                              }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompCommentConstructor()  :
{/*@bgen(jjtree) CompCommentConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPCOMMENTCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompCommentConstructor */
  try {
/*@egen*/
  <CommentLbrace>/*@bgen(jjtree) #CommentLbrace( true) */
                 {
                   SimpleNode jjtn001 = new SimpleNode(this, JJTCOMMENTLBRACE);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                 }
                 try {
/*@egen*//*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn001,  true);
                   jjtc001 = false;
                 }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001,  true);
                   }
                 }
/*@egen*/                      Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                    {
                                                                                      SimpleNode jjtn002 = new SimpleNode(this, JJTRBRACE);
                                                                                      boolean jjtc002 = true;
                                                                                      jjtree.openNodeScope(jjtn002);
                                                                                    }
                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                    {
                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                      jjtc002 = false;
                                                                                    }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                    } finally {
                                                                                      if (jjtc002) {
                                                                                        jjtree.closeNodeScope(jjtn002,  true);
                                                                                      }
                                                                                    }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CompPIConstructor()  :
{/*@bgen(jjtree) CompPIConstructor */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMPPICONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CompPIConstructor */
  try {
/*@egen*/
  (<PINCNameLbrace>/*@bgen(jjtree) #PINCNameLbrace( true) */
                   {
                     SimpleNode jjtn001 = new SimpleNode(this, JJTPINCNAMELBRACE);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                   }
                   try {
/*@egen*//*@bgen(jjtree)*/
                   {
                     jjtree.closeNodeScope(jjtn001,  true);
                     jjtc001 = false;
                   }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001,  true);
                     }
                   }
/*@egen*/                       | (<PILbrace>/*@bgen(jjtree) #PILbrace( true) */
                                                                                     {
                                                                                       SimpleNode jjtn002 = new SimpleNode(this, JJTPILBRACE);
                                                                                       boolean jjtc002 = true;
                                                                                       jjtree.openNodeScope(jjtn002);
                                                                                     }
                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                     {
                                                                                       jjtree.closeNodeScope(jjtn002,  true);
                                                                                       jjtc002 = false;
                                                                                     }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                     } finally {
                                                                                       if (jjtc002) {
                                                                                         jjtree.closeNodeScope(jjtn002,  true);
                                                                                       }
                                                                                     }
/*@egen*/                 Expr() <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                   {
                                                                                                                                                     SimpleNode jjtn003 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                     boolean jjtc003 = true;
                                                                                                                                                     jjtree.openNodeScope(jjtn003);
                                                                                                                                                   }
                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                   {
                                                                                                                                                     jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                     jjtc003 = false;
                                                                                                                                                   }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                   } finally {
                                                                                                                                                     if (jjtc003) {
                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                     }
                                                                                                                                                   }
/*@egen*/               <LbraceExprEnclosure>/*@bgen(jjtree) #LbraceExprEnclosure( true) */
                                                                                                                                                                                                                     {
                                                                                                                                                                                                                       SimpleNode jjtn004 = new SimpleNode(this, JJTLBRACEEXPRENCLOSURE);
                                                                                                                                                                                                                       boolean jjtc004 = true;
                                                                                                                                                                                                                       jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                     }
                                                                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                     {
                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                       jjtc004 = false;
                                                                                                                                                                                                                     }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                     } finally {
                                                                                                                                                                                                                       if (jjtc004) {
                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                       }
                                                                                                                                                                                                                     }
/*@egen*/                           )) [Expr()] <Rbrace>/*@bgen(jjtree) #Rbrace( true) */
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    SimpleNode jjtn005 = new SimpleNode(this, JJTRBRACE);
                                                                                                                                                                                                                                                                                                    boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                    jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                    jjtc005 = false;
                                                                                                                                                                                                                                                                                                  }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                  } finally {
                                                                                                                                                                                                                                                                                                    if (jjtc005) {
                                                                                                                                                                                                                                                                                                      jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                  }
/*@egen*/              /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SingleType()  :
{/*@bgen(jjtree) SingleType */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSINGLETYPE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SingleType */
  try {
/*@egen*/
  AtomicType() [<OccurrenceZeroOrOne>/*@bgen(jjtree) #OccurrenceZeroOrOne( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTOCCURRENCEZEROORONE);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                           ]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void TypeDeclaration()  :
{/*@bgen(jjtree) TypeDeclaration */
  SimpleNode jjtn000 = new SimpleNode(this, JJTTYPEDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeDeclaration */
  try {
/*@egen*/
  <As>/*@bgen(jjtree) #As( true) */
      {
        SimpleNode jjtn001 = new SimpleNode(this, JJTAS);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
      }
      try {
/*@egen*//*@bgen(jjtree)*/
      {
        jjtree.closeNodeScope(jjtn001,  true);
        jjtc001 = false;
      }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  true);
        }
      }
/*@egen*/           SequenceType()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SequenceType()  :
{/*@bgen(jjtree) SequenceType */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSEQUENCETYPE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SequenceType */
  try {
/*@egen*/
  ((ItemType() [OccurrenceIndicator()]) | <EmptyTok>/*@bgen(jjtree) #EmptyTok( true) */
                                                    {
                                                      SimpleNode jjtn001 = new SimpleNode(this, JJTEMPTYTOK);
                                                      boolean jjtc001 = true;
                                                      jjtree.openNodeScope(jjtn001);
                                                    }
                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                    {
                                                      jjtree.closeNodeScope(jjtn001,  true);
                                                      jjtc001 = false;
                                                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                                    } finally {
                                                      if (jjtc001) {
                                                        jjtree.closeNodeScope(jjtn001,  true);
                                                      }
                                                    }
/*@egen*/                )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void OccurrenceIndicator()        :
{}
{
  (<OccurrenceZeroOrOne>/*@bgen(jjtree) #OccurrenceZeroOrOne( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTOCCURRENCEZEROORONE);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                            | <OccurrenceZeroOrMore>/*@bgen(jjtree) #OccurrenceZeroOrMore( true) */
                                                                                                          {
                                                                                                            SimpleNode jjtn002 = new SimpleNode(this, JJTOCCURRENCEZEROORMORE);
                                                                                                            boolean jjtc002 = true;
                                                                                                            jjtree.openNodeScope(jjtn002);
                                                                                                          }
                                                                                                          try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                          {
                                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                                            jjtc002 = false;
                                                                                                          }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                          } finally {
                                                                                                            if (jjtc002) {
                                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                                            }
                                                                                                          }
/*@egen*/                             | <OccurrenceOneOrMore>/*@bgen(jjtree) #OccurrenceOneOrMore( true) */
                                                                                                                                                                                            {
                                                                                                                                                                                              SimpleNode jjtn003 = new SimpleNode(this, JJTOCCURRENCEONEORMORE);
                                                                                                                                                                                              boolean jjtc003 = true;
                                                                                                                                                                                              jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                            }
                                                                                                                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                            {
                                                                                                                                                                                              jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                              jjtc003 = false;
                                                                                                                                                                                            }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                            } finally {
                                                                                                                                                                                              if (jjtc003) {
                                                                                                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                              }
                                                                                                                                                                                            }
/*@egen*/                           )
}

void ItemType()        :
{}
{
  (AtomicType() | KindTest() | <Item>/*@bgen(jjtree) #Item( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTITEM);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/            )
}

void AtomicType()  :
{/*@bgen(jjtree) AtomicType */
  SimpleNode jjtn000 = new SimpleNode(this, JJTATOMICTYPE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AtomicType */
  try {
/*@egen*/
  (<QNameForAtomicType>/*@bgen(jjtree) #QNameForAtomicType( true) */
                       {
                         SimpleNode jjtn001 = new SimpleNode(this, JJTQNAMEFORATOMICTYPE);
                         boolean jjtc001 = true;
                         jjtree.openNodeScope(jjtn001);
                       }
                       try {
/*@egen*//*@bgen(jjtree)*/
                       {
                         jjtree.closeNodeScope(jjtn001,  true);
                         jjtc001 = false;
                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                       } finally {
                         if (jjtc001) {
                           jjtree.closeNodeScope(jjtn001,  true);
                         }
                       }
/*@egen*/                           | <QNameForSequenceType>/*@bgen(jjtree) #QNameForSequenceType( true) */
                                                                                                        {
                                                                                                          SimpleNode jjtn002 = new SimpleNode(this, JJTQNAMEFORSEQUENCETYPE);
                                                                                                          boolean jjtc002 = true;
                                                                                                          jjtree.openNodeScope(jjtn002);
                                                                                                        }
                                                                                                        try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                        {
                                                                                                          jjtree.closeNodeScope(jjtn002,  true);
                                                                                                          jjtc002 = false;
                                                                                                        }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                        } finally {
                                                                                                          if (jjtc002) {
                                                                                                            jjtree.closeNodeScope(jjtn002,  true);
                                                                                                          }
                                                                                                        }
/*@egen*/                            )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void KindTest()        :
{}
{
  (DocumentTest() | ElementTest() | AttributeTest() | SchemaElementTest() | SchemaAttributeTest() | PITest() | CommentTest() | TextTest() | AnyKindTest())
}

void AnyKindTest()  :
{/*@bgen(jjtree) AnyKindTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTANYKINDTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AnyKindTest */
  try {
/*@egen*/
  (<NodeLpar> | <NodeLparForKindTest>/*@bgen(jjtree) #NodeLparForKindTest( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTNODELPARFORKINDTEST);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                           ) <RparForKindTest>/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void DocumentTest()  :
{/*@bgen(jjtree) DocumentTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTDOCUMENTTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DocumentTest */
  try {
/*@egen*/
  (<DocumentLpar>/*@bgen(jjtree) #DocumentLpar( true) */
                 {
                   SimpleNode jjtn001 = new SimpleNode(this, JJTDOCUMENTLPAR);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                 }
                 try {
/*@egen*//*@bgen(jjtree)*/
                 {
                   jjtree.closeNodeScope(jjtn001,  true);
                   jjtc001 = false;
                 }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001,  true);
                   }
                 }
/*@egen*/                     | <DocumentLparForKindTest>/*@bgen(jjtree) #DocumentLparForKindTest( true) */
                                                                                               {
                                                                                                 SimpleNode jjtn002 = new SimpleNode(this, JJTDOCUMENTLPARFORKINDTEST);
                                                                                                 boolean jjtc002 = true;
                                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                               }
                                                                                               try {
/*@egen*//*@bgen(jjtree)*/
                                                                                               {
                                                                                                 jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 jjtc002 = false;
                                                                                               }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                               } finally {
                                                                                                 if (jjtc002) {
                                                                                                   jjtree.closeNodeScope(jjtn002,  true);
                                                                                                 }
                                                                                               }
/*@egen*/                               ) [(ElementTest() | SchemaElementTest())] <RparForKindTest>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void TextTest()  :
{/*@bgen(jjtree) TextTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTTEXTTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TextTest */
  try {
/*@egen*/
  (<TextLpar> | <TextLparForKindTest>/*@bgen(jjtree) #TextLparForKindTest( true) */
                                     {
                                       SimpleNode jjtn001 = new SimpleNode(this, JJTTEXTLPARFORKINDTEST);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*//*@bgen(jjtree)*/
                                     {
                                       jjtree.closeNodeScope(jjtn001,  true);
                                       jjtc001 = false;
                                     }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  true);
                                       }
                                     }
/*@egen*/                           ) <RparForKindTest>/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void CommentTest()  :
{/*@bgen(jjtree) CommentTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTCOMMENTTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CommentTest */
  try {
/*@egen*/
  (<CommentLpar> | <CommentLparForKindTest>/*@bgen(jjtree) #CommentLparForKindTest( true) */
                                           {
                                             SimpleNode jjtn001 = new SimpleNode(this, JJTCOMMENTLPARFORKINDTEST);
                                             boolean jjtc001 = true;
                                             jjtree.openNodeScope(jjtn001);
                                           }
                                           try {
/*@egen*//*@bgen(jjtree)*/
                                           {
                                             jjtree.closeNodeScope(jjtn001,  true);
                                             jjtc001 = false;
                                           }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                           } finally {
                                             if (jjtc001) {
                                               jjtree.closeNodeScope(jjtn001,  true);
                                             }
                                           }
/*@egen*/                              ) <RparForKindTest>/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void PITest()  :
{/*@bgen(jjtree) PITest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTPITEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PITest */
  try {
/*@egen*/
  (<ProcessingInstructionLpar> | <ProcessingInstructionLparForKindTest>/*@bgen(jjtree) #ProcessingInstructionLparForKindTest( true) */
                                                                       {
                                                                         SimpleNode jjtn001 = new SimpleNode(this, JJTPROCESSINGINSTRUCTIONLPARFORKINDTEST);
                                                                         boolean jjtc001 = true;
                                                                         jjtree.openNodeScope(jjtn001);
                                                                       }
                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                       {
                                                                         jjtree.closeNodeScope(jjtn001,  true);
                                                                         jjtc001 = false;
                                                                       }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                                                                       } finally {
                                                                         if (jjtc001) {
                                                                           jjtree.closeNodeScope(jjtn001,  true);
                                                                         }
                                                                       }
/*@egen*/                                            ) [(<NCNameForPI>/*@bgen(jjtree) #NCNameForPI( true) */
                                                                                                                                                                  {
                                                                                                                                                                    SimpleNode jjtn002 = new SimpleNode(this, JJTNCNAMEFORPI);
                                                                                                                                                                    boolean jjtc002 = true;
                                                                                                                                                                    jjtree.openNodeScope(jjtn002);
                                                                                                                                                                  }
                                                                                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                  {
                                                                                                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                                                    jjtc002 = false;
                                                                                                                                                                  }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                  } finally {
                                                                                                                                                                    if (jjtc002) {
                                                                                                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                                                                    }
                                                                                                                                                                  }
/*@egen*/                    | <StringLiteralForKindTest>/*@bgen(jjtree) #StringLiteralForKindTest( true) */
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  SimpleNode jjtn003 = new SimpleNode(this, JJTSTRINGLITERALFORKINDTEST);
                                                                                                                                                                                                                                                  boolean jjtc003 = true;
                                                                                                                                                                                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                                  jjtc003 = false;
                                                                                                                                                                                                                                                }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                } finally {
                                                                                                                                                                                                                                                  if (jjtc003) {
                                                                                                                                                                                                                                                    jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
/*@egen*/                                )] <RparForKindTest>/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void AttributeTest()  :
{/*@bgen(jjtree) AttributeTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTATTRIBUTETEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AttributeTest */
  try {
/*@egen*/
  (<AttributeType>/*@bgen(jjtree) #AttributeType( true) */
                  {
                    SimpleNode jjtn001 = new SimpleNode(this, JJTATTRIBUTETYPE);
                    boolean jjtc001 = true;
                    jjtree.openNodeScope(jjtn001);
                  }
                  try {
/*@egen*//*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn001,  true);
                    jjtc001 = false;
                  }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                  } finally {
                    if (jjtc001) {
                      jjtree.closeNodeScope(jjtn001,  true);
                    }
                  }
/*@egen*/                      | <AttributeTypeForKindTest>/*@bgen(jjtree) #AttributeTypeForKindTest( true) */
                                                                                                  {
                                                                                                    SimpleNode jjtn002 = new SimpleNode(this, JJTATTRIBUTETYPEFORKINDTEST);
                                                                                                    boolean jjtc002 = true;
                                                                                                    jjtree.openNodeScope(jjtn002);
                                                                                                  }
                                                                                                  try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                  {
                                                                                                    jjtree.closeNodeScope(jjtn002,  true);
                                                                                                    jjtc002 = false;
                                                                                                  }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                  } finally {
                                                                                                    if (jjtc002) {
                                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                                    }
                                                                                                  }
/*@egen*/                                ) [(AttribNameOrWildcard() [<CommaForKindTest>/*@bgen(jjtree) #CommaForKindTest( true) */
                                                                                                                                                                                                              {
                                                                                                                                                                                                                SimpleNode jjtn003 = new SimpleNode(this, JJTCOMMAFORKINDTEST);
                                                                                                                                                                                                                boolean jjtc003 = true;
                                                                                                                                                                                                                jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                              }
                                                                                                                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                              {
                                                                                                                                                                                                                jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                jjtc003 = false;
                                                                                                                                                                                                              }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                              } finally {
                                                                                                                                                                                                                if (jjtc003) {
                                                                                                                                                                                                                  jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
/*@egen*/                         TypeName()])] <RparForKindTest>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void AttribNameOrWildcard()  :
{/*@bgen(jjtree) AttribNameOrWildcard */
  SimpleNode jjtn000 = new SimpleNode(this, JJTATTRIBNAMEORWILDCARD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AttribNameOrWildcard */
  try {
/*@egen*/
  (AttributeName() | <AnyName>/*@bgen(jjtree) #AnyName( true) */
                              {
                                SimpleNode jjtn001 = new SimpleNode(this, JJTANYNAME);
                                boolean jjtc001 = true;
                                jjtree.openNodeScope(jjtn001);
                              }
                              try {
/*@egen*//*@bgen(jjtree)*/
                              {
                                jjtree.closeNodeScope(jjtn001,  true);
                                jjtc001 = false;
                              }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                              } finally {
                                if (jjtc001) {
                                  jjtree.closeNodeScope(jjtn001,  true);
                                }
                              }
/*@egen*/               )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SchemaAttributeTest()  :
{/*@bgen(jjtree) SchemaAttributeTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSCHEMAATTRIBUTETEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SchemaAttributeTest */
  try {
/*@egen*/
  (<SchemaAttributeType>/*@bgen(jjtree) #SchemaAttributeType( true) */
                        {
                          SimpleNode jjtn001 = new SimpleNode(this, JJTSCHEMAATTRIBUTETYPE);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001,  true);
                          jjtc001 = false;
                        }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001,  true);
                          }
                        }
/*@egen*/                            | <SchemaAttributeTypeForKindTest>/*@bgen(jjtree) #SchemaAttributeTypeForKindTest( true) */
                                                                                                                    {
                                                                                                                      SimpleNode jjtn002 = new SimpleNode(this, JJTSCHEMAATTRIBUTETYPEFORKINDTEST);
                                                                                                                      boolean jjtc002 = true;
                                                                                                                      jjtree.openNodeScope(jjtn002);
                                                                                                                    }
                                                                                                                    try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                    {
                                                                                                                      jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                      jjtc002 = false;
                                                                                                                    }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                    } finally {
                                                                                                                      if (jjtc002) {
                                                                                                                        jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                      }
                                                                                                                    }
/*@egen*/                                      ) AttributeDeclaration() <RparForKindTest>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void AttributeDeclaration()  :
{/*@bgen(jjtree) AttributeDeclaration */
  SimpleNode jjtn000 = new SimpleNode(this, JJTATTRIBUTEDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AttributeDeclaration */
  try {
/*@egen*/
  AttributeName()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ElementTest()  :
{/*@bgen(jjtree) ElementTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTELEMENTTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ElementTest */
  try {
/*@egen*/
  (<ElementType>/*@bgen(jjtree) #ElementType( true) */
                {
                  SimpleNode jjtn001 = new SimpleNode(this, JJTELEMENTTYPE);
                  boolean jjtc001 = true;
                  jjtree.openNodeScope(jjtn001);
                }
                try {
/*@egen*//*@bgen(jjtree)*/
                {
                  jjtree.closeNodeScope(jjtn001,  true);
                  jjtc001 = false;
                }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                } finally {
                  if (jjtc001) {
                    jjtree.closeNodeScope(jjtn001,  true);
                  }
                }
/*@egen*/                    | <ElementTypeForKindTest>/*@bgen(jjtree) #ElementTypeForKindTest( true) */
                                                                                            {
                                                                                              SimpleNode jjtn002 = new SimpleNode(this, JJTELEMENTTYPEFORKINDTEST);
                                                                                              boolean jjtc002 = true;
                                                                                              jjtree.openNodeScope(jjtn002);
                                                                                            }
                                                                                            try {
/*@egen*//*@bgen(jjtree)*/
                                                                                            {
                                                                                              jjtree.closeNodeScope(jjtn002,  true);
                                                                                              jjtc002 = false;
                                                                                            }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                            } finally {
                                                                                              if (jjtc002) {
                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                              }
                                                                                            }
/*@egen*/                               | <ElementTypeForDocumentTest>/*@bgen(jjtree) #ElementTypeForDocumentTest( true) */
                                                                                                                                                                                       {
                                                                                                                                                                                         SimpleNode jjtn003 = new SimpleNode(this, JJTELEMENTTYPEFORDOCUMENTTEST);
                                                                                                                                                                                         boolean jjtc003 = true;
                                                                                                                                                                                         jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                       }
                                                                                                                                                                                       try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                       {
                                                                                                                                                                                         jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                         jjtc003 = false;
                                                                                                                                                                                       }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                       } finally {
                                                                                                                                                                                         if (jjtc003) {
                                                                                                                                                                                           jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                         }
                                                                                                                                                                                       }
/*@egen*/                                  ) [(ElementNameOrWildcard() [<CommaForKindTest>/*@bgen(jjtree) #CommaForKindTest( true) */
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        SimpleNode jjtn004 = new SimpleNode(this, JJTCOMMAFORKINDTEST);
                                                                                                                                                                                                                                                                                                        boolean jjtc004 = true;
                                                                                                                                                                                                                                                                                                        jjtree.openNodeScope(jjtn004);
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                        jjtc004 = false;
                                                                                                                                                                                                                                                                                                      }
/*@egen*/{jjtn004.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                      } finally {
                                                                                                                                                                                                                                                                                                        if (jjtc004) {
                                                                                                                                                                                                                                                                                                          jjtree.closeNodeScope(jjtn004,  true);
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                      }
/*@egen*/                         TypeName() [<Nillable>/*@bgen(jjtree) #Nillable( true) */
                                                                                                                                                                                                                                                                                                                                                                                   {
                                                                                                                                                                                                                                                                                                                                                                                     SimpleNode jjtn005 = new SimpleNode(this, JJTNILLABLE);
                                                                                                                                                                                                                                                                                                                                                                                     boolean jjtc005 = true;
                                                                                                                                                                                                                                                                                                                                                                                     jjtree.openNodeScope(jjtn005);
                                                                                                                                                                                                                                                                                                                                                                                   }
                                                                                                                                                                                                                                                                                                                                                                                   try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                   {
                                                                                                                                                                                                                                                                                                                                                                                     jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                                                                     jjtc005 = false;
                                                                                                                                                                                                                                                                                                                                                                                   }
/*@egen*/{jjtn005.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                                                                                                                                                                                   } finally {
                                                                                                                                                                                                                                                                                                                                                                                     if (jjtc005) {
                                                                                                                                                                                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn005,  true);
                                                                                                                                                                                                                                                                                                                                                                                     }
                                                                                                                                                                                                                                                                                                                                                                                   }
/*@egen*/                ]])] <RparForKindTest>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ElementNameOrWildcard()  :
{/*@bgen(jjtree) ElementNameOrWildcard */
  SimpleNode jjtn000 = new SimpleNode(this, JJTELEMENTNAMEORWILDCARD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ElementNameOrWildcard */
  try {
/*@egen*/
  (ElementName() | <AnyName>/*@bgen(jjtree) #AnyName( true) */
                            {
                              SimpleNode jjtn001 = new SimpleNode(this, JJTANYNAME);
                              boolean jjtc001 = true;
                              jjtree.openNodeScope(jjtn001);
                            }
                            try {
/*@egen*//*@bgen(jjtree)*/
                            {
                              jjtree.closeNodeScope(jjtn001,  true);
                              jjtc001 = false;
                            }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                            } finally {
                              if (jjtc001) {
                                jjtree.closeNodeScope(jjtn001,  true);
                              }
                            }
/*@egen*/               )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void SchemaElementTest()  :
{/*@bgen(jjtree) SchemaElementTest */
  SimpleNode jjtn000 = new SimpleNode(this, JJTSCHEMAELEMENTTEST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SchemaElementTest */
  try {
/*@egen*/
  (<SchemaElementType>/*@bgen(jjtree) #SchemaElementType( true) */
                      {
                        SimpleNode jjtn001 = new SimpleNode(this, JJTSCHEMAELEMENTTYPE);
                        boolean jjtc001 = true;
                        jjtree.openNodeScope(jjtn001);
                      }
                      try {
/*@egen*//*@bgen(jjtree)*/
                      {
                        jjtree.closeNodeScope(jjtn001,  true);
                        jjtc001 = false;
                      }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                      } finally {
                        if (jjtc001) {
                          jjtree.closeNodeScope(jjtn001,  true);
                        }
                      }
/*@egen*/                          | <SchemaElementTypeForKindTest>/*@bgen(jjtree) #SchemaElementTypeForKindTest( true) */
                                                                                                              {
                                                                                                                SimpleNode jjtn002 = new SimpleNode(this, JJTSCHEMAELEMENTTYPEFORKINDTEST);
                                                                                                                boolean jjtc002 = true;
                                                                                                                jjtree.openNodeScope(jjtn002);
                                                                                                              }
                                                                                                              try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                              {
                                                                                                                jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                jjtc002 = false;
                                                                                                              }
/*@egen*/{jjtn002.processToken(token);}/*@bgen(jjtree)*/
                                                                                                              } finally {
                                                                                                                if (jjtc002) {
                                                                                                                  jjtree.closeNodeScope(jjtn002,  true);
                                                                                                                }
                                                                                                              }
/*@egen*/                                     | <SchemaElementTypeForDocumentTest>/*@bgen(jjtree) #SchemaElementTypeForDocumentTest( true) */
                                                                                                                                                                                                                     {
                                                                                                                                                                                                                       SimpleNode jjtn003 = new SimpleNode(this, JJTSCHEMAELEMENTTYPEFORDOCUMENTTEST);
                                                                                                                                                                                                                       boolean jjtc003 = true;
                                                                                                                                                                                                                       jjtree.openNodeScope(jjtn003);
                                                                                                                                                                                                                     }
                                                                                                                                                                                                                     try {
/*@egen*//*@bgen(jjtree)*/
                                                                                                                                                                                                                     {
                                                                                                                                                                                                                       jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                       jjtc003 = false;
                                                                                                                                                                                                                     }
/*@egen*/{jjtn003.processToken(token);}/*@bgen(jjtree)*/
                                                                                                                                                                                                                     } finally {
                                                                                                                                                                                                                       if (jjtc003) {
                                                                                                                                                                                                                         jjtree.closeNodeScope(jjtn003,  true);
                                                                                                                                                                                                                       }
                                                                                                                                                                                                                     }
/*@egen*/                                        ) ElementDeclaration() <RparForKindTest>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ElementDeclaration()  :
{/*@bgen(jjtree) ElementDeclaration */
  SimpleNode jjtn000 = new SimpleNode(this, JJTELEMENTDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ElementDeclaration */
  try {
/*@egen*/
  ElementName()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void AttributeName()  :
{/*@bgen(jjtree) AttributeName */
  SimpleNode jjtn000 = new SimpleNode(this, JJTATTRIBUTENAME);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AttributeName */
  try {
/*@egen*/
  <QNameForItemType>/*@bgen(jjtree) #QNameForItemType( true) */
                    {
                      SimpleNode jjtn001 = new SimpleNode(this, JJTQNAMEFORITEMTYPE);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                    }
                    try {
/*@egen*//*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn001,  true);
                      jjtc001 = false;
                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001,  true);
                      }
                    }
/*@egen*/                        /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void ElementName()  :
{/*@bgen(jjtree) ElementName */
  SimpleNode jjtn000 = new SimpleNode(this, JJTELEMENTNAME);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ElementName */
  try {
/*@egen*/
  <QNameForItemType>/*@bgen(jjtree) #QNameForItemType( true) */
                    {
                      SimpleNode jjtn001 = new SimpleNode(this, JJTQNAMEFORITEMTYPE);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                    }
                    try {
/*@egen*//*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn001,  true);
                      jjtc001 = false;
                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001,  true);
                      }
                    }
/*@egen*/                        /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

void TypeName()  :
{/*@bgen(jjtree) TypeName */
  SimpleNode jjtn000 = new SimpleNode(this, JJTTYPENAME);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeName */
  try {
/*@egen*/
  <QNameForItemType>/*@bgen(jjtree) #QNameForItemType( true) */
                    {
                      SimpleNode jjtn001 = new SimpleNode(this, JJTQNAMEFORITEMTYPE);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                    }
                    try {
/*@egen*//*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn001,  true);
                      jjtc001 = false;
                    }
/*@egen*/{jjtn001.processToken(token);}/*@bgen(jjtree)*/
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001,  true);
                      }
                    }
/*@egen*/                        /*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}

