/* Generated By:JJTree&JavaCC: Do not edit this line. XPathTokenManager.java */
package org.priha.query.aqt.xpath;
import java.io.*;
import java.util.Stack;
import java.util.Vector;

/** Token Manager. */
public class XPathTokenManager implements XPathConstants
{
  private Stack stateStack = new Stack();
  // private Vector persistentLexStates  = new Vector();
  static final int PARENMARKER = 2000;

  /**
   * Push the current state onto the state stack.
   */
  private void pushState()
  {
    // System.err.println("pushing: "+curLexState); printLinePos();
    stateStack.addElement(new Integer(curLexState));
  }

  /**
   * Push the given state onto the state stack.
   * @param state Must be a valid state.
   */
  private void pushState(int state)
  {
    stateStack.push(new Integer(state));
  }

  /**
   * Pop the state on the state stack, and switch to that state.
   */
  private void popState()
  {
    if (stateStack.size() == 0)
    {
      printLinePos();
    }

    int nextState = ((Integer) stateStack.pop()).intValue();
    // System.err.println("pop "+nextState); printLinePos();
    if(nextState == PARENMARKER)
      printLinePos();
    SwitchTo(nextState);
  }

  /**
   * Push the given state onto the state stack.
   * @param state Must be a valid state.
   */
  private boolean isState(int state)
  {
        for (int i = 0; i < stateStack.size(); i++) {
        if(((Integer) stateStack.elementAt(i)).intValue() == state)
        {
                return true;
        }
        }
        return false;
  }

  /**
   * Push a parenthesis state.  This pushes, in addition to the 
   * lexical state value, a special marker that lets 
   * resetParenStateOrSwitch(int state)
   * know if it should pop and switch.  Used for the comma operator.
   */
  private void pushParenState(int commaState, int rparState)
  {
    stateStack.push(new Integer(rparState));
    stateStack.push(new Integer(commaState));
    stateStack.push(new Integer(PARENMARKER));
    SwitchTo(commaState);
  }


  /**
   * Print the current line position.
   */
  public void printLinePos()
  {
    System.err.println("Line: " + input_stream.getEndLine());
  }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_14(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_14(int pos, long active0)
{
   return jjMoveNfa_14(jjStopStringLiteralDfa_14(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_14()
{
   switch(curChar)
   {
      case 63:
         return jjMoveStringLiteralDfa1_14(0x20000L);
      default :
         return jjMoveNfa_14(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_14(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_14(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x20000L) != 0L)
            return jjStopAtPos(1, 17);
         break;
      default :
         break;
   }
   return jjStartNfa_14(0, active0);
}
static final long[] jjbitVec0 = {
   0x0L, 0xffffffffffffc000L, 0xfffff0007fffffffL, 0x7fffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0x0L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec3 = {
   0x7ff3ffffffffffffL, 0x7ffffffffffffdfeL, 0xffffffffffffffffL, 0xfc31ffffffffe00fL
};
static final long[] jjbitVec4 = {
   0xffffffL, 0xffffffffffff0000L, 0xf80001ffffffffffL, 0x3L
};
static final long[] jjbitVec5 = {
   0x0L, 0x0L, 0xfffffffbffffd740L, 0xffffd547f7fffL
};
static final long[] jjbitVec6 = {
   0xffffffffffffdffeL, 0xffffffffdffeffffL, 0xffffffffffff0003L, 0x33fcfffffff199fL
};
static final long[] jjbitVec7 = {
   0xfffe000000000000L, 0xfffffffe027fffffL, 0x7fL, 0x707ffffff0000L
};
static final long[] jjbitVec8 = {
   0x7fffffe00000000L, 0xfffe0000000007feL, 0x7cffffffffffffffL, 0x60002f7fffL
};
static final long[] jjbitVec9 = {
   0x23ffffffffffffe0L, 0x3ff000000L, 0x3c5fdfffff99fe0L, 0x30003b0000000L
};
static final long[] jjbitVec10 = {
   0x36dfdfffff987e0L, 0x1c00005e000000L, 0x23edfdfffffbafe0L, 0x100000000L
};
static final long[] jjbitVec11 = {
   0x23cdfdfffff99fe0L, 0x3b0000000L, 0x3bfc718d63dc7e0L, 0x0L
};
static final long[] jjbitVec12 = {
   0x3effdfffffddfe0L, 0x300000000L, 0x3effdfffffddfe0L, 0x340000000L
};
static final long[] jjbitVec13 = {
   0x3fffdfffffddfe0L, 0x300000000L, 0x0L, 0x0L
};
static final long[] jjbitVec14 = {
   0xd7ffffffffffeL, 0x3fL, 0x200d6caefef02596L, 0x1fL
};
static final long[] jjbitVec15 = {
   0x0L, 0x3fffffffeffL, 0x0L, 0x0L
};
static final long[] jjbitVec16 = {
   0x0L, 0x0L, 0xffffffff00000000L, 0x7fffffffff003fL
};
static final long[] jjbitVec17 = {
   0x500000000007daedL, 0x2c62ab82315001L, 0xf580c90040000000L, 0x201080000000007L
};
static final long[] jjbitVec18 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffff0fffffffL, 0x3ffffffffffffffL
};
static final long[] jjbitVec19 = {
   0xffffffff3f3fffffL, 0x3fffffffaaff3f3fL, 0x5fdfffffffffffffL, 0x1fdc1fff0fcf1fdcL
};
static final long[] jjbitVec20 = {
   0x4c4000000000L, 0x0L, 0x7L, 0x0L
};
static final long[] jjbitVec21 = {
   0x3fe00000080L, 0xfffffffffffffffeL, 0xfffffffe001fffffL, 0x7ffffffffffffffL
};
static final long[] jjbitVec22 = {
   0x1fffffffffe0L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec23 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffL, 0x0L
};
static final long[] jjbitVec24 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffL, 0x0L
};
static final long[] jjbitVec25 = {
   0x0L, 0x0L, 0x80000000000000L, 0xff7fffffff7fffffL
};
static final long[] jjbitVec26 = {
   0xffffffL, 0xffffffffffff0000L, 0xf80001ffffffffffL, 0x30003L
};
static final long[] jjbitVec27 = {
   0xffffffffffffffffL, 0x30000003fL, 0xfffffffbffffd7c0L, 0xffffd547f7fffL
};
static final long[] jjbitVec28 = {
   0xffffffffffffdffeL, 0xffffffffdffeffffL, 0xffffffffffff007bL, 0x33fcfffffff199fL
};
static final long[] jjbitVec29 = {
   0xfffe000000000000L, 0xfffffffe027fffffL, 0xbbfffffbfffe007fL, 0x707ffffff0016L
};
static final long[] jjbitVec30 = {
   0x7fffffe00000000L, 0xffff03ff0007ffffL, 0x7cffffffffffffffL, 0x3ff3dffffef7fffL
};
static final long[] jjbitVec31 = {
   0xf3ffffffffffffeeL, 0xffcfff1e3fffL, 0xd3c5fdfffff99feeL, 0x3ffcfb080399fL
};
static final long[] jjbitVec32 = {
   0xd36dfdfffff987e4L, 0x1fffc05e003987L, 0xf3edfdfffffbafeeL, 0xffc100003bbfL
};
static final long[] jjbitVec33 = {
   0xf3cdfdfffff99feeL, 0xffc3b0c0398fL, 0xc3bfc718d63dc7ecL, 0xff8000803dc7L
};
static final long[] jjbitVec34 = {
   0xc3effdfffffddfeeL, 0xffc300603ddfL, 0xc3effdfffffddfecL, 0xffc340603ddfL
};
static final long[] jjbitVec35 = {
   0xc3fffdfffffddfecL, 0xffc300803dcfL, 0x0L, 0x0L
};
static final long[] jjbitVec36 = {
   0x7ff7ffffffffffeL, 0x3ff7fffL, 0x3bff6caefef02596L, 0x3ff3f5fL
};
static final long[] jjbitVec37 = {
   0xc2a003ff03000000L, 0xfffe03fffffffeffL, 0x2fe3ffffebf0fdfL, 0x0L
};
static final long[] jjbitVec38 = {
   0x0L, 0x0L, 0x0L, 0x21fff0000L
};
static final long[] jjbitVec39 = {
   0x3efffe000000a0L, 0xfffffffffffffffeL, 0xfffffffe661fffffL, 0x77ffffffffffffffL
};
private int jjMoveNfa_14(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 239;
                  jjCheckNAdd(2);
                  break;
               case 1:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  kind = 46;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 46)
                     kind = 46;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa1_2(0x100L);
      default :
         return jjMoveNfa_2(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa2_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa3_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa4_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0);
}
private int jjMoveStringLiteralDfa4_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa5_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0);
}
private int jjMoveStringLiteralDfa5_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa6_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(4, active0);
}
private int jjMoveStringLiteralDfa6_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(4, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa7_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(5, active0);
}
private int jjMoveStringLiteralDfa7_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(5, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(6, active0);
      return 7;
   }
   switch(curChar)
   {
      case 103:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(7, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_2(6, active0);
}
static final long[] jjbitVec40 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec41 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 7;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(6);
                  }
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 0:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar != 34)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 3:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar != 39)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(6);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  jjAddStates(0, 1);
                  break;
               case 4:
                  jjAddStates(2, 3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(0, 1);
                  break;
               case 4:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(2, 3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_22()
{
   return jjMoveNfa_22(0, 0);
}
static final long[] jjbitVec42 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x7fffffffffffffffL
};
static final long[] jjbitVec43 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x3fffffffffffffffL
};
private int jjMoveNfa_22(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                     kind = 216;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 216;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 216)
                     kind = 216;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_19()
{
   switch(curChar)
   {
      case 62:
         return jjStopAtPos(0, 202);
      default :
         return 1;
   }
}
private final int jjStopStringLiteralDfa_21(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active3 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 214;
            return 2;
         }
         return -1;
      case 1:
         if ((active3 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 215;
            jjmatchedPos = 1;
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_21(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_21(jjStopStringLiteralDfa_21(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_21()
{
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa1_21(0x80000000000L);
      default :
         return jjMoveNfa_21(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_21(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_21(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa2_21(active3, 0x80000000000L);
      default :
         break;
   }
   return jjStartNfa_21(0, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa2_21(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_21(0, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_21(1, 0L, 0L, 0L, active3);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active3 & 0x80000000000L) != 0L)
            return jjStopAtPos(2, 235);
         break;
      default :
         break;
   }
   return jjStartNfa_21(1, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_21(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                  {
                     if (kind > 214)
                        kind = 214;
                  }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffffffff00002600L & l) != 0L && kind > 215)
                     kind = 215;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 214)
                     kind = 214;
                  break;
               case 2:
                  if (kind > 215)
                     kind = 215;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 214)
                     kind = 214;
                  break;
               case 2:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 215)
                     kind = 215;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_23(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active3 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 224;
            return -1;
         }
         return -1;
      case 1:
         if ((active3 & 0x200000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 224;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_23(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_23(jjStopStringLiteralDfa_23(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_23()
{
   switch(curChar)
   {
      case 58:
         return jjMoveStringLiteralDfa1_23(0x200000000L);
      default :
         return jjMoveNfa_23(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_23(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_23(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 58:
         return jjMoveStringLiteralDfa2_23(active3, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_23(0, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa2_23(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_23(0, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_23(1, 0L, 0L, 0L, active3);
      return 2;
   }
   switch(curChar)
   {
      case 41:
         if ((active3 & 0x200000000L) != 0L)
            return jjStopAtPos(2, 225);
         break;
      default :
         break;
   }
   return jjStartNfa_23(1, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_23(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                  {
                     if (kind > 224)
                        kind = 224;
                  }
                  if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 240)
                        kind = 240;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 240)
                     kind = 240;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 224;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 224)
                     kind = 224;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_5()
{
   switch(curChar)
   {
      case 41:
         return jjStopAtPos(0, 140);
      case 42:
         return jjStopAtPos(0, 103);
      default :
         return jjMoveNfa_5(9, 0);
   }
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 31;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 3:
                  if (curChar == 40 && kind > 158)
                     kind = 158;
                  break;
               case 11:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(6, 7);
                  break;
               case 12:
                  if (curChar == 40 && kind > 161)
                     kind = 161;
                  break;
               case 19:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 27:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(8, 9);
                  break;
               case 28:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 30:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjstateSet[jjnewStateCnt++] = 30;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 186)
                        kind = 186;
                     jjCheckNAddStates(10, 12);
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 1:
                  if (curChar == 116)
                     jjAddStates(4, 5);
                  break;
               case 4:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 5:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 10:
                  if (curChar == 116)
                     jjAddStates(6, 7);
                  break;
               case 13:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 14:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddStates(10, 12);
                  break;
               case 27:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(27, 28);
                  break;
               case 29:
               case 30:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAdd(30);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddStates(10, 12);
                  break;
               case 27:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(27, 28);
                  break;
               case 29:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAdd(30);
                  break;
               case 30:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAdd(30);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 31 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_25()
{
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa1_25(0x10000000000L);
      case 112:
         return jjMoveStringLiteralDfa1_25(0x8000000000L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_25(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa2_25(active3, 0x8000000000L);
      case 120:
         return jjMoveStringLiteralDfa2_25(active3, 0x10000000000L);
      default :
         return 2;
   }
}
private int jjMoveStringLiteralDfa2_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 2;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_25(active3, 0x8000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_25(active3, 0x10000000000L);
      default :
         return 3;
   }
}
private int jjMoveStringLiteralDfa3_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 3;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 3;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa4_25(active3, 0x10000000000L);
      case 103:
         return jjMoveStringLiteralDfa4_25(active3, 0x8000000000L);
      default :
         return 4;
   }
}
private int jjMoveStringLiteralDfa4_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 4;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 4;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa5_25(active3, 0x8000000000L);
      case 110:
         return jjMoveStringLiteralDfa5_25(active3, 0x10000000000L);
      default :
         return 5;
   }
}
private int jjMoveStringLiteralDfa5_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 5;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 5;
   }
   switch(curChar)
   {
      case 97:
         if ((active3 & 0x8000000000L) != 0L)
            return jjStopAtPos(5, 231);
         break;
      case 115:
         return jjMoveStringLiteralDfa6_25(active3, 0x10000000000L);
      default :
         return 6;
   }
   return 6;
}
private int jjMoveStringLiteralDfa6_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 6;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 6;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa7_25(active3, 0x10000000000L);
      default :
         return 7;
   }
}
private int jjMoveStringLiteralDfa7_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 7;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 7;
   }
   switch(curChar)
   {
      case 111:
         return jjMoveStringLiteralDfa8_25(active3, 0x10000000000L);
      default :
         return 8;
   }
}
private int jjMoveStringLiteralDfa8_25(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return 8;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 8;
   }
   switch(curChar)
   {
      case 110:
         if ((active3 & 0x10000000000L) != 0L)
            return jjStopAtPos(8, 232);
         break;
      default :
         return 9;
   }
   return 9;
}
private final int jjStopStringLiteralDfa_24(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active3 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 229;
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_24(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_24(jjStopStringLiteralDfa_24(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_24()
{
   switch(curChar)
   {
      case 58:
         return jjMoveStringLiteralDfa1_24(0x4000000000L);
      default :
         return jjMoveNfa_24(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_24(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_24(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 41:
         if ((active3 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 230);
         break;
      default :
         break;
   }
   return jjStartNfa_24(0, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_24(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                     kind = 229;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 229;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 229)
                     kind = 229;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_8()
{
   return jjMoveNfa_8(8, 0);
}
private int jjMoveNfa_8(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 135;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 8:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 3:
                  if (curChar == 40)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 41 && kind > 78)
                     kind = 78;
                  break;
               case 10:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(13, 14);
                  break;
               case 11:
                  if (curChar == 40 && kind > 151)
                     kind = 151;
                  break;
               case 15:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 25:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(15, 16);
                  break;
               case 26:
                  if (curChar == 40 && kind > 159)
                     kind = 159;
                  break;
               case 36:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(17, 18);
                  break;
               case 37:
                  if (curChar == 40 && kind > 163)
                     kind = 163;
                  break;
               case 48:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 60:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(19, 20);
                  break;
               case 61:
                  if (curChar == 40 && kind > 164)
                     kind = 164;
                  break;
               case 66:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(21, 22);
                  break;
               case 67:
                  if (curChar == 40 && kind > 165)
                     kind = 165;
                  break;
               case 75:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(23, 24);
                  break;
               case 76:
                  if (curChar == 40 && kind > 166)
                     kind = 166;
                  break;
               case 81:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(25, 26);
                  break;
               case 82:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 84:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(27, 28);
                  break;
               case 88:
                  if (curChar == 40)
                     jjCheckNAddTwoStates(89, 90);
                  break;
               case 89:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(89, 90);
                  break;
               case 90:
                  if (curChar == 41 && kind > 97)
                     kind = 97;
                  break;
               case 95:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(29, 30);
                  break;
               case 96:
                  if (curChar == 40 && kind > 157)
                     kind = 157;
                  break;
               case 104:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(31, 32);
                  break;
               case 105:
                  if (curChar == 40 && kind > 160)
                     kind = 160;
                  break;
               case 112:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 119:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(33, 34);
                  break;
               case 120:
                  if (curChar == 40 && kind > 162)
                     kind = 162;
                  break;
               case 129:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 8:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 184)
                        kind = 184;
                     jjCheckNAddStates(35, 37);
                  }
                  if (curChar == 115)
                     jjAddStates(38, 39);
                  else if (curChar == 101)
                     jjAddStates(40, 41);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 78;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 72;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 1:
                  if (curChar == 109)
                     jjAddStates(4, 5);
                  break;
               case 6:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 7:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 101)
                     jjAddStates(13, 14);
                  break;
               case 12:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 13:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 101)
                     jjAddStates(15, 16);
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 28:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 110)
                     jjAddStates(17, 18);
                  break;
               case 38:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 39:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 49:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 116)
                     jjAddStates(19, 20);
                  break;
               case 62:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 63:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 116)
                     jjAddStates(21, 22);
                  break;
               case 68:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 69:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 101)
                     jjAddStates(23, 24);
                  break;
               case 77:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 78:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjCheckNAddStates(35, 37);
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 83:
               case 84:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjCheckNAdd(84);
                  break;
               case 85:
                  if (curChar == 101)
                     jjAddStates(40, 41);
                  break;
               case 86:
                  if (curChar == 121)
                     jjAddStates(27, 28);
                  break;
               case 91:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 92:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 116)
                     jjAddStates(29, 30);
                  break;
               case 97:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 98:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 115)
                     jjAddStates(38, 39);
                  break;
               case 103:
                  if (curChar == 116)
                     jjAddStates(31, 32);
                  break;
               case 106:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 107:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 113:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 101)
                     jjAddStates(33, 34);
                  break;
               case 121:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 122:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 130:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 8:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjCheckNAddStates(35, 37);
                  break;
               case 81:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(81, 82);
                  break;
               case 83:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjCheckNAdd(84);
                  break;
               case 84:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 184)
                     kind = 184;
                  jjCheckNAdd(84);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 135 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_17()
{
   return jjMoveNfa_17(0, 0);
}
private int jjMoveNfa_17(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 2:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjstateSet[jjnewStateCnt++] = 4;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAddStates(42, 44);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
               case 4:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAddStates(42, 44);
                  break;
               case 1:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(4);
                  break;
               case 4:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_13(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active3 & 0x10000L) != 0L)
         {
            jjmatchedKind = 211;
            return -1;
         }
         return -1;
      case 1:
         if ((active3 & 0x10000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 211;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_13(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_13(jjStopStringLiteralDfa_13(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_13()
{
   switch(curChar)
   {
      case 60:
         jjmatchedKind = 197;
         return jjMoveStringLiteralDfa1_13(0x10000L, 0x40000000201L);
      case 123:
         jjmatchedKind = 205;
         return jjMoveStringLiteralDfa1_13(0x0L, 0x8000L);
      case 125:
         return jjMoveStringLiteralDfa1_13(0x0L, 0x10000L);
      default :
         return jjMoveNfa_13(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_13(long active0, long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(0, active0, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_13(active0, 0L, active3, 0x40000000001L);
      case 47:
         if ((active3 & 0x200L) != 0L)
            return jjStopAtPos(1, 201);
         break;
      case 63:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         break;
      case 123:
         if ((active3 & 0x8000L) != 0L)
            return jjStopAtPos(1, 207);
         break;
      case 125:
         if ((active3 & 0x10000L) != 0L)
            return jjStopAtPos(1, 208);
         break;
      default :
         break;
   }
   return jjStartNfa_13(0, active0, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa2_13(long old0, long active0, long old3, long active3)
{
   if (((active0 &= old0) | (active3 &= old3)) == 0L)
      return jjStartNfa_13(0, old0, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(1, 0L, 0L, 0L, active3);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_13(active3, 0x40000000000L);
      case 91:
         return jjMoveStringLiteralDfa3_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(1, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa3_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(1, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(2, 0L, 0L, 0L, active3);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active3 & 0x40000000000L) != 0L)
            return jjStopAtPos(3, 234);
         break;
      case 67:
         return jjMoveStringLiteralDfa4_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(2, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa4_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(2, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(3, 0L, 0L, 0L, active3);
      return 4;
   }
   switch(curChar)
   {
      case 68:
         return jjMoveStringLiteralDfa5_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(3, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa5_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(3, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(4, 0L, 0L, 0L, active3);
      return 5;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa6_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(4, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa6_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(4, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(5, 0L, 0L, 0L, active3);
      return 6;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa7_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(5, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa7_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(5, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(6, 0L, 0L, 0L, active3);
      return 7;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa8_13(active3, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(6, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa8_13(long old3, long active3)
{
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_13(6, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(7, 0L, 0L, 0L, active3);
      return 8;
   }
   switch(curChar)
   {
      case 91:
         if ((active3 & 0x1L) != 0L)
            return jjStopAtPos(8, 192);
         break;
      default :
         break;
   }
   return jjStartNfa_13(7, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_13(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 21;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                  {
                     if (kind > 211)
                        kind = 211;
                  }
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 14;
                  if (curChar == 38)
                     jjAddStates(45, 48);
                  break;
               case 2:
                  if (curChar == 59 && kind > 194)
                     kind = 194;
                  break;
               case 14:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(15, 17);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(15, 16);
                  break;
               case 16:
                  if (curChar == 59 && kind > 195)
                     kind = 195;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(18, 16);
                  break;
               case 19:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 20:
                  if ((0xffffffff00002600L & l) != 0L && kind > 211)
                     kind = 211;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 211)
                     kind = 211;
                  break;
               case 1:
                  if (curChar == 116)
                     jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 108)
                     jjCheckNAdd(1);
                  break;
               case 4:
                  if (curChar == 103)
                     jjCheckNAdd(1);
                  break;
               case 5:
                  if (curChar == 111)
                     jjCheckNAdd(1);
                  break;
               case 6:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 97)
                     jjAddStates(49, 50);
                  break;
               case 9:
                  if (curChar == 112)
                     jjCheckNAdd(2);
                  break;
               case 10:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 115)
                     jjCheckNAdd(2);
                  break;
               case 12:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 17:
                  if (curChar == 120)
                     jjCheckNAdd(18);
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(18, 16);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 211)
                     kind = 211;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 21 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x9000b3200000000L) != 0L || (active1 & 0xf80000000000348L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            return 36;
         }
         if ((active0 & 0x8100000000L) != 0L)
         {
            jjmatchedKind = 250;
            return 34;
         }
         if ((active0 & 0x80000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            return 41;
         }
         if ((active0 & 0x240000000000L) != 0L || (active1 & 0x1000000000020L) != 0L)
         {
            jjmatchedKind = 250;
            return 18;
         }
         if ((active0 & 0x400004000000000L) != 0L || (active1 & 0x40000000000080L) != 0L)
         {
            jjmatchedKind = 250;
            return 86;
         }
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x4L) != 0L)
         {
            jjmatchedKind = 250;
            return 26;
         }
         if ((active1 & 0x410L) != 0L)
         {
            jjmatchedKind = 250;
            return 66;
         }
         return -1;
      case 1:
         if ((active0 & 0x2000000000L) != 0L || (active1 & 0xfc1000000000304L) != 0L || (active2 & 0x8000000000000L) != 0L)
            return 36;
         if ((active1 & 0x400L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 250;
               jjmatchedPos = 1;
            }
            return 65;
         }
         if ((active0 & 0xf800f5200000000L) != 0L || (active1 & 0xd8L) != 0L || (active2 & 0x10000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 250;
               jjmatchedPos = 1;
            }
            return 36;
         }
         if ((active0 & 0x200000000000L) != 0L || (active1 & 0x20L) != 0L)
            return 17;
         if ((active0 & 0x8100000000L) != 0L)
            return 33;
         return -1;
      case 2:
         if ((active0 & 0xb1000000000L) != 0L)
            return 36;
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 2;
            return 64;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 2;
            return 32;
         }
         if ((active0 & 0xf80044200000000L) != 0L || (active1 & 0xf8L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 2;
            return 36;
         }
         return -1;
      case 3:
         if ((active0 & 0x600040000000000L) != 0L || (active1 & 0x400L) != 0L)
            return 36;
         if ((active0 & 0x980004200000000L) != 0L || (active1 & 0xf8L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 3;
            return 36;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 3;
            return 28;
         }
         return -1;
      case 4:
         if ((active1 & 0x48L) != 0L)
            return 36;
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 4;
            return 97;
         }
         if ((active0 & 0x980004200000000L) != 0L || (active1 & 0xb0L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 4;
            return 36;
         }
         return -1;
      case 5:
         if ((active0 & 0x100000000000000L) != 0L || (active1 & 0x80L) != 0L)
            return 36;
         if ((active0 & 0x880004300000000L) != 0L || (active1 & 0x30L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 5;
            return 36;
         }
         return -1;
      case 6:
         if ((active0 & 0x800000100000000L) != 0L)
            return 36;
         if ((active0 & 0x80004200000000L) != 0L || (active1 & 0x30L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 6;
            return 36;
         }
         return -1;
      case 7:
         if ((active0 & 0x4000000000L) != 0L)
            return 36;
         if ((active0 & 0x80000200000000L) != 0L || (active1 & 0x30L) != 0L || (active2 & 0x18000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 7;
            return 36;
         }
         return -1;
      case 8:
         if ((active0 & 0x80000200000000L) != 0L || (active1 & 0x30L) != 0L || (active2 & 0x8000000000000L) != 0L)
            return 36;
         if ((active2 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 250;
            jjmatchedPos = 8;
            return 36;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_4()
{
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x2000000000000L, 0x0L);
      case 42:
         return jjStopAtPos(0, 44);
      case 43:
         return jjStopAtPos(0, 128);
      case 45:
         return jjStopAtPos(0, 127);
      case 47:
         jjmatchedKind = 108;
         return jjMoveStringLiteralDfa1_4(0x0L, 0x200000000000L, 0x0L);
      case 58:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x1000000000000000L, 0x0L);
      case 60:
         jjmatchedKind = 125;
         return jjMoveStringLiteralDfa1_4(0x0L, 0xc000000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 110);
      case 62:
         jjmatchedKind = 126;
         return jjMoveStringLiteralDfa1_4(0x0L, 0x30000000000000L, 0x0L);
      case 63:
         return jjStopAtPos(0, 131);
      case 91:
         return jjStopAtPos(0, 137);
      case 93:
         return jjStopAtPos(0, 138);
      case 97:
         return jjMoveStringLiteralDfa1_4(0x10000000000L, 0x300L, 0x8000000000000L);
      case 99:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x410L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_4(0x800020000000000L, 0x0L, 0x10000000000000L);
      case 101:
         return jjMoveStringLiteralDfa1_4(0x400004000000000L, 0x40000000000080L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x300000000000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_4(0x240000000000L, 0x1000000000020L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_4(0x0L, 0xc00000000000000L, 0x0L);
      case 109:
         return jjMoveStringLiteralDfa1_4(0x80000000000L, 0x0L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_4(0x2000000000L, 0x80000000000000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_4(0x8100000000L, 0x0L, 0x0L);
      case 114:
         return jjMoveStringLiteralDfa1_4(0x100000000000000L, 0x0L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_4(0x80000000000000L, 0x0L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_4(0x200000000000000L, 0x4L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_4(0x200000000L, 0x40L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x8L, 0x0L);
      case 121:
         return jjMoveStringLiteralDfa1_4(0x1000000000L, 0x0L, 0x0L);
      case 124:
         return jjStopAtPos(0, 134);
      default :
         return jjMoveNfa_4(8, 0);
   }
}
private int jjMoveStringLiteralDfa1_4(long active0, long active1, long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, active0, active1, active2);
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active1 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 109);
         break;
      case 60:
         if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 115);
         break;
      case 61:
         if ((active1 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 113);
         else if ((active1 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 114);
         else if ((active1 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 116);
         else if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(1, 124);
         break;
      case 62:
         if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(1, 117);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_4(active0, 0x80000000000000L, active1, 0x400L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa2_4(active0, 0x40000000000L, active1, 0L, active2, 0L);
      case 101:
         if ((active1 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 119, 36);
         else if ((active1 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 121, 36);
         else if ((active1 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 123, 36);
         return jjMoveStringLiteralDfa2_4(active0, 0x900001000000000L, active1, 0L, active2, 0x10000000000000L);
      case 104:
         return jjMoveStringLiteralDfa2_4(active0, 0x200000000000000L, active1, 0x8L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_4(active0, 0x20000000000L, active1, 0L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_4(active0, 0x400000000000000L, active1, 0L, active2, 0L);
      case 110:
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_4(active0, 0x10200000000L, active1, 0x60L, active2, 0L);
      case 111:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 37, 36);
         else if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_4(1, 66, 36);
         return jjMoveStringLiteralDfa2_4(active0, 0x80000000000L, active1, 0x10L, active2, 0L);
      case 113:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 118, 36);
         break;
      case 114:
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 39;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_4(active0, 0x100000000L, active1, 0L, active2, 0L);
      case 115:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 1;
         }
         else if ((active1 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 112, 36);
         return jjMoveStringLiteralDfa2_4(active0, 0L, active1, 0L, active2, 0x8000000000000L);
      case 116:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_4(1, 73, 36);
         else if ((active1 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 120, 36);
         else if ((active1 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_4(1, 122, 36);
         break;
      case 120:
         return jjMoveStringLiteralDfa2_4(active0, 0x4000000000L, active1, 0x80L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_4(0, active0, active1, active2);
}
private int jjMoveStringLiteralDfa2_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(0, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, active0, active1, active2);
      return 2;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa3_4(active0, 0L, active1, 0x80L, active2, 0x8000000000000L);
      case 100:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 40, 36);
         else if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 43, 36);
         return jjMoveStringLiteralDfa3_4(active0, 0x100000000L, active1, 0L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_4(active0, 0x200000000000000L, active1, 0x8L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa3_4(active0, 0x800000000000000L, active1, 0L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa3_4(active0, 0x40000000000L, active1, 0x40L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_4(active0, 0L, active1, 0x10L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_4(active0, 0x200000000L, active1, 0L, active2, 0L);
      case 115:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 36, 36);
         return jjMoveStringLiteralDfa3_4(active0, 0x400000000000000L, active1, 0x400L, active2, 0x10000000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_4(active0, 0x180004000000000L, active1, 0x20L, active2, 0L);
      case 118:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_4(2, 41, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_4(1, active0, active1, active2);
}
private int jjMoveStringLiteralDfa3_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(1, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(2, active0, active1, active2);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_4(active0, 0x800000000000000L, active1, 0L, active2, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0L, active2, 0x10000000000000L);
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_4(3, 58, 36);
         else if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_4(3, 74, 36);
         return jjMoveStringLiteralDfa4_4(active0, 0x4100000000L, active1, 0xa0L, active2, 0x8000000000000L);
      case 105:
         return jjMoveStringLiteralDfa4_4(active0, 0x80000000000000L, active1, 0L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0x10L, active2, 0L);
      case 110:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_4(3, 57, 36);
         break;
      case 111:
         return jjMoveStringLiteralDfa4_4(active0, 0L, active1, 0x40L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa4_4(active0, 0x200000000L, active1, 0x8L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa4_4(active0, 0x100000000000000L, active1, 0L, active2, 0L);
      case 118:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_4(3, 42, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_4(2, active0, active1, active2);
}
private int jjMoveStringLiteralDfa4_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(2, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(3, active0, active1, active2);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0x10L, active2, 0L);
      case 100:
         return jjMoveStringLiteralDfa5_4(active0, 0x200000000L, active1, 0L, active2, 0L);
      case 101:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_4(4, 67, 36);
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0L, active2, 0x10000000000000L);
      case 110:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_4(4, 70, 36);
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0L, active2, 0x8000000000000L);
      case 112:
         return jjMoveStringLiteralDfa5_4(active0, 0L, active1, 0x80L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_4(active0, 0x100004100000000L, active1, 0x20L, active2, 0L);
      case 115:
         return jjMoveStringLiteralDfa5_4(active0, 0x80000000000000L, active1, 0L, active2, 0L);
      case 117:
         return jjMoveStringLiteralDfa5_4(active0, 0x800000000000000L, active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_4(3, active0, active1, active2);
}
private int jjMoveStringLiteralDfa5_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(3, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(4, active0, active1, active2);
      return 5;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa6_4(active0, 0L, active1, 0L, active2, 0x8000000000000L);
      case 101:
         return jjMoveStringLiteralDfa6_4(active0, 0x300000000L, active1, 0L, active2, 0L);
      case 102:
         return jjMoveStringLiteralDfa6_4(active0, 0x80000000000000L, active1, 0L, active2, 0L);
      case 108:
         return jjMoveStringLiteralDfa6_4(active0, 0x800000000000000L, active1, 0L, active2, 0L);
      case 110:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_4(5, 56, 36);
         return jjMoveStringLiteralDfa6_4(active0, 0x4000000000L, active1, 0L, active2, 0x10000000000000L);
      case 115:
         return jjMoveStringLiteralDfa6_4(active0, 0L, active1, 0x20L, active2, 0L);
      case 116:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_4(5, 71, 36);
         return jjMoveStringLiteralDfa6_4(active0, 0L, active1, 0x10L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_4(4, active0, active1, active2);
}
private int jjMoveStringLiteralDfa6_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(4, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(5, active0, active1, active2);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_4(active0, 0x4000000000L, active1, 0L, active2, 0L);
      case 100:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_4(6, 32, 36);
         return jjMoveStringLiteralDfa7_4(active0, 0L, active1, 0L, active2, 0x10000000000000L);
      case 101:
         return jjMoveStringLiteralDfa7_4(active0, 0L, active1, 0x20L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa7_4(active0, 0x80000000000000L, active1, 0x10L, active2, 0x8000000000000L);
      case 114:
         return jjMoveStringLiteralDfa7_4(active0, 0x200000000L, active1, 0L, active2, 0L);
      case 116:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_4(6, 59, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_4(5, active0, active1, active2);
}
private int jjMoveStringLiteralDfa7_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(5, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(6, active0, active1, active2);
      return 7;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa8_4(active0, 0L, active1, 0x20L, active2, 0L);
      case 101:
         return jjMoveStringLiteralDfa8_4(active0, 0x80000200000000L, active1, 0L, active2, 0L);
      case 105:
         return jjMoveStringLiteralDfa8_4(active0, 0L, active1, 0L, active2, 0x10000000000000L);
      case 108:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_4(7, 38, 36);
         break;
      case 110:
         return jjMoveStringLiteralDfa8_4(active0, 0L, active1, 0L, active2, 0x8000000000000L);
      case 111:
         return jjMoveStringLiteralDfa8_4(active0, 0L, active1, 0x10L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_4(6, active0, active1, active2);
}
private int jjMoveStringLiteralDfa8_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(6, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(7, active0, active1, active2);
      return 8;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_4(8, 33, 36);
         break;
      case 103:
         if ((active2 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_4(8, 179, 36);
         break;
      case 110:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_4(8, 68, 36);
         return jjMoveStringLiteralDfa9_4(active0, 0L, active1, 0L, active2, 0x10000000000000L);
      case 115:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_4(8, 55, 36);
         break;
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_4(8, 69, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_4(7, active0, active1, active2);
}
private int jjMoveStringLiteralDfa9_4(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_4(7, old0, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(8, 0L, 0L, active2);
      return 9;
   }
   switch(curChar)
   {
      case 103:
         if ((active2 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_4(9, 180, 36);
         break;
      default :
         break;
   }
   return jjStartNfa_4(8, 0L, 0L, active2);
}
private int jjStartNfaWithStates_4(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_4(state, pos + 1);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 97;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 28:
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  else if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(29, 31);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(0);
                  }
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 10:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(51, 52);
                  break;
               case 21:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(53, 54);
                  break;
               case 29:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(29, 31);
                  break;
               case 43:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(55, 56);
                  break;
               case 45:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(57, 58);
                  break;
               case 58:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(59, 60);
                  break;
               case 68:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(61, 62);
                  break;
               case 75:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(63, 64);
                  break;
               case 88:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(65, 66);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 28:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 64:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 68;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 41:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 54;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 17:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 33:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 86:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 95;
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 26:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 67;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 97:
               case 36:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 250)
                     kind = 250;
                  jjCheckNAdd(36);
                  break;
               case 18:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 34:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 101)
                     jjAddStates(67, 68);
                  else if (curChar == 99)
                     jjAddStates(69, 70);
                  else if (curChar == 115)
                     jjAddStates(71, 72);
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 32:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 250)
                        kind = 250;
                     jjCheckNAdd(36);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 1:
                  if (curChar == 101 && kind > 52)
                     kind = 52;
                  break;
               case 2:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 11:
                  if (curChar == 102 && kind > 75)
                     kind = 75;
                  break;
               case 12:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 14:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 19:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 115 && kind > 146)
                     kind = 146;
                  break;
               case 23:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 25:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 30:
                  if (curChar == 121 && kind > 177)
                     kind = 177;
                  break;
               case 31:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 35:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 37:
                  if (curChar == 115)
                     jjAddStates(71, 72);
                  break;
               case 38:
                  if (curChar == 112 && kind > 52)
                     kind = 52;
                  break;
               case 39:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 42:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 44:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 46:
                  if (curChar == 121 && kind > 178)
                     kind = 178;
                  break;
               case 47:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 49:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 53:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 99)
                     jjAddStates(69, 70);
                  break;
               case 57:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 59:
                  if (curChar == 115 && kind > 76)
                     kind = 76;
                  break;
               case 60:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 62:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 67:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 69:
                  if (curChar == 115 && kind > 145)
                     kind = 145;
                  break;
               case 70:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 72:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 101)
                     jjAddStates(67, 68);
                  break;
               case 74:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 76:
                  if (curChar == 116 && kind > 181)
                     kind = 181;
                  break;
               case 77:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 85:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 89:
                  if (curChar == 116 && kind > 182)
                     kind = 182;
                  break;
               case 90:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 95:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 97 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_18()
{
   return jjMoveNfa_18(0, 0);
}
private int jjMoveNfa_18(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L && kind > 217)
                     kind = 217;
                  break;
               case 2:
                  if (curChar == 62 && kind > 193)
                     kind = 193;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 217)
                     kind = 217;
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 3:
                  if (kind > 217)
                     kind = 217;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 217)
                     kind = 217;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_9(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_9(int pos, long active0, long active1)
{
   return jjMoveNfa_9(jjStopStringLiteralDfa_9(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_9()
{
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa1_9(0x1L);
      default :
         return jjMoveNfa_9(15, 0);
   }
}
private int jjMoveStringLiteralDfa1_9(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa2_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa3_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa4_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 115:
         return jjMoveStringLiteralDfa5_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 112:
         return jjMoveStringLiteralDfa6_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa8_9(active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_9(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_9(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_9(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_9(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x1L) != 0L)
            return jjStopAtPos(8, 64);
         break;
      default :
         break;
   }
   return jjStartNfa_9(7, 0L, active1);
}
private int jjMoveNfa_9(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 16;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 15:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(73, 74);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 15:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 3:
                  if (curChar == 116 && kind > 94)
                     kind = 94;
                  break;
               case 4:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 11:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 16 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_10()
{
   return jjMoveNfa_10(1, 0);
}
private int jjMoveNfa_10(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 3:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_15(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_15(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_15(jjStopStringLiteralDfa_15(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_15()
{
   switch(curChar)
   {
      case 34:
         return jjStopAtPos(0, 173);
      case 39:
         return jjStopAtPos(0, 218);
      case 47:
         return jjMoveStringLiteralDfa1_15(0x100L);
      case 61:
         return jjStopAtPos(0, 203);
      case 62:
         return jjStopAtPos(0, 199);
      default :
         return jjMoveNfa_15(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_15(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 62:
         if ((active3 & 0x100L) != 0L)
            return jjStopAtPos(1, 200);
         break;
      default :
         break;
   }
   return jjStartNfa_15(0, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_15(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 238;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 3:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_7()
{
   return jjMoveNfa_7(1, 0);
}
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 12;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 3:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 5:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjCheckNAddStates(75, 77);
                  break;
               case 2:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(2, 3);
                  break;
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 185)
                     kind = 185;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1)
{
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3()
{
   switch(curChar)
   {
      case 61:
         return jjStopAtPos(0, 111);
      default :
         return jjMoveNfa_3(7, 0);
   }
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 9;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(6);
                  }
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 0:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar != 34)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 3:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar != 39)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(6);
                  break;
               case 8:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjstateSet[jjnewStateCnt++] = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
               case 8:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjCheckNAdd(8);
                  break;
               case 1:
                  jjAddStates(0, 1);
                  break;
               case 4:
                  jjAddStates(2, 3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjCheckNAdd(8);
                  break;
               case 1:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(0, 1);
                  break;
               case 4:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(2, 3);
                  break;
               case 8:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjCheckNAdd(8);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 9 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(6, 0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 8;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 0:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar != 34)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 3:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar != 39)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 7:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 190)
                     kind = 190;
                  jjstateSet[jjnewStateCnt++] = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
               case 7:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 190)
                     kind = 190;
                  jjCheckNAdd(7);
                  break;
               case 1:
                  jjAddStates(0, 1);
                  break;
               case 4:
                  jjAddStates(2, 3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 190)
                     kind = 190;
                  jjCheckNAdd(7);
                  break;
               case 1:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(0, 1);
                  break;
               case 4:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(2, 3);
                  break;
               case 7:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 190)
                     kind = 190;
                  jjCheckNAdd(7);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 8 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0, long active1)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0, long active1)
{
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_6()
{
   switch(curChar)
   {
      case 112:
         return jjMoveStringLiteralDfa1_6(0x4000000000000000L);
      case 115:
         return jjMoveStringLiteralDfa1_6(0x8000000000000000L);
      default :
         return jjMoveNfa_6(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_6(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa2_6(active0, 0x4000000000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_6(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa3_6(active0, 0x4000000000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_6(active0, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 105:
         return jjMoveStringLiteralDfa4_6(active0, 0x8000000000000000L);
      case 115:
         return jjMoveStringLiteralDfa4_6(active0, 0x4000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa5_6(active0, 0x4000000000000000L);
      case 112:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(4, 63);
         break;
      default :
         break;
   }
   return jjStartNfa_6(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa6_6(active0, 0x4000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 118:
         return jjMoveStringLiteralDfa7_6(active0, 0x4000000000000000L);
      default :
         break;
   }
   return jjStartNfa_6(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_6(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_6(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_6(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(7, 62);
         break;
      default :
         break;
   }
   return jjStartNfa_6(6, active0, 0L);
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 12;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active2 & 0x800L) != 0L)
            return 807;
         if ((active2 & 0x1800000000000L) != 0L)
            return 808;
         if ((active1 & 0x4000000000L) != 0L)
            return 62;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjStopAtPos(0, 49);
      case 37:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x100000000000L, 0x0L);
      case 40:
         jjmatchedKind = 135;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x0L, 0x1080000000L);
      case 41:
         return jjStartNfaWithStates_0(0, 139, 807);
      case 42:
         return jjStartNfaWithStates_0(0, 102, 62);
      case 43:
         return jjStopAtPos(0, 130);
      case 44:
         return jjStopAtPos(0, 169);
      case 45:
         return jjStopAtPos(0, 129);
      case 46:
         jjmatchedKind = 175;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x0L, 0x1000000000000L, 0x0L);
      case 47:
         jjmatchedKind = 106;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000000000L, 0x0L, 0x0L);
      case 59:
         return jjStopAtPos(0, 171);
      case 60:
         jjmatchedKind = 198;
         return jjMoveStringLiteralDfa1_0(0x8000L, 0x0L, 0x8000000000000000L, 0x20000000000L);
      case 64:
         return jjStopAtPos(0, 136);
      case 123:
         return jjStopAtPos(0, 206);
      case 125:
         return jjStopAtPos(0, 242);
      default :
         return jjMoveNfa_0(19, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2, long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2, active3);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x8000000000000000L, active3, 0x20000000000L);
      case 37:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0x100000000000L, active3, 0L);
      case 46:
         if ((active2 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 176);
         break;
      case 47:
         if ((active1 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 107);
         break;
      case 58:
         if ((active3 & 0x1000000000L) != 0L)
         {
            jjmatchedKind = 228;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0L, active2, 0L, active3, 0x80000000L);
      case 63:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2, active3);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2, long old3, long active3)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, 0L, 0L, active2, active3);
      return 2;
   }
   switch(curChar)
   {
      case 37:
         if ((active2 & 0x100000000000L) != 0L)
            return jjStopAtPos(2, 172);
         break;
      case 45:
         return jjMoveStringLiteralDfa3_0(active2, 0L, active3, 0x20000000000L);
      case 58:
         if ((active3 & 0x80000000L) != 0L)
            return jjStopAtPos(2, 223);
         break;
      case 91:
         return jjMoveStringLiteralDfa3_0(active2, 0x8000000000000000L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, 0L, 0L, active2, active3);
}
private int jjMoveStringLiteralDfa3_0(long old2, long active2, long old3, long active3)
{
   if (((active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(1, 0L, 0L, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, 0L, 0L, active2, active3);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active3 & 0x20000000000L) != 0L)
            return jjStopAtPos(3, 233);
         break;
      case 67:
         return jjMoveStringLiteralDfa4_0(active2, 0x8000000000000000L, active3, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, 0L, 0L, active2, active3);
}
private int jjMoveStringLiteralDfa4_0(long old2, long active2, long old3, long active3)
{
   if (((active2 &= old2) | (active3 &= old3)) == 0L)
      return jjStartNfa_0(2, 0L, 0L, old2, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, 0L, active2, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 68:
         return jjMoveStringLiteralDfa5_0(active2, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, 0L, active2, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old2, long active2)
{
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_0(3, 0L, 0L, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, 0L, active2, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa6_0(active2, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, 0L, active2, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old2, long active2)
{
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_0(4, 0L, 0L, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, 0L, active2, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 84:
         return jjMoveStringLiteralDfa7_0(active2, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, 0L, active2, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old2, long active2)
{
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_0(5, 0L, 0L, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, 0L, active2, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 65:
         return jjMoveStringLiteralDfa8_0(active2, 0x8000000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, 0L, active2, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old2, long active2)
{
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_0(6, 0L, 0L, old2, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, 0L, 0L, active2, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 91:
         if ((active2 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(8, 191);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, 0L, 0L, active2, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 807;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 84);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAdd(96);
                  }
                  break;
               case 807:
               case 38:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(38, 40);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAddStates(81, 90);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(36);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(91, 93);
                  else if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 62;
                  else if (curChar == 41)
                     jjCheckNAddTwoStates(38, 40);
                  else if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 0:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar != 34)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 3:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar != 39)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 7:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(94, 95);
                  break;
               case 21:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(96, 97);
                  break;
               case 36:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(36);
                  break;
               case 37:
                  if (curChar == 41)
                     jjCheckNAddTwoStates(38, 40);
                  break;
               case 42:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(98, 99);
                  break;
               case 51:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(100, 101);
                  break;
               case 61:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(21, 22);
                  break;
               case 67:
                  if (curChar == 36 && kind > 144)
                     kind = 144;
                  break;
               case 71:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(102, 103);
                  break;
               case 72:
                  if (curChar == 40 && kind > 153)
                     kind = 153;
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAddStates(81, 90);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if (curChar != 46)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(80);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(80);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(35, 37);
                  break;
               case 82:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(83, 84);
                  break;
               case 85:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(86);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(86);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(104, 107);
                  break;
               case 88:
                  if (curChar == 46)
                     jjCheckNAddStates(108, 110);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(108, 110);
                  break;
               case 91:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(92);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(92, 93);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 251)
                     kind = 251;
                  jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 95:
                  if (curChar == 46)
                     jjCheckNAddStates(91, 93);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(96);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 84);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 101:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddStates(111, 113);
                  break;
               case 102:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 103:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 104:
                  if (curChar != 34)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(102);
                  break;
               case 105:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(106, 107);
                  break;
               case 106:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(106, 107);
                  break;
               case 107:
                  if (curChar != 39)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(105);
                  break;
               case 109:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(114, 115);
                  break;
               case 110:
                  if (curChar == 58 && kind > 21)
                     kind = 21;
                  break;
               case 111:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 120:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(116, 117);
                  break;
               case 121:
                  if (curChar == 58 && kind > 24)
                     kind = 24;
                  break;
               case 122:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 130:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(118, 119);
                  break;
               case 131:
                  if (curChar == 58 && kind > 29)
                     kind = 29;
                  break;
               case 132:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 136:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 139:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 148:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(120, 121);
                  break;
               case 149:
                  if (curChar == 40 && kind > 80)
                     kind = 80;
                  break;
               case 158:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(122, 123);
                  break;
               case 160:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(124, 125);
                  break;
               case 161:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 163:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddStates(126, 128);
                  break;
               case 164:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(164, 165);
                  break;
               case 174:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(129, 130);
                  break;
               case 185:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(131, 132);
                  break;
               case 186:
                  if (curChar == 58 && kind > 18)
                     kind = 18;
                  break;
               case 187:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 192:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(133, 134);
                  break;
               case 200:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(135, 136);
                  break;
               case 201:
                  if (curChar == 40 && kind > 154)
                     kind = 154;
                  break;
               case 209:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(137, 138);
                  break;
               case 210:
                  if (curChar == 58 && kind > 19)
                     kind = 19;
                  break;
               case 211:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 221:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(139, 140);
                  break;
               case 222:
                  if (curChar == 58 && kind > 23)
                     kind = 23;
                  break;
               case 223:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 227:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 230:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 241:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(141, 142);
                  break;
               case 256:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(143, 144);
                  break;
               case 271:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(145, 146);
                  break;
               case 273:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(147, 148);
                  break;
               case 291:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(149, 150);
                  break;
               case 302:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 316:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(151, 152);
                  break;
               case 335:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(153, 154);
                  break;
               case 350:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(155, 156);
                  break;
               case 354:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 365:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(157, 158);
                  break;
               case 381:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(159, 160);
                  break;
               case 383:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(161, 162);
                  break;
               case 405:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(163, 164);
                  break;
               case 407:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(165, 166);
                  break;
               case 427:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(167, 168);
                  break;
               case 429:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(169, 170);
                  break;
               case 450:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(171, 172);
                  break;
               case 451:
                  if (curChar == 40 && kind > 150)
                     kind = 150;
                  break;
               case 455:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 464:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(173, 174);
                  break;
               case 473:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(175, 176);
                  break;
               case 475:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(177, 178);
                  break;
               case 476:
                  if (curChar == 36 && kind > 183)
                     kind = 183;
                  break;
               case 491:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(179, 180);
                  break;
               case 492:
                  if (curChar == 58 && kind > 20)
                     kind = 20;
                  break;
               case 493:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 499:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(181, 182);
                  break;
               case 500:
                  if (curChar == 58 && kind > 26)
                     kind = 26;
                  break;
               case 501:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 508:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 518:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(183, 184);
                  break;
               case 519:
                  if (curChar == 58 && kind > 28)
                     kind = 28;
                  break;
               case 520:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 529:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(185, 186);
                  break;
               case 531:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  break;
               case 532:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(532, 533);
                  break;
               case 544:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 555:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(190, 191);
                  break;
               case 567:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 578:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(192, 193);
                  break;
               case 579:
                  if (curChar == 40 && kind > 156)
                     kind = 156;
                  break;
               case 590:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 602:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(194, 195);
                  break;
               case 603:
                  if (curChar == 58 && kind > 22)
                     kind = 22;
                  break;
               case 604:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 608:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(196, 197);
                  break;
               case 609:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 616:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 623:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(198, 199);
                  break;
               case 624:
                  if (curChar == 40 && kind > 82)
                     kind = 82;
                  break;
               case 633:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 640:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(200, 201);
                  break;
               case 641:
                  if (curChar == 36 && kind > 141)
                     kind = 141;
                  break;
               case 646:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(202, 203);
                  break;
               case 647:
                  if (curChar == 58 && kind > 25)
                     kind = 25;
                  break;
               case 648:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 647;
                  break;
               case 655:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 665:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(204, 205);
                  break;
               case 666:
                  if (curChar == 58 && kind > 27)
                     kind = 27;
                  break;
               case 667:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 676:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(206, 207);
                  break;
               case 677:
                  if (curChar == 36 && kind > 143)
                     kind = 143;
                  break;
               case 681:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(208, 209);
                  break;
               case 682:
                  if (curChar == 40 && kind > 79)
                     kind = 79;
                  break;
               case 689:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(210, 211);
                  break;
               case 691:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(212, 213);
                  break;
               case 692:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 693;
                  break;
               case 694:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddStates(214, 216);
                  break;
               case 695:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(695, 696);
                  break;
               case 703:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(217, 218);
                  break;
               case 711:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(219, 220);
                  break;
               case 712:
                  if (curChar == 36 && kind > 142)
                     kind = 142;
                  break;
               case 718:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(221, 222);
                  break;
               case 723:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(223, 224);
                  break;
               case 724:
                  if (curChar == 40 && kind > 155)
                     kind = 155;
                  break;
               case 728:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(225, 226);
                  break;
               case 729:
                  if (curChar == 40 && kind > 168)
                     kind = 168;
                  break;
               case 740:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(227, 228);
                  break;
               case 752:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(229, 230);
                  break;
               case 764:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(231, 232);
                  break;
               case 765:
                  if (curChar == 40 && kind > 167)
                     kind = 167;
                  break;
               case 767:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(233, 234);
                  break;
               case 768:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 769:
                  if (curChar == 42 && kind > 104)
                     kind = 104;
                  break;
               case 770:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(235, 236);
                  break;
               case 771:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 773:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 774:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(774, 775);
                  break;
               case 775:
                  if (curChar == 40 && kind > 188)
                     kind = 188;
                  break;
               case 776:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjAddStates(240, 241);
                  break;
               case 777:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 779:
                  if ((0x3ff600000000000L & l) == 0L)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 782:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(242, 243);
                  break;
               case 791:
                  if ((0x100002600L & l) != 0L)
                     jjAddStates(244, 246);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 807:
               case 40:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 19:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 236)
                        kind = 236;
                     jjCheckNAddStates(247, 256);
                  }
                  if (curChar == 118)
                     jjAddStates(257, 258);
                  else if (curChar == 105)
                     jjAddStates(259, 261);
                  else if (curChar == 116)
                     jjAddStates(262, 264);
                  else if (curChar == 101)
                     jjAddStates(265, 268);
                  else if (curChar == 102)
                     jjAddStates(269, 271);
                  else if (curChar == 115)
                     jjAddStates(272, 275);
                  else if (curChar == 112)
                     jjAddStates(276, 281);
                  else if (curChar == 100)
                     jjAddStates(282, 297);
                  else if (curChar == 99)
                     jjAddStates(298, 300);
                  else if (curChar == 97)
                     jjAddStates(301, 307);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 74;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 68;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 59;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 48;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 1:
                  jjAddStates(0, 1);
                  break;
               case 4:
                  jjAddStates(2, 3);
                  break;
               case 6:
                  if (curChar == 121)
                     jjAddStates(94, 95);
                  break;
               case 8:
                  if (curChar == 110 && kind > 6)
                     kind = 6;
                  break;
               case 9:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 16:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if (curChar == 101)
                     jjAddStates(96, 97);
                  break;
               case 22:
                  if (curChar == 101 && kind > 11)
                     kind = 11;
                  break;
               case 23:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 32:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 39:
                  if (curChar == 115 && kind > 77)
                     kind = 77;
                  break;
               case 41:
                  if (curChar == 100)
                     jjAddStates(98, 99);
                  break;
               case 43:
                  if (curChar == 123 && kind > 83)
                     kind = 83;
                  break;
               case 44:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 45:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 100)
                     jjAddStates(100, 101);
                  break;
               case 52:
                  if (curChar == 123 && kind > 84)
                     kind = 84;
                  break;
               case 53:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 54:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 63:
               case 64:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAdd(64);
                  break;
               case 65:
                  if (curChar == 116)
                     jjAddStates(21, 22);
                  break;
               case 68:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 69:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 101)
                     jjAddStates(102, 103);
                  break;
               case 73:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 74:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 84:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(308, 309);
                  break;
               case 90:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(310, 311);
                  break;
               case 93:
               case 94:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 251)
                     kind = 251;
                  jjCheckNAdd(94);
                  break;
               case 99:
                  if (curChar == 97)
                     jjAddStates(301, 307);
                  break;
               case 100:
                  if (curChar == 116)
                     jjAddStates(111, 113);
                  break;
               case 103:
                  jjAddStates(312, 313);
                  break;
               case 106:
                  jjAddStates(314, 315);
                  break;
               case 108:
                  if (curChar == 101)
                     jjAddStates(114, 115);
                  break;
               case 112:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 113:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 114)
                     jjAddStates(116, 117);
                  break;
               case 123:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 124:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 102)
                     jjAddStates(118, 119);
                  break;
               case 133:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 134:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 140:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 101)
                     jjAddStates(120, 121);
                  break;
               case 150:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 151:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 159:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(316, 320);
                  break;
               case 160:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 162:
               case 163:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(126, 128);
                  break;
               case 165:
                  if (curChar == 123 && kind > 86)
                     kind = 86;
                  break;
               case 166:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 167:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 101)
                     jjAddStates(129, 130);
                  break;
               case 175:
                  if (curChar == 123 && kind > 91)
                     kind = 91;
                  break;
               case 176:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 177:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 99)
                     jjAddStates(298, 300);
                  break;
               case 184:
                  if (curChar == 100)
                     jjAddStates(131, 132);
                  break;
               case 188:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 189:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 116)
                     jjAddStates(133, 134);
                  break;
               case 193:
                  if (curChar == 123 && kind > 89)
                     kind = 89;
                  break;
               case 194:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 195:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 116)
                     jjAddStates(135, 136);
                  break;
               case 202:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 203:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 100)
                     jjAddStates(282, 297);
                  break;
               case 208:
                  if (curChar == 116)
                     jjAddStates(137, 138);
                  break;
               case 212:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 213:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 102)
                     jjAddStates(139, 140);
                  break;
               case 224:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 225:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 228:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 231:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 242:
                  if (curChar == 110 && kind > 30)
                     kind = 30;
                  break;
               case 243:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 251:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 257:
                  if (curChar == 103 && kind > 31)
                     kind = 31;
                  break;
               case 258:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 266:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 274:
                  if (curChar == 114 && kind > 34)
                     kind = 34;
                  break;
               case 275:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 280:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 286:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if (curChar == 115 && kind > 35)
                     kind = 35;
                  break;
               case 293:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 295:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 303:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 311:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if (curChar == 110 && kind > 54)
                     kind = 54;
                  break;
               case 318:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 330:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 336:
                  if (curChar == 101 && kind > 60)
                     kind = 60;
                  break;
               case 337:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 344:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 345:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 351:
                  if (curChar == 105 && kind > 61)
                     kind = 61;
                  break;
               case 352:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 355:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 360:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 366:
                  if (curChar == 101 && kind > 65)
                     kind = 65;
                  break;
               case 367:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 376:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 382:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 384:
                  if (curChar == 110 && kind > 93)
                     kind = 93;
                  break;
               case 385:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 391:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 394:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 400:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 406:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 408:
                  if (curChar == 116 && kind > 95)
                     kind = 95;
                  break;
               case 409:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 416:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 422:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 428:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 430:
                  if (curChar == 110 && kind > 96)
                     kind = 96;
                  break;
               case 431:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 439:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 445:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if (curChar == 101)
                     jjAddStates(171, 172);
                  break;
               case 452:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 453:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 456:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 116)
                     jjAddStates(173, 174);
                  break;
               case 465:
                  if (curChar == 123 && kind > 152)
                     kind = 152;
                  break;
               case 466:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 467:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 474:
                  if (curChar == 101)
                     jjAddStates(177, 178);
                  break;
               case 477:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 478:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 484:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 485:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if (curChar == 112)
                     jjAddStates(276, 281);
                  break;
               case 490:
                  if (curChar == 116)
                     jjAddStates(179, 180);
                  break;
               case 494:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 495:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if (curChar == 103)
                     jjAddStates(181, 182);
                  break;
               case 502:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 503:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 507:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 509:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 513:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if (curChar == 103)
                     jjAddStates(183, 184);
                  break;
               case 521:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 522:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 526:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 530:
               case 531:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(187, 189);
                  break;
               case 533:
                  if (curChar == 123 && kind > 87)
                     kind = 87;
                  break;
               case 534:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 535:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 536:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 537:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 536;
                  break;
               case 538:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 539:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 540:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 541:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 542:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 542;
                  break;
               case 545:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 546:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 547:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 548:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 549:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 551:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 552:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 553:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 554:
                  if (curChar == 110)
                     jjAddStates(190, 191);
                  break;
               case 556:
                  if (curChar == 123 && kind > 88)
                     kind = 88;
                  break;
               case 557:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 558:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 559:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 558;
                  break;
               case 560:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 563:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 562;
                  break;
               case 564:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 566:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 568:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 567;
                  break;
               case 569:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 571:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 572:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 573:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 574:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 576:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if (curChar == 110)
                     jjAddStates(192, 193);
                  break;
               case 580:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 577;
                  break;
               case 581:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 582:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 583:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 585:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 586:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 589:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 591:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 592:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 593:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 594:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 595:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 598:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 599:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if (curChar == 115)
                     jjAddStates(272, 275);
                  break;
               case 601:
                  if (curChar == 102)
                     jjAddStates(194, 195);
                  break;
               case 605:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 606:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if (curChar == 116)
                     jjAddStates(196, 197);
                  break;
               case 610:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 611:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 612:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 613:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 614:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 615:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 617:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 618:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 619:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 620:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 621:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 622:
                  if (curChar == 101)
                     jjAddStates(198, 199);
                  break;
               case 625:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 626:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 629:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 632:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 634:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 636:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 637:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 638:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 639:
                  if (curChar == 101)
                     jjAddStates(200, 201);
                  break;
               case 642:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 643:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 644:
                  if (curChar == 102)
                     jjAddStates(269, 271);
                  break;
               case 645:
                  if (curChar == 103)
                     jjAddStates(202, 203);
                  break;
               case 649:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 650:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 651:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 653:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 654:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 656:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 657:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 660:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 659;
                  break;
               case 661:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 662:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 661;
                  break;
               case 663:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 664:
                  if (curChar == 103)
                     jjAddStates(204, 205);
                  break;
               case 668:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 669:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 668;
                  break;
               case 670:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 671:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 672:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 671;
                  break;
               case 673:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 672;
                  break;
               case 674:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 675:
                  if (curChar == 114)
                     jjAddStates(206, 207);
                  break;
               case 678:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 675;
                  break;
               case 679:
                  if (curChar == 101)
                     jjAddStates(265, 268);
                  break;
               case 680:
                  if (curChar == 116)
                     jjAddStates(208, 209);
                  break;
               case 683:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 680;
                  break;
               case 684:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 684;
                  break;
               case 686:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 685;
                  break;
               case 687:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 688:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 690:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(321, 325);
                  break;
               case 691:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(691, 692);
                  break;
               case 693:
               case 694:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(214, 216);
                  break;
               case 696:
                  if (curChar == 123 && kind > 85)
                     kind = 85;
                  break;
               case 697:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 688;
                  break;
               case 698:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 697;
                  break;
               case 699:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 700:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 701:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 700;
                  break;
               case 702:
                  if (curChar == 116)
                     jjAddStates(217, 218);
                  break;
               case 704:
                  if (curChar == 123 && kind > 90)
                     kind = 90;
                  break;
               case 705:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 706:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 706;
                  break;
               case 708:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 707;
                  break;
               case 709:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 710:
                  if (curChar == 121)
                     jjAddStates(219, 220);
                  break;
               case 713:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 710;
                  break;
               case 714:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 713;
                  break;
               case 715:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 716:
                  if (curChar == 116)
                     jjAddStates(262, 264);
                  break;
               case 717:
                  if (curChar == 116)
                     jjAddStates(221, 222);
                  break;
               case 719:
                  if (curChar == 123 && kind > 92)
                     kind = 92;
                  break;
               case 720:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 721:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 720;
                  break;
               case 722:
                  if (curChar == 116)
                     jjAddStates(223, 224);
                  break;
               case 725:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 726:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 725;
                  break;
               case 727:
                  if (curChar == 104)
                     jjAddStates(225, 226);
                  break;
               case 730:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 731:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 732:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 733:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 734:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 735:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 736:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 737:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 738:
                  if (curChar == 105)
                     jjAddStates(259, 261);
                  break;
               case 739:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 740;
                  break;
               case 741:
                  if (curChar == 97 && kind > 98)
                     kind = 98;
                  break;
               case 742:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 741;
                  break;
               case 743:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 744:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 745:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 744;
                  break;
               case 746:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 747:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 739;
                  break;
               case 748:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 749:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 750:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 751:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 753:
                  if (curChar == 101 && kind > 99)
                     kind = 99;
                  break;
               case 754:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 753;
                  break;
               case 755:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 754;
                  break;
               case 756:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 757:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 758:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 759:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 760:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 761:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 762:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 761;
                  break;
               case 763:
                  if (curChar == 102)
                     jjAddStates(231, 232);
                  break;
               case 766:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAddStates(247, 256);
                  break;
               case 767:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(767, 768);
                  break;
               case 770:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(770, 771);
                  break;
               case 772:
               case 773:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(237, 239);
                  break;
               case 776:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(776, 777);
                  break;
               case 778:
               case 779:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(779);
                  break;
               case 780:
                  if (curChar == 118)
                     jjAddStates(257, 258);
                  break;
               case 781:
                  if (curChar == 101)
                     jjAddStates(242, 243);
                  break;
               case 783:
                  if (curChar == 123 && kind > 147)
                     kind = 147;
                  break;
               case 784:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 785:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 787:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 786;
                  break;
               case 788:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 789:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 792:
                  if (curChar == 120 && kind > 148)
                     kind = 148;
                  break;
               case 793:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 794:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 795:
                  if (curChar == 116 && kind > 148)
                     kind = 148;
                  break;
               case 796:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 797:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 798:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 799:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 799;
                  break;
               case 801:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 802:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 803:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 802;
                  break;
               case 804:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 805:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 806:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 805;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 19:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAddStates(247, 256);
                  break;
               case 1:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(0, 1);
                  break;
               case 4:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(2, 3);
                  break;
               case 63:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAdd(64);
                  break;
               case 64:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 105)
                     kind = 105;
                  jjCheckNAdd(64);
                  break;
               case 103:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(312, 313);
                  break;
               case 106:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                     jjAddStates(314, 315);
                  break;
               case 159:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(316, 320);
                  break;
               case 160:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 162:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(126, 128);
                  break;
               case 163:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(126, 128);
                  break;
               case 530:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(187, 189);
                  break;
               case 531:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(187, 189);
                  break;
               case 690:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(321, 325);
                  break;
               case 691:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(691, 692);
                  break;
               case 693:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(214, 216);
                  break;
               case 694:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(214, 216);
                  break;
               case 767:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(767, 768);
                  break;
               case 770:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(770, 771);
                  break;
               case 772:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(237, 239);
                  break;
               case 773:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(237, 239);
                  break;
               case 776:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(776, 777);
                  break;
               case 778:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(779);
                  break;
               case 779:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 236)
                     kind = 236;
                  jjCheckNAdd(779);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 807 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_20(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      case 0:
         if ((active3 & 0x8040000L) != 0L)
         {
            jjmatchedKind = 213;
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_20(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_20(jjStopStringLiteralDfa_20(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_20()
{
   switch(curChar)
   {
      case 39:
         jjmatchedKind = 213;
         return jjMoveStringLiteralDfa1_20(0x40000L);
      default :
         return jjMoveNfa_20(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_20(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_20(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 39:
         if ((active3 & 0x40000L) != 0L)
            return jjStopAtPos(1, 210);
         break;
      default :
         break;
   }
   return jjStartNfa_20(0, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_20(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                     kind = 213;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 213;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 213)
                     kind = 213;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_11(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_11(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_11(jjStopStringLiteralDfa_11(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_11()
{
   switch(curChar)
   {
      case 42:
         return jjStopAtPos(0, 132);
      case 43:
         return jjStopAtPos(0, 133);
      default :
         return jjMoveNfa_11(1, 0);
   }
}
private int jjMoveNfa_11(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7ffff3ffffffffffL & l) != 0L)
                  {
                     if (kind > 14)
                        kind = 14;
                  }
                  if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(0);
                  }
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  kind = 14;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 14)
                     kind = 14;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_16(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_16(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_16(jjStopStringLiteralDfa_16(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_16()
{
   switch(curChar)
   {
      case 34:
         jjmatchedKind = 174;
         return jjMoveStringLiteralDfa1_16(0x20000L);
      default :
         return jjMoveNfa_16(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_16(long active3)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 34:
         if ((active3 & 0x20000L) != 0L)
            return jjStopAtPos(1, 209);
         break;
      default :
         break;
   }
   return jjStartNfa_16(0, 0L, 0L, 0L, active3);
}
private int jjMoveNfa_16(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffff00002600L & l) != 0L)
                     kind = 212;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 212;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 212)
                     kind = 212;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_12(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_12(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_12(jjStopStringLiteralDfa_12(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_12()
{
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 170);
      case 63:
         return jjStopAtPos(0, 53);
      default :
         return jjMoveNfa_12(0, 0);
   }
}
private int jjMoveNfa_12(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  kind = 12;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   1, 2, 4, 5, 2, 3, 11, 12, 27, 28, 27, 28, 30, 10, 11, 25, 
   26, 36, 37, 60, 61, 66, 67, 75, 76, 81, 82, 87, 88, 95, 96, 104, 
   105, 119, 120, 81, 82, 84, 117, 134, 93, 101, 1, 2, 4, 3, 4, 7, 
   8, 10, 13, 10, 12, 21, 23, 43, 51, 45, 47, 58, 60, 68, 70, 75, 
   83, 88, 93, 86, 96, 66, 72, 41, 55, 2, 9, 2, 3, 5, 98, 90, 
   93, 77, 78, 79, 81, 82, 84, 87, 88, 90, 93, 96, 97, 98, 7, 14, 
   21, 30, 42, 43, 51, 52, 71, 72, 87, 88, 90, 93, 89, 90, 93, 101, 
   102, 105, 109, 111, 120, 122, 130, 132, 148, 149, 158, 159, 160, 161, 163, 164, 
   165, 174, 175, 185, 187, 192, 193, 200, 201, 209, 211, 221, 223, 241, 249, 256, 
   264, 271, 284, 273, 278, 291, 309, 316, 328, 335, 343, 350, 358, 365, 374, 381, 
   398, 383, 392, 405, 420, 407, 414, 427, 443, 429, 437, 450, 451, 464, 465, 473, 
   483, 475, 476, 491, 493, 499, 501, 518, 520, 529, 530, 531, 532, 533, 555, 556, 
   578, 579, 602, 604, 608, 609, 623, 624, 640, 641, 646, 648, 665, 667, 676, 677, 
   681, 682, 689, 690, 691, 692, 694, 695, 696, 703, 704, 711, 712, 718, 719, 723, 
   724, 728, 729, 740, 746, 752, 758, 764, 765, 767, 768, 770, 771, 773, 774, 775, 
   776, 777, 782, 783, 791, 794, 800, 767, 768, 770, 771, 773, 774, 775, 776, 777, 
   779, 789, 806, 750, 762, 763, 721, 726, 737, 687, 701, 709, 715, 663, 674, 678, 
   606, 621, 638, 643, 497, 516, 527, 553, 576, 599, 219, 239, 254, 269, 289, 314, 
   333, 348, 363, 379, 403, 425, 448, 462, 471, 488, 190, 198, 206, 100, 118, 128, 
   146, 156, 172, 182, 85, 86, 91, 92, 103, 104, 106, 107, 160, 161, 163, 164, 
   165, 691, 692, 694, 695, 696, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec4[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec5[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec7[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec8[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec9[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec10[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec12[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec13[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec14[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec15[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec21[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec24[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec25[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec3[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec29[i2] & l2) != 0L);
      case 6:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 9:
         return ((jjbitVec31[i2] & l2) != 0L);
      case 10:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec33[i2] & l2) != 0L);
      case 12:
         return ((jjbitVec34[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 15:
         return ((jjbitVec37[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 17:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 30:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 32:
         return ((jjbitVec38[i2] & l2) != 0L);
      case 33:
         return ((jjbitVec20[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec39[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 159:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec24[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec41[i2] & l2) != 0L);
      default :
         if ((jjbitVec40[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec41[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec43[i2] & l2) != 0L);
      default :
         if ((jjbitVec42[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, 
"\145\156\143\157\144\151\156\147", null, null, null, null, null, null, "\74\77", "\74\77", "\77\76", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, 
"\157\162\144\145\162\145\144", "\165\156\157\162\144\145\162\145\144", null, null, "\171\145\163", 
"\156\157", "\145\170\164\145\162\156\141\154", "\157\162", "\141\156\144", 
"\144\151\166", "\151\144\151\166", "\155\157\144", "\52", "\151\156", null, null, null, 
"\44", null, null, null, "\77", null, "\163\141\164\151\163\146\151\145\163", 
"\162\145\164\165\162\156", "\164\150\145\156", "\145\154\163\145", "\144\145\146\141\165\154\164", null, 
null, "\160\162\145\163\145\162\166\145", "\163\164\162\151\160", 
"\156\141\155\145\163\160\141\143\145", null, "\164\157", "\167\150\145\162\145", 
"\143\157\154\154\141\164\151\157\156", "\151\156\164\145\162\163\145\143\164", "\165\156\151\157\156", 
"\145\170\143\145\160\164", "\141\163", "\141\164", "\143\141\163\145", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\52", "\52", null, null, "\57", "\57\57", 
"\57", "\57\57", "\75", "\75", "\151\163", "\41\75", "\74\75", "\74\74", "\76\75", 
"\76\76", "\145\161", "\156\145", "\147\164", "\147\145", "\154\164", "\154\145", 
"\72\75", "\74", "\76", "\55", "\53", "\55", "\53", "\77", "\52", "\53", "\174", "\50", 
"\100", "\133", "\135", "\51", "\51", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\54", "\54", "\73", "\45\45\45", "\42", "\42", 
"\56", "\56\56", null, null, "\141\163\143\145\156\144\151\156\147", 
"\144\145\163\143\145\156\144\151\156\147", null, null, null, null, null, null, null, null, null, null, 
"\74\41\133\103\104\101\124\101\133", "\74\41\133\103\104\101\124\101\133", null, null, null, null, "\74", "\74", 
"\76", "\57\76", "\74\57", "\76", "\75", null, "\173", "\173", "\173\173", 
"\175\175", "\42\42", "\47\47", null, null, null, null, null, null, null, "\47", "\47", 
null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\74\41\55\55", "\74\41\55\55", "\55\55\76", null, null, null, null, null, null, "\175", null, 
null, null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "KINDTESTFORPI",
   "XQUERYVERSION",
   "NAMESPACEDECL",
   "OPERATOR",
   "KINDTEST",
   "XMLSPACE_DECL",
   "SINGLETYPE",
   "ITEMTYPE",
   "NAMESPACEKEYWORD",
   "VARNAME",
   "OCCURRENCEINDICATOR",
   "CLOSEKINDTEST",
   "ELEMENT_CONTENT",
   "PROCESSING_INSTRUCTION",
   "START_TAG",
   "QUOT_ATTRIBUTE_CONTENT",
   "EXT_NAME",
   "CDATA_SECTION",
   "END_TAG",
   "APOS_ATTRIBUTE_CONTENT",
   "XML_COMMENT",
   "PROCESSING_INSTRUCTION_CONTENT",
   "EXT_CONTENT",
   "EXPR_COMMENT",
   "EXT_KEY",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 4, 4, 4, 4, -1, 2, -1, -1, -1, 0, 3, -1, -1, 4, 14, 14, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 10, 
   4, -1, 0, -1, 4, 0, 0, 0, 0, -1, 6, 3, 0, 0, 3, 3, 0, 0, -1, 0, 0, 0, 8, 0, 8, 
   8, 7, 8, 11, 5, 5, 5, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, 9, 9, 4, 9, 9, 
   -1, -1, 4, 12, 4, 4, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, -1, -1, -1, 4, 4, 0, -1, -1, 0, -1, 4, -1, 10, 10, 10, 10, 7, 8, -1, -1, -1, 
   5, 5, -1, 5, 5, 5, 1, 5, -1, 5, 5, -1, 5, 1, 5, 5, 5, -1, -1, -1, 5, -1, -1, 16, 15, 
   4, 4, 0, 0, -1, -1, -1, -1, 10, 11, 4, 12, 23, -1, -1, -1, 18, 18, -1, -1, -1, -1, 15, 15, 13, 
   -1, 19, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 15, -1, -1, -1, 25, -1, 
   -1, -1, -1, 24, -1, -1, 17, 17, 21, 21, -1, 4, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, 4, 
};
static final long[] jjtoToken = {
   0xfff67fffffff8fffL, 0xffffffcfffffffffL, 0xf7ffffffffdfffffL, 0x4de000fffffefL, 
};
static final long[] jjtoSkip = {
   0x5000L, 0x0L, 0x800000000000000L, 0xc0101f380000000L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 0x800000000000000L, 0x101f380000000L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[807];
private final int[] jjstateSet = new int[1614];
private final StringBuffer jjimage = new StringBuffer();
private StringBuffer image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public XPathTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public XPathTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 807; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 26 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
     case 7:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_7();
       break;
     case 8:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_8();
       break;
     case 9:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_9();
       break;
     case 10:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_10();
       break;
     case 11:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_11();
       break;
     case 12:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_12();
       break;
     case 13:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_13();
       break;
     case 14:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_14();
       break;
     case 15:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_15();
       break;
     case 16:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_16();
       break;
     case 17:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_17();
       break;
     case 18:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_18();
       break;
     case 19:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_19();
       break;
     case 20:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_20();
       break;
     case 21:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_21();
       break;
     case 22:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_22();
       break;
     case 23:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_23();
       break;
     case 24:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_24();
       break;
     case 25:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_25();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 14 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                     input_stream.backup(1);
         break;
      case 223 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                              pushState();
         break;
      case 225 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                            popState();
         break;
      case 228 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           pushState();
         break;
      case 230 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                         popState();
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 15 :
        image.append(jjstrLiteralImages[15]);
        lengthOfMatch = jjstrLiteralImages[15].length();
                                         pushState(OPERATOR);
         break;
      case 16 :
        image.append(jjstrLiteralImages[16]);
        lengthOfMatch = jjstrLiteralImages[16].length();
                                                          pushState();
         break;
      case 17 :
        image.append(jjstrLiteralImages[17]);
        lengthOfMatch = jjstrLiteralImages[17].length();
                                       popState();
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              pushState(OPERATOR);
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  pushState(OPERATOR);
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                           pushState(OPERATOR);
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                               pushState(OPERATOR);
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              pushState(OPERATOR);
         break;
      case 84 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  pushState(OPERATOR);
         break;
      case 85 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                        pushState(OPERATOR);
         break;
      case 86 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                            pushState(OPERATOR);
         break;
      case 87 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                    pushState(OPERATOR);
         break;
      case 88 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          pushState(OPERATOR);
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                pushState(OPERATOR);
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                pushState(OPERATOR);
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                    pushState(OPERATOR);
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                          pushState(OPERATOR);
         break;
      case 140 :
        image.append(jjstrLiteralImages[140]);
        lengthOfMatch = jjstrLiteralImages[140].length();
                             popState();
         break;
      case 147 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  pushState(OPERATOR);
         break;
      case 148 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                   pushState(OPERATOR);
         break;
      case 150 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                     pushState(OPERATOR);
         break;
      case 151 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                pushState(OCCURRENCEINDICATOR);
         break;
      case 152 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  pushState(OPERATOR);
         break;
      case 153 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                        pushState(OPERATOR);
         break;
      case 154 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              pushState(OPERATOR);
         break;
      case 155 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                        pushState(OPERATOR);
         break;
      case 156 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                           pushState(OPERATOR);
         break;
      case 157 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         pushState(OCCURRENCEINDICATOR);
         break;
      case 158 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                             pushState(KINDTEST);
         break;
      case 159 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                             pushState(OCCURRENCEINDICATOR);
         break;
      case 160 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                      pushState(OCCURRENCEINDICATOR);
         break;
      case 161 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                          pushState(KINDTEST);
         break;
      case 162 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                          pushState(OCCURRENCEINDICATOR);
         break;
      case 163 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                      pushState(OCCURRENCEINDICATOR);
         break;
      case 164 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                   pushState(OCCURRENCEINDICATOR);
         break;
      case 165 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         pushState(OCCURRENCEINDICATOR);
         break;
      case 166 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                   pushState(OCCURRENCEINDICATOR);
         break;
      case 191 :
        image.append(jjstrLiteralImages[191]);
        lengthOfMatch = jjstrLiteralImages[191].length();
                                       pushState(OPERATOR);
         break;
      case 192 :
        image.append(jjstrLiteralImages[192]);
        lengthOfMatch = jjstrLiteralImages[192].length();
                                                        pushState();
         break;
      case 193 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       popState();
         break;
      case 197 :
        image.append(jjstrLiteralImages[197]);
        lengthOfMatch = jjstrLiteralImages[197].length();
                          pushState();
         break;
      case 198 :
        image.append(jjstrLiteralImages[198]);
        lengthOfMatch = jjstrLiteralImages[198].length();
                              pushState(OPERATOR);
         break;
      case 200 :
        image.append(jjstrLiteralImages[200]);
        lengthOfMatch = jjstrLiteralImages[200].length();
                            popState();
         break;
      case 202 :
        image.append(jjstrLiteralImages[202]);
        lengthOfMatch = jjstrLiteralImages[202].length();
                         popState();
         break;
      case 205 :
        image.append(jjstrLiteralImages[205]);
        lengthOfMatch = jjstrLiteralImages[205].length();
                    pushState();
         break;
      case 206 :
        image.append(jjstrLiteralImages[206]);
        lengthOfMatch = jjstrLiteralImages[206].length();
                                 pushState(OPERATOR);
         break;
      case 233 :
        image.append(jjstrLiteralImages[233]);
        lengthOfMatch = jjstrLiteralImages[233].length();
                                pushState(OPERATOR);
         break;
      case 234 :
        image.append(jjstrLiteralImages[234]);
        lengthOfMatch = jjstrLiteralImages[234].length();
                                                 pushState();
         break;
      case 235 :
        image.append(jjstrLiteralImages[235]);
        lengthOfMatch = jjstrLiteralImages[235].length();
                             popState();
         break;
      case 242 :
        image.append(jjstrLiteralImages[242]);
        lengthOfMatch = jjstrLiteralImages[242].length();
                    popState();
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
